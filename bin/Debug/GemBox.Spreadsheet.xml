<?xml version="1.0"?>
<doc>
  <assembly>
    <name>GemBox.Spreadsheet</name>
  </assembly>
  <members>
    <member name="T:GemBox.Spreadsheet.AbstractRange">
      <summary>
            Base class for classes representing one or more excel cells.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.#ctor(GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Internal.
            </summary>
      <param name="parent">
      </param>
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Name">
      <summary>
            Gets the name of <see cref="T:GemBox.Spreadsheet.AbstractRange" /> instance.
            </summary>
      <remarks>
            A cell name includes its column letter and row number. For example, the name of a cell in row 0 and column 0 is "A1".
            A cell range name includes the column letter and row number of first (top-left) and last (bottom-right) cell.
            For example, the name of range [0, 0]...[4, 4] is "A1:E5", of range [0, 0]...[4, MaxColumns-1] is "1:5",
            of range [0, 0]...[MaxRows-1, 4] is "A:E", of single cell range [4, 4]...[4, 4] is "E5".
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Comment">
      <summary>
            Gets or sets comment.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Hyperlink">
      <summary>
            Gets or sets hyperlink.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Formula">
      <summary>
            Gets or sets formula string.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.FormulaR1C1">
      <summary>
            Gets or sets a formula string in R1C1 notation.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Value">
      <summary>
            Gets or sets cell value on one or more excel cells.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.Calculate">
      <summary>
            Calculates formula for one or more excel cells.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.Insert(GemBox.Spreadsheet.InsertShiftDirection)">
      <summary>
            Inserts a range by shifting cells in the specified direction.
            </summary>
      <param name="direction">The shift direction.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.Remove(GemBox.Spreadsheet.RemoveShiftDirection)">
      <summary>
            Removes a range by shifting cells in the specified direction.
            </summary>
      <param name="direction">The shift direction.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Style">
      <summary>
            Gets or sets the cell formatting of one or more cells.
            </summary>
      <value>
            The cell formatting of one or more cells.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="P:GemBox.Spreadsheet.AbstractRange.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="P:GemBox.Spreadsheet.AbstractRange.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="P:GemBox.Spreadsheet.AbstractRange.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="P:GemBox.Spreadsheet.AbstractRange.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="P:GemBox.Spreadsheet.AbstractRange.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="P:GemBox.Spreadsheet.AbstractRange.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.CharacterRanges">
      <summary>
            Returns all <see cref="T:GemBox.Spreadsheet.FormattedCharacterRange" /> objects that represents a range of characters within the cell text.
            </summary>
      <value>
            All <see cref="T:GemBox.Spreadsheet.FormattedCharacterRange" /> objects that represents a range of characters within the cell text.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.GetCharacters(System.Int32)">
      <summary>
            Returns a <see cref="T:GemBox.Spreadsheet.FormattedCharacterRange" /> object that represents a range of characters within the cell text.
            The range starts at a specified character position.
            </summary>
      <param name="startIndex">The zero-based starting character position.</param>
      <returns>New <see cref="T:GemBox.Spreadsheet.FormattedCharacterRange" /> object.</returns>
      <remarks>This method only works on cell with string value.</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument <paramref name="startIndex" /> is less than zero or is equal to or greater than 32767.</exception>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/excel-cell-inline-formatting/203">In-line Text Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.GetCharacters(System.Int32,System.Int32)">
      <summary>
            Returns a <see cref="T:GemBox.Spreadsheet.FormattedCharacterRange" /> object that represents a range of characters within the cell text.
            The range starts at a specified character position and has a specified length.
            </summary>
      <param name="startIndex">The zero-based starting character position.</param>
      <param name="length">The number of characters.</param>
      <returns>New <see cref="T:GemBox.Spreadsheet.FormattedCharacterRange" /> object.</returns>
      <remarks>This method only works on cell with string value.</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument <paramref name="startIndex" /> is less than zero or is equal to or greater than 32767.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument <paramref name="length" /> is equal to or less than zero or is greater than 32767.</exception>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/excel-cell-inline-formatting/203">In-line Text Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.ReplaceText(System.String,System.String)">
      <summary>
            Replaces all occurrences of the specified text with another text in the current <see cref="T:GemBox.Spreadsheet.AbstractRange" />.
            </summary>
      <param name="oldValue">The text to be replaced.</param>
      <param name="newValue">The text to replace all occurrences of <paramref name="oldValue" />.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.ReplaceText(System.String,System.String,System.Boolean)">
      <summary>
            Replaces all occurrences of the specified text with another text in the current <see cref="T:GemBox.Spreadsheet.AbstractRange" />.
            </summary>
      <param name="oldValue">The text to be replaced.</param>
      <param name="newValue">The text to replace all occurrences of <paramref name="oldValue" />.</param>
      <param name="matchCase">
        <see langword="true" /> to match exact case, <see langword="false" /> otherwise.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.ReplaceText(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
            Replaces all occurrences of the specified text with another text in the current <see cref="T:GemBox.Spreadsheet.AbstractRange" />.
            </summary>
      <param name="oldValue">The text to be replaced.</param>
      <param name="newValue">The text to replace all occurrences of <paramref name="oldValue" />.</param>
      <param name="matchCase">
        <see langword="true" /> to match exact case, <see langword="false" /> otherwise.</param>
      <param name="matchEntireCellContents">
        <see langword="true" /> to match entire cell contents, <see langword="false" /> otherwise.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.ReplaceText(System.Text.RegularExpressions.Regex,System.String)">
      <summary>
            Replaces all matches of the specified <see cref="T:System.Text.RegularExpressions.Regex" /> with specified text in the current <see cref="T:GemBox.Spreadsheet.AbstractRange" />.
            </summary>
      <param name="regex">The Regex which should be matched.</param>
      <param name="replacement">The text which should replace all matches of searched <see cref="T:System.Text.RegularExpressions.Regex" />.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.ClearFormat">
      <summary>
            Clears the range format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.Clear(GemBox.Spreadsheet.ClearOptions)">
      <summary>
            Clears the range (content, formatting, comment, hyperlink or all).
            </summary>
      <param name="options">The clear options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.AbstractRange" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.AbstractRange" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.IsStyleDefault">
      <summary>
            Returns <see langword="true" /> if all cells in <see cref="T:GemBox.Spreadsheet.AbstractRange" /> have default cell style; otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.SetBorders(GemBox.Spreadsheet.MultipleBorders,System.Drawing.Color,GemBox.Spreadsheet.LineStyle)">
      <summary>
            Sets borders on one or more excel cells, taking cell position into account.
            </summary>
      <param name="multipleBorders">Borders to set.</param>
      <param name="lineColor">Line color.</param>
      <param name="lineStyle">Line style.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.AnchorCell">
      <summary>
            Represents an anchor cell object used in <see cref="T:GemBox.Spreadsheet.ExcelDrawingPosition" /> type to specify from which cell and to which cell drawing (picture, chart, etc.) spans.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.#ctor(GemBox.Spreadsheet.ExcelColumn,GemBox.Spreadsheet.ExcelRow,System.Int64,System.Int64)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.AnchorCell" /> class by using offset values in EMU units  (1 point = 12 700 EMU).
            </summary>
      <param name="column">The column where the anchor is placed.</param>
      <param name="row">The row where the anchor is placed.</param>
      <param name="columnOffset">The column offset for the anchor.</param>
      <param name="rowOffset">The row offset for the anchor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> or <paramref name="row" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="column" /> and <paramref name="row" /> do not belong to the same worksheet.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.#ctor(GemBox.Spreadsheet.ExcelColumn,GemBox.Spreadsheet.ExcelRow,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.AnchorCell" /> class by using offset values in arbitrary length unit.
            </summary>
      <param name="column">The column where the anchor is placed.</param>
      <param name="row">The row where the anchor is placed.</param>
      <param name="columnOffset">The column offset for the anchor in arbitrary length unit.</param>
      <param name="rowOffset">The row offset for the anchor in arbitrary length unit.</param>
      <param name="unit">The length unit in which <paramref name="columnOffset" /> and <paramref name="rowOffset" /> are specified.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> or <paramref name="row" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="column" /> and <paramref name="row" /> do not belong to the same worksheet.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.#ctor(GemBox.Spreadsheet.ExcelColumn,GemBox.Spreadsheet.ExcelRow,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.AnchorCell" /> class.
            </summary>
      <param name="column">The column where the anchor is placed.</param>
      <param name="row">The row where the anchor is placed.</param>
      <param name="topLeft">If set to <see langword="true" />, anchor will be placed in the top left corner of the cell in current column and current row; otherwise, anchor will be placed in the top-left corner of the cell in next column and next row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.#ctor(GemBox.Spreadsheet.ExcelCell,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.AnchorCell" /> class.
            </summary>
      <param name="cell">The cell where the anchor is placed.</param>
      <param name="topLeft">If set to <see langword="true" />, anchor will be placed in the top left corner of the cell in current column and current row; otherwise, anchor will be placed in the top-left corner of the cell in next column and next row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.#ctor(GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.AnchorCell" /> class by using another anchor cell.
            </summary>
      <param name="anchorCell">Anchor cell to copy from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anchorCell" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.AnchorCell.Column">
      <summary>
            Gets or sets the column for the anchor cell.
            </summary>
      <value>
            The column for the anchor cell.
            </value>
      <exception cref="T:System.ArgumentNullException">Value is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Column doesn't belong to the same worksheet as anchor cell row.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.AnchorCell.Row">
      <summary>
            Gets or sets the row for the anchor cell.
            </summary>
      <value>
            The row for the anchor cell.
            </value>
      <exception cref="T:System.ArgumentNullException">Value is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Row doesn't belong to the same worksheet as anchor cell column.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.AnchorCell.ColumnOffset">
      <summary>
            Gets or sets the column offset for the anchor cell in EMU units (1 point = 12 700 EMU).
            </summary>
      <value>
            The column offset for the anchor cell in EMU units (1 point = 12 700 EMU).
            </value>
      <remarks>
        <para>
          <see cref="T:GemBox.Spreadsheet.LengthUnit">Length unit</see> for this property is <see cref="F:GemBox.Spreadsheet.LengthUnit.Emu">EMU</see> (English Metric Unit) (1 point = 12 700 EMU) for historical reasons.</para>
        <para>Use <see cref="M:GemBox.Spreadsheet.AnchorCell.GetColumnOffset(GemBox.Spreadsheet.LengthUnit)" /> and <see cref="M:GemBox.Spreadsheet.AnchorCell.SetColumnOffset(System.Double,GemBox.Spreadsheet.LengthUnit)" /> methods to get or set the <see cref="P:GemBox.Spreadsheet.AnchorCell.ColumnOffset" /> using arbitrary <see cref="T:GemBox.Spreadsheet.LengthUnit">length unit</see>.</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.AnchorCell.ColumnOffset" /> is constrained to <see cref="P:GemBox.Spreadsheet.AnchorCell.Column" />.<see cref="P:GemBox.Spreadsheet.ExcelColumn.Width" />.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.AnchorCell.RowOffset">
      <summary>
            Gets or sets row offset for the anchor cell in EMU units (1 point = 12 700 EMU).
            </summary>
      <value>
            The row offset for the anchor cell in EMU units (1 point = 12 700 EMU).
            </value>
      <remarks>
        <para>
          <see cref="T:GemBox.Spreadsheet.LengthUnit">Length unit</see> for this property is <see cref="F:GemBox.Spreadsheet.LengthUnit.Emu">EMU</see> (English Metric Unit) (1 point = 12 700 EMU) for historical reasons.</para>
        <para>Use <see cref="M:GemBox.Spreadsheet.AnchorCell.GetRowOffset(GemBox.Spreadsheet.LengthUnit)" /> and <see cref="M:GemBox.Spreadsheet.AnchorCell.SetRowOffset(System.Double,GemBox.Spreadsheet.LengthUnit)" /> methods to get or set the <see cref="P:GemBox.Spreadsheet.AnchorCell.RowOffset" /> using arbitrary <see cref="T:GemBox.Spreadsheet.LengthUnit">length unit</see>.</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.AnchorCell.RowOffset" /> is constrained to <see cref="P:GemBox.Spreadsheet.AnchorCell.Row" />.<see cref="P:GemBox.Spreadsheet.ExcelRow.Height" />.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.GetColumnOffset(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the column offset for the anchor cell in arbitrary length unit.
            </summary>
      <param name="unit">The length unit in which to return column offset.</param>
      <returns>The column offset for the anchor cell in arbitrary length unit.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.AnchorCell.ColumnOffset" /> is constrained to <see cref="P:GemBox.Spreadsheet.AnchorCell.Column" />.<see cref="P:GemBox.Spreadsheet.ExcelColumn.Width" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.SetColumnOffset(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the column offset for the anchor cell in arbitrary length unit.
            </summary>
      <param name="value">The column offset value.</param>
      <param name="unit">The length unit in which <paramref name="value" /> is specified.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.GetRowOffset(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the row offset for the anchor cell in arbitrary length unit.
            </summary>
      <param name="unit">The length unit in which to return row offset.</param>
      <returns>The row offset for the anchor cell in arbitrary length unit.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.AnchorCell.RowOffset" /> is constrained to <see cref="P:GemBox.Spreadsheet.AnchorCell.Row" />.<see cref="P:GemBox.Spreadsheet.ExcelRow.Height" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.SetRowOffset(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the row offset for the anchor cell in arbitrary length unit.
            </summary>
      <param name="value">The row offset value.</param>
      <param name="unit">The length unit in which <paramref name="value" /> is specified.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.Equals(GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Determines whether the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.AnchorCell" /> is equal to this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance.
            </summary>
      <param name="other">The other anchor cell to compare with this anchor cell instance.</param>
      <returns>
        <see langword="true" /> if the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.AnchorCell" /> is equal to this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this anchor cell instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is an <see cref="T:GemBox.Spreadsheet.AnchorCell" /> and is equal to this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.AutoFilter">
      <summary>
            Represents filter settings and provides filter functionality.
            </summary>
      <remarks>
        <para>Use <see cref="M:GemBox.Spreadsheet.CellRange.Filter" /> methods to create or get an <see cref="T:GemBox.Spreadsheet.AutoFilter" /> instance.</para>
        <para>Active <see cref="T:GemBox.Spreadsheet.AutoFilter" /> is stored in the parent worksheet (<see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Filter" />) and is loaded from and saved to XLSX file.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-autofilter/112">Excel AutoFiltering example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.AutoFilter.Range">
      <summary>
            Gets the range to filter.
            </summary>
      <value>
            The range to filter.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.AutoFilter.Columns">
      <summary>
            Gets the filter columns.
            </summary>
      <value>
            The filter columns.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.AutoFilter.Sort">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.AutoFilter" /> sort state.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.AutoFilter" /> sort state.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.ByValues(System.Int32,System.Collections.IEnumerable)">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.ValuesFilter" /> to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />).</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ValuesFilter" /> filters by a list of values.</para>
        <para>The list can contain <see langword="null" />, <see cref="T:System.String" /> and <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> values.</para>
      </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that a set <see cref="T:GemBox.Spreadsheet.ValuesFilter" /> applies to.</param>
      <param name="values">The list of values to filter by.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters or to apply filter.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="values" /> contains an item which is not <see langword="null" />, <see cref="T:System.String" /> or <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.FilterColumn.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.ByValues(System.Int32,System.Object[])">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.ValuesFilter" /> to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />).</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ValuesFilter" /> filters by a list of values.</para>
        <para>The list can contain <see langword="null" />, <see cref="T:System.String" /> and <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> values.</para>
      </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that a set <see cref="T:GemBox.Spreadsheet.ValuesFilter" /> applies to.</param>
      <param name="values">The list of values to filter by.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters or to apply filter.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="values" /> contains an item which is not <see langword="null" />, <see cref="T:System.String" /> or <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.FilterColumn.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.ByTop10(System.Int32,System.Boolean,System.Boolean,System.Double)">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.Top10Filter" /> to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />).</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Top10Filter" /> filters by a top N (percent or number of items).</para>
      </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that a set <see cref="T:GemBox.Spreadsheet.Top10Filter" /> applies to.</param>
      <param name="top">a value indicating whether or not to filter by top order. A <see langword="false" /> value filters by bottom order.</param>
      <param name="percent">A value indicating whether or not to filter by percent value of the column. A <see langword="false" /> value filters by number of items.</param>
      <param name="value">The top or bottom value to use as the filter criteria. For example "Filter by Top 10 Percent" or "Filter by Top 5 Items".</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters or to apply filter.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> must be greater than zero.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.FilterColumn.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.ByCustom(System.Int32,GemBox.Spreadsheet.FilterOperator,System.Object)">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.CustomFilter" /> to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />).</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.CustomFilter" /> filters by a one or two conditions (operators and values).</para>
      </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that a set <see cref="T:GemBox.Spreadsheet.Top10Filter" /> applies to.</param>
      <param name="operator">The operator used by the filter condition.</param>
      <param name="value">The value used by the filter condition.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters or to apply filter.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <exception cref="T:System.NotSupportedException">Value's type is not supported.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.FilterColumn.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.ByCustom(System.Int32,GemBox.Spreadsheet.FilterOperator,System.Object,System.Boolean,GemBox.Spreadsheet.FilterOperator,System.Object)">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.CustomFilter" /> to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />).</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.CustomFilter" /> filters by a one or two conditions (operators and values).</para>
      </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that a set <see cref="T:GemBox.Spreadsheet.CustomFilter" /> applies to.</param>
      <param name="operator">The operator used by the (first) filter condition.</param>
      <param name="value">The value used by the (first) filter condition.</param>
      <param name="and">The value indicating whether the two conditions have an "and" relationship. <see langword="true" /> indicates "and" and <see langword="false" /> indicates "or".</param>
      <param name="operator2">The operator used by the second filter condition.</param>
      <param name="value2">The value used by the second filter condition.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters or to apply filter.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <exception cref="T:System.NotSupportedException">Value's type is not supported.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.FilterColumn.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.ByDynamic(System.Int32,GemBox.Spreadsheet.DynamicFilterType)">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />).</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> filters by a dynamic criteria that can change, either with the data itself (e.g., "above average") or with the current system date (e.g., show values for "today").</para>
      </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that a set <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> applies to.</param>
      <param name="dynamicFilterType">The dynamic filter type.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters or to apply filter.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.FilterColumn.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.ByPredicate(System.Int32,System.Predicate{GemBox.Spreadsheet.ExcelCell})">
      <summary>
        <para>Sets a custom filter method to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />).</para>
        <para>Use this method to specify a custom filter behavior which is not provided by any of the <see cref="T:GemBox.Spreadsheet.FilterType" />s.</para>
      </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that a set custom filter predicate applies to.</param>
      <param name="match">A custom filter method.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters or to apply filter.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.FilterColumn.Filter" /> is not equal to <see langword="null" />), it won't be removed.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.SortBy(System.Int32)">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />).
            </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters / sort levels or to apply filter / sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a sort level (<see cref="P:GemBox.Spreadsheet.FilterColumn.Sort" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.SortBy(System.Int32,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />) and with the specified custom list by which order of items to sort by.
            </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <param name="customList">The custom list by which order of items to sort by.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters / sort levels or to apply filter / sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a sort level (<see cref="P:GemBox.Spreadsheet.FilterColumn.Sort" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.SortBy(System.Int32,System.String[])">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />) and with the specified custom list by which order of items to sort by.
            </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <param name="customList">The custom list by which order of items to sort by.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters / sort levels or to apply filter / sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a sort level (<see cref="P:GemBox.Spreadsheet.FilterColumn.Sort" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.SortBy(System.Int32,System.Boolean)">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />) and with the specified order to sort by.
            </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <param name="descending">
        <see langword="true" /> to sort the values in the descending order; otherwise, <see langword="false" />.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters / sort levels or to apply filter / sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a sort level (<see cref="P:GemBox.Spreadsheet.FilterColumn.Sort" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.SortBy(System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />) and with the specified order and custom list by which order of items to sort by.
            </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <param name="descending">
        <see langword="true" /> to sort the values in the descending order; otherwise, <see langword="false" />.</param>
      <param name="customList">The custom list by which order of items to sort by.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters / sort levels or to apply filter / sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a sort level (<see cref="P:GemBox.Spreadsheet.FilterColumn.Sort" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.SortBy(System.Int32,System.Boolean,System.String[])">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />) and with the specified order and custom list by which order of items to sort by.
            </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <param name="descending">
        <see langword="true" /> to sort the values in the descending order; otherwise, <see langword="false" />.</param>
      <param name="customList">The custom list by which order of items to sort by.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters / sort levels or to apply filter / sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a sort level (<see cref="P:GemBox.Spreadsheet.FilterColumn.Sort" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.SortBy(System.Int32,System.Comparison{GemBox.Spreadsheet.ExcelCell})">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> to a column with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />) and with the specified comparison method to sort by.
            </summary>
      <param name="columnIndex">The index of a column relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <param name="comparison">The comparison method to sort by.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.AutoFilter" /> to specify additional filters / sort levels or to apply filter / sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a sort level (<see cref="P:GemBox.Spreadsheet.FilterColumn.Sort" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.Apply">
      <summary>
        <para>Performs the filtering and sorting of this <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> based on this <see cref="T:GemBox.Spreadsheet.AutoFilter" /> settings.</para>
        <para>Rows which cells contained in <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> do not satisfy filtering conditions will be hidden (<see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Hidden" /> will be set to <see langword="true" />).</para>
      </summary>
      <exception cref="T:System.InvalidOperationException">Sort range contains merged cells.</exception>
      <remarks>
            This method has the same affect as <see cref="M:GemBox.Spreadsheet.AutoFilter.Apply(System.Boolean)" /> with parameter set to <see langword="true" />.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.Apply(System.Boolean)">
      <summary>
        <para>Performs the filtering and (optionally) sorting of this <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> based on this <see cref="T:GemBox.Spreadsheet.AutoFilter" /> settings.</para>
        <para>Rows which cells contained in <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> do not satisfy filtering conditions will be hidden (<see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Hidden" /> will be set to <see langword="true" />).</para>
      </summary>
      <exception cref="T:System.InvalidOperationException">Sort range contains merged cells.</exception>
      <param name="applySort">if set to <see langword="true" /> perform sorting in addition to filtering.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.ShowAll">
      <summary>
            Shows all rows (sets <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Hidden" /> to <see langword="false" />) to which <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> belongs.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AutoFilter.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.AutoFilter" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.AutoFilter" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.BuiltInCellStyleName">
      <summary>
            Represents a built-in style name.
            </summary>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="T:GemBox.Spreadsheet.CellStyleCollection" />
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Normal">
      <summary>
            '<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel1">
      <summary>
            '<b>RowLevel_1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel2">
      <summary>
            '<b>RowLevel_2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel3">
      <summary>
            '<b>RowLevel_3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel4">
      <summary>
            '<b>RowLevel_4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel5">
      <summary>
            '<b>RowLevel_5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel6">
      <summary>
            '<b>RowLevel_6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel7">
      <summary>
            '<b>RowLevel_7</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel1">
      <summary>
            '<b>ColLevel_1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel2">
      <summary>
            '<b>ColLevel_2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel3">
      <summary>
            '<b>ColLevel_3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel4">
      <summary>
            '<b>ColLevel_4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel5">
      <summary>
            '<b>ColLevel_5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel6">
      <summary>
            '<b>ColLevel_6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel7">
      <summary>
            '<b>ColLevel_7</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Comma">
      <summary>
            '<b>Comma</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Currency">
      <summary>
            '<b>Currency</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Percent">
      <summary>
            '<b>Percent</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Comma0">
      <summary>
            '<b>Comma [0]</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Currency0">
      <summary>
            '<b>Currency [0]</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Hyperlink">
      <summary>
        <b>Hyperlink</b> built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.FollowedHyperlink">
      <summary>
        <b>Followed Hyperlink</b> built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Note">
      <summary>
        <b>Note</b> built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.WarningText">
      <summary>
            '<b>Warning Text</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Title">
      <summary>
            '<b>Title</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Heading1">
      <summary>
            '<b>Heading 1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Heading2">
      <summary>
            '<b>Heading 2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Heading3">
      <summary>
            '<b>Heading 3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Heading4">
      <summary>
            '<b>Heading 4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Input">
      <summary>
            '<b>Input</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Output">
      <summary>
            '<b>Output</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Calculation">
      <summary>
            '<b>Calculation</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.CheckCell">
      <summary>
            '<b>Check Cell</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.LinkedCell">
      <summary>
            '<b>Linked Cell</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Total">
      <summary>
            '<b>Total</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Good">
      <summary>
            '<b>Good</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Bad">
      <summary>
            '<b>Bad</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Neutral">
      <summary>
            '<b>Neutral</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent1">
      <summary>
            '<b>Accent1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent1Pct20">
      <summary>
            '<b>20% - Accent1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent1Pct40">
      <summary>
            '<b>40% - Accent1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent1Pct60">
      <summary>
            '<b>60% - Accent1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent2">
      <summary>
            '<b>Accent2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent2Pct20">
      <summary>
            '<b>20% - Accent2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent2Pct40">
      <summary>
            '<b>40% - Accent2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent2Pct60">
      <summary>
            '<b>60% - Accent2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent3">
      <summary>
            '<b>Accent3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent3Pct20">
      <summary>
            '<b>20% - Accent3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent3Pct40">
      <summary>
            '<b>40% - Accent3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent3Pct60">
      <summary>
            '<b>60% - Accent3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent4">
      <summary>
            '<b>Accent4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent4Pct20">
      <summary>
            '<b>20% - Accent4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent4Pct40">
      <summary>
            '<b>40% - Accent4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent4Pct60">
      <summary>
            '<b>60% - Accent4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent5">
      <summary>
            '<b>Accent5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent5Pct20">
      <summary>
            '<b>20% - Accent5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent5Pct40">
      <summary>
            '<b>40% - Accent5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent5Pct60">
      <summary>
            '<b>60% - Accent5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent6">
      <summary>
            '<b>Accent6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent6Pct20">
      <summary>
            '<b>20% - Accent6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent6Pct40">
      <summary>
            '<b>40% - Accent6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent6Pct60">
      <summary>
            '<b>60% - Accent6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ExplanatoryText">
      <summary>
            '<b>Explanatory Text</b>' built-in style.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.BuiltInDocumentProperties">
      <summary>
            Enumeration of available built-in document properties.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Title">
      <summary>
            Title of the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Author">
      <summary>
            Name of the document's author.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Subject">
      <summary>
            Subject of the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Comments">
      <summary>
            Document comments.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Category">
      <summary>
            Category of the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Status">
      <summary>
            Status of the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Keywords">
      <summary>
            Document keywords.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.LastSavedBy">
      <summary>
            Name of the last author.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Manager">
      <summary>
            Manager.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Company">
      <summary>
            Company.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.HyperlinkBase">
      <summary>
            Base hyperlink.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Application">
      <summary>
            Application.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.DateContentCreated">
      <summary>
            UTC time of creation of the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.DateLastSaved">
      <summary>
            UTC time on which the document was last modified/saved.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.DateLastPrinted">
      <summary>
            UTC time on which the document was last printed.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CalculationEngine.CalculationOptions">
      <summary>
            Class represents various calculation engine options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CalculationEngine.CalculationOptions.ResolveMathFunctionsWithDecimalType">
      <summary>
            Gets or sets a value indicating whether mathematical operations should be resolved using <see cref="T:System.Decimal" /> values instead of <see cref="T:System.Double" /> values for increased precision, at the expense of performance.
            </summary>
      <value>
        <c>True</c> if mathematical operations should be resolved using decimal values; otherwise, <c>false</c>.
            </value>
      <remarks>
            The double type can on some rare occasions not be precise enough to represent a number correctly, 
            for example, 78.975 as a <see cref="T:System.Double" /> is actually 78.974999999999994315658113919198513031005859375. <br /> 
            Calling <see cref="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" /> with (<see cref="T:System.Double" />)78.975, 2 and <see cref="F:System.MidpointRounding.AwayFromZero" /> will result in 78.97, which is incorrect. <br /> 
            Calling <see cref="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" /> with (<see cref="T:System.Decimal" />)78.975, 2 and <see cref="F:System.MidpointRounding.AwayFromZero" /> will result in 78.98, which is correct. <br /> 
            If this option is set to <see langword="true" />, mathematical operations that could trigger problems when used with double (for example, round) will be resolved with decimal, which can reduce performance.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CalculationEngine.CalculationOptions.EnableIterativeCalculation">
      <summary>
            Gets or sets a value indicating whether iterative calculation is enabled.
            </summary>
      <value>
        <c>True</c> if iterative calculation is enabled; otherwise, <c>false</c>.
            </value>
      <remarks>
            A circular reference is when a formula refers to itself directly or indirectly.
            Setting this property to <c>true</c> will allow circular references in cell formulas;
            otherwise a <see cref="T:GemBox.Spreadsheet.CalculationEngine.SpreadsheetParserException" /> will be thrown for every circular reference in the calculation process.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CalculationEngine.CalculationOptions.MaximumIterations">
      <summary>
            Gets or sets the maximum calculation iterations.
            </summary>
      <value>
            The maximum calculation iterations.
            </value>
      <remarks>
            This property defines the maximum number of formula recalculations for a circular reference.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CalculationEngine.CalculationOptions.MaximumChange">
      <summary>
            Gets or sets the maximum calculation change.
            </summary>
      <value>
            The maximum calculation change.
            </value>
      <remarks>
            This property defines the maximum value change in circular reference iterations after which the calculation process is stopped.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CalculationEngine.CalculationOptions.EnableCaching">
      <summary>
            Gets or sets the value indicating whether the intermediate results of formulas should be cached.
            For some files, caching can decrease the time necessary to calculate formulas.
            </summary>
      <value>
            The value indicates whether the intermediate results of formulas should be cached.
            The default value is false.
            </value>
      <remarks>
            Use this property with caution, however. For most files, caching will not improve performance, but hurt it.
            Caching is useful only when there are repeated formulas (or expressions) that are always evaluated to the 
            same result. So, even though some formulas can look the same, their results will be different;
            Thus, they are inapplicable for caching. An example of such a formula is <code>=MAX(ROW(), COLUMN())</code>, whose result
            will not be cached, because the result depends on the cell where the formula is placed.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CalculationEngine.CalculationOptions.CultureInfo">
      <summary>
        <para>Gets or sets the culture used during the calculation.</para>
        <para>The default value is <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.</para>
      </summary>
      <value>
            The culture used during the calculation.
            </value>
      <remarks>
        <note type="important">
          <para>.NET 5.0 and later versions use <see href="http://site.icu-project.org/home">International Components for Unicode (ICU)</see> libraries for globalization functionality when running on Windows 10 May 2019 Update or later.</para>
          <para>When running your application on .NET 5.0, you might see changes in calculation of some formulas, for example, when formatting currency (if <see cref="P:GemBox.Spreadsheet.CalculationEngine.CalculationOptions.CultureInfo" /> is <see href="https://docs.microsoft.com/en-us/dotnet/core/compatibility/globalization/5.0/icu-globalization-api#currency-symbol">specified without country or region</see>) or negative currency (because <see cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" /> might differ between ICU and <see href="https://docs.microsoft.com/en-us/windows/win32/intl/national-language-support">NLS</see> which is used on .NET Framework and .NET Core 3.1 and lower).</para>
          <para>For more information about this .NET 5.0 breaking change and how to revert to using NLS globalization APIs, see the <see href="https://docs.microsoft.com/en-us/dotnet/core/compatibility/globalization/5.0/icu-globalization-api">Globalization APIs use ICU libraries on Windows</see> page.</para>
        </note>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CalculationEngine.CalculationOptions.PrioritizeR1C1ReferencingNotation">
      <summary>
            Gets or sets the value indicating whether to prioritize R1C1 notation over A1 notation when evaluating formulas.
            </summary>
      <value>
            The value indicating whether to prioritize R1C1 notation over A1 notation when evaluating formulas.
            The default value is false (A1 notation is prioritized).
            </value>
      <remarks>
            This property is necessary because some references can be ambiguous. For example "RC1" references
            the RC column and first row in A1 notation and the current row and first column in R1C1 notation.
            </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationError">
      <summary>
            Spreadsheet calculation error type enumeration.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationError.DivideByZero">
      <summary>
            Divide by zero error.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationError.Name">
      <summary>
            Undefined function or identifier.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationError.Number">
      <summary>
            Value cannot be converted to number or number is out of defined range.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationError.Value">
      <summary>
            Incompatible argument type error.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationError.Reference">
      <summary>
            Cell reference evaluation error.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationError.Null">
      <summary>
            Null value error.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationError.NotAvailable">
      <summary>
            Designated value is not available.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationError.Spill">
      <summary>
            Spill range is not blank.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationError.Calc">
      <summary>
            Error on calculation or invalid parameter passed to function.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationException">
      <summary>
            Represents errors that can occur in GemBox.Spreadsheet formula calculation process.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationException.Error">
      <summary>
            Gets the calculation error type.
            </summary>
      <value>
            The calculation error type.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationException.GetErrorValue(GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationError)">
      <summary>
            Gets the string value for provided calculation error type.
            </summary>
      <param name="error">The calculation error type.</param>
      <returns>
            String value representing provided calculation error type.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CalculationEngine.SpreadsheetCalculationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Adds additional exception data to the <see cref="T:System.Runtime.Serialization.SerializationInfo" />.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.CalculationEngine.SpreadsheetParserException">
      <summary>
            Represents exception that can occur in GemBox.Spreadsheet formula parsing process.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CalculationEngine.SpreadsheetParserException.WorksheetName">
      <summary>
            Gets the name of the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <value>
            The name of the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.CalculationEngine.SpreadsheetParserException.CellName">
      <summary>
            Gets the name of the <see cref="T:GemBox.Spreadsheet.ExcelCell" />.
            </summary>
      <value>
            The name of the <see cref="T:GemBox.Spreadsheet.ExcelCell" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.CalculationEngine.SpreadsheetParserException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Adds additional exception data to the <see cref="T:System.Runtime.Serialization.SerializationInfo" />.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.CellBorder">
      <summary>
            Represents the color and line style for the single border of a cell.
            </summary>
      <remarks>
        <para>
        Diagonal-up (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp" />) and diagonal-down (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown" />)
        always share the same color and line style.
      </para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Borders" />
      <seealso cref="T:GemBox.Spreadsheet.CellBorders" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellBorder.LineColor">
      <summary>
        <para>Gets or sets the border line color.</para>
        <para>Default value is color created from name <see cref="F:GemBox.Spreadsheet.ColorName.Empty" />.</para>
      </summary>
      <value>
            The border line color.
            </value>
      <remarks>
        <para>
        Diagonal-up (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp" />) and diagonal-down (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown" />)
        always share the same color and line style.
      </para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CellBorder.LineStyle">
      <summary>
        <para>Gets or sets the line style for this <see cref="T:GemBox.Spreadsheet.CellBorder" />.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.LineStyle.None" />.</para>
      </summary>
      <value>
            The line style for this <see cref="T:GemBox.Spreadsheet.CellBorder" />.
            </value>
      <remarks>
        <para>
        Diagonal-up (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp" />) and diagonal-down (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown" />)
        always share the same color and line style.
      </para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.CellBorder.SetBorder(GemBox.Spreadsheet.SpreadsheetColor,GemBox.Spreadsheet.LineStyle)">
      <summary>
            Sets the border color and line style.
            </summary>
      <param name="lineColor">The border line color.</param>
      <param name="lineStyle">The line style.</param>
      <remarks>
        <para>
        Diagonal-up (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp" />) and diagonal-down (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown" />)
        always share the same color and line style.
      </para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.CellBorder.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CellBorder" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CellBorder" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.CellBorders">
      <summary>
            Represents a single set of cell border formats (left, right, top, bottom and diagonal).
            </summary>
      <remarks>
        <para>
        Diagonal-up (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp" />) and diagonal-down (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown" />)
        always share the same color and line style.
      </para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Borders" />
      <seealso cref="T:GemBox.Spreadsheet.CellBorder" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellBorders.Item(GemBox.Spreadsheet.IndividualBorder)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.CellBorder" /> which contains the color and line style for the specified individual border of a cell.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.CellBorder" /> which contains the color and line style for the specified individual border of a cell.
            </value>
      <param name="individualBorder">The individual border for which to get the color and line style.</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.CellBorder" /> which contains the color and line style for the specified individual border of a cell.</returns>
      <remarks>
        <para>
        Diagonal-up (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp" />) and diagonal-down (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown" />)
        always share the same color and line style.
      </para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.CellBorders.SetBorders(GemBox.Spreadsheet.MultipleBorders,GemBox.Spreadsheet.SpreadsheetColor,GemBox.Spreadsheet.LineStyle)">
      <summary>
            Sets the color and line style for the specified multiple borders of a cell.
            </summary>
      <param name="multipleBorders">The multiple borders for which to set the color and line style.</param>
      <param name="lineColor">The border line color.</param>
      <param name="lineStyle">The line style.</param>
      <remarks>
        <para>
        Diagonal-up (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp" />) and diagonal-down (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown" />)
        always share the same color and line style.
      </para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.CellBorders.GetUnresolvedBorder(GemBox.Spreadsheet.IndividualBorder)">
      <summary>
            Gets the unresolved (direct) <see cref="T:GemBox.Spreadsheet.CellBorder" /> which contains the color and line style for the specified individual border of a cell.
            </summary>
      <param name="individualBorder">The individual border for which to get the color and line style.</param>
      <returns>The unresolved (direct) <see cref="T:GemBox.Spreadsheet.CellBorder" /> which contains the color and line style for the specified individual border of a cell.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellBorders.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CellBorders" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CellBorders" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.CellRange">
      <summary>
            Cell range is a rectangular group of worksheet cells.
            </summary>
      <remarks>
        <para>Cell range is determined by its <see cref="P:GemBox.Spreadsheet.CellRange.FirstRowIndex">top</see>, <see cref="P:GemBox.Spreadsheet.CellRange.FirstColumnIndex">left</see>, <see cref="P:GemBox.Spreadsheet.CellRange.LastRowIndex">bottom</see> and <see cref="P:GemBox.Spreadsheet.CellRange.LastColumnIndex">right</see> borders.
            These properties are read-only, so if you require different cell range use one of the following methods: <see cref="M:GemBox.Spreadsheet.CellRange.GetSubrangeAbsolute(System.Int32,System.Int32,System.Int32,System.Int32)" />, <see cref="M:GemBox.Spreadsheet.CellRange.GetSubrangeRelative(System.Int32,System.Int32,System.Int32,System.Int32)" />, <see cref="M:GemBox.Spreadsheet.CellRange.GetSubrange(System.String)" /> or <see cref="M:GemBox.Spreadsheet.CellRange.GetSubrange(System.String,System.String)" />.
            Specific cell can be accessed in a few ways, depending on <see cref="P:GemBox.Spreadsheet.CellRange.IndexingMode" />.
            Cells in the range can be merged / unmerged by the use of <see cref="P:GemBox.Spreadsheet.CellRange.Merged" /> property.</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.CellRange.Value" /> property set will set value of multiple cells or of a merged range.
            <see cref="P:GemBox.Spreadsheet.CellRange.Value" /> property get has meaning only if range is merged; otherwise, exception is thrown.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.FirstRowIndex">
      <summary>
            Gets index of the first (topmost) row.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.FirstColumnIndex">
      <summary>
            Gets index of the first (leftmost) column.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.LastRowIndex">
      <summary>
            Gets index of the last (bottommost) row.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.LastColumnIndex">
      <summary>
            Gets index of the last (rightmost) column.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Width">
      <summary>
            Gets width of this cell range, in columns.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Height">
      <summary>
            Gets height of this cell range, in rows.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.StartPosition">
      <summary>
            Gets name of the first (top-left) cell in this cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.EndPosition">
      <summary>
            Gets name of the last (bottom-right) cell in this cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.IsAnyCellMerged">
      <summary>
            Returns <see langword="true" /> is any cell in this cell range is merged; otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Item(System.Int32)">
      <overloads>Gets excel cell with the specified name or at the specified position.</overloads>
      <summary>
            Gets excel cell at the specified index.
            </summary>
      <param name="contextIndex">The zero-based context index of the cell.</param>
      <remarks>
        <para>If <see cref="P:GemBox.Spreadsheet.CellRange.IndexingMode" /> is 
            <see cref="F:GemBox.Spreadsheet.RangeIndexingMode.Horizontal">RangeIndexingMode.Horizontal</see> context index  
            is specifying relative column position.</para>
        <para>If <see cref="P:GemBox.Spreadsheet.CellRange.IndexingMode" /> is 
            <see cref="F:GemBox.Spreadsheet.RangeIndexingMode.Vertical">RangeIndexingMode.Vertical</see> context index
            is specifying relative row position.</para>
        <para>If <see cref="P:GemBox.Spreadsheet.CellRange.IndexingMode" /> is 
            <see cref="F:GemBox.Spreadsheet.RangeIndexingMode.Rectangular">RangeIndexingMode.Rectangular</see> context index
            is specifying cell index inside cell range. The cell at <see cref="P:GemBox.Spreadsheet.CellRange.StartPosition">
            StartPosition</see> has index 0, and the cell at 
            <see cref="P:GemBox.Spreadsheet.CellRange.EndPosition" /> has index of 
            <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> x 
            <see cref="P:GemBox.Spreadsheet.CellRange.Height" /> - 1.</para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellRange.IndexingMode" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Item(System.Int32,System.Int32)">
      <summary>
            Gets excel cell at the specified relative position.
            </summary>
      <param name="relativeRow">The zero-based relative row position.</param>
      <param name="relativeColumn">The zero-based relative column position.</param>
      <remarks>
            Absolute position of excel cell is calculated by adding <paramref name="relativeRow" /> and <paramref name="relativeColumn" /> to
            <see cref="P:GemBox.Spreadsheet.CellRange.FirstRowIndex" /> and 
            <see cref="P:GemBox.Spreadsheet.CellRange.FirstColumnIndex" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Item(System.String)">
      <summary>
            Gets excel cell with the specified full or partial name.
            </summary>
      <param name="contextName">Full or partial name of the cell.</param>
      <remarks>
        <para>If <see cref="P:GemBox.Spreadsheet.CellRange.IndexingMode" /> is 
            <see cref="F:GemBox.Spreadsheet.RangeIndexingMode.Rectangular">RangeIndexingMode.Rectangular</see> full name of 
            the cell must be used (for example; "A1", "D7", etc.).</para>
        <para>If <see cref="P:GemBox.Spreadsheet.CellRange.IndexingMode" /> is 
            <see cref="F:GemBox.Spreadsheet.RangeIndexingMode.Horizontal">RangeIndexingMode.Horizontal</see> column name  
            must be used (for example; "A", "D", etc.).</para>
        <para>If <see cref="P:GemBox.Spreadsheet.CellRange.IndexingMode" /> is 
            <see cref="F:GemBox.Spreadsheet.RangeIndexingMode.Vertical">RangeIndexingMode.Vertical</see> row name 
            must be used (for example; "1", "7", etc.).</para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellRange.IndexingMode" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Merged">
      <summary>
            Gets or sets whether cells in this range are merged.
            </summary>
      <remarks>
        <para>By setting this property to <see langword="true" />, you are merging all the cells 
            (<see cref="T:GemBox.Spreadsheet.ExcelCell" />) in this range. Merging process will fail if any 
            of the cells in the range is already merged.</para>
        <para>When modifying merged cell, whole merged range is modified. For example, if you set 
            <see cref="P:GemBox.Spreadsheet.ExcelCell.Value">ExcelCell.Value</see>, value of merged range will be modified. 
            You can find out if the cell is merged by checking if 
            <see cref="P:GemBox.Spreadsheet.ExcelCell.MergedRange">ExcelCell.MergedRange</see> property is different 
            than <see langword="null" />.</para>
      </remarks>
      <exception cref="T:System.ArgumentException">Merged range can't be created because some of the cells
            in the range are already merged.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Value">
      <summary>
            Gets or sets cell value on one or more excel cells.
            </summary>
      <remarks>
        <para>Property set will set value of multiple cells or of a merged range.</para>
        <para>Property get has meaning only if range is <see cref="P:GemBox.Spreadsheet.CellRange.Merged" />; 
            otherwise, exception is thrown.</para>
      </remarks>
      <exception cref="T:System.InvalidOperationException">Property get is attempted on a cell range 
            which is not merged.</exception>
      <seealso cref="P:GemBox.Spreadsheet.CellRange.Merged" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Comment">
      <summary>
            Gets or sets comment
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Hyperlink">
      <summary>
            Gets or sets hyperlink
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Formula">
      <summary>
            Gets or sets formula string.
            </summary>
      <remarks>
        <para>In XLSX files, reading and writing of all formulas are supported.</para>
        <para>In XLS files, reading and writing of all common and most of the advanced formulas are supported.</para>
        <para>In XLSB files, reading and writing of all common and most of the advanced formulas are supported.</para>
        <para>In ODS files, reading and writing of all formulas are supported, however, OpenOffice formulas don't have the same syntax as Excel formulas.</para>
        <para>In CSV files, reading of all formulas is supported.</para>
        <para>For more information on formulas, consult Microsoft Excel documentation.</para>
      </remarks>
      <exception cref="T:System.InvalidOperationException">Property get is attempted on a cell range which is not merged.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.FormulaR1C1">
      <summary>
            Gets or sets a formula string in R1C1 notation.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.SetArrayFormula(System.String)">
      <summary>
            Sets array formula (also known as CSE formula) to the range of cells.
            </summary>
      <param name="formula">The array formula.</param>
      <seealso href="https://support.microsoft.com/en-us/office/guidelines-and-examples-of-array-formulas-7d94a64e-3ff3-4686-9372-ecfd5caa57c7" />
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.AutoFitColumnWidth">
      <summary>
        <para>Changes the range's column widths to fit the contents.</para>
        <para>Use this method instead of multiple calls to <see cref="M:GemBox.Spreadsheet.ExcelColumn.AutoFit" /> method if auto-fitting multiple columns.</para>
      </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.AutoFitRowHeight(System.Boolean)">
      <summary>
        <para>Changes the range's row heights to fit the contents.</para>
        <para>Use this method instead of multiple calls to <see cref="M:GemBox.Spreadsheet.ExcelRow.AutoFit" /> method if auto-fitting multiple rows.</para>
      </summary>
      <param name="autoFitMergedRanges">
        <see langword="true" /> if merged ranges should be taken into account; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Sort(System.Boolean)">
      <summary>
        <para>Gets the <see cref="T:GemBox.Spreadsheet.SortState" /> active on the parent worksheet (<see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Sort" />) if active <see cref="P:GemBox.Spreadsheet.SortState.Range" /> is equal to this <see cref="T:GemBox.Spreadsheet.CellRange" /> and parameter <paramref name="active" /> is <see langword="true" />; otherwise, a new <see cref="T:GemBox.Spreadsheet.SortState" /> instance, which is set as active on the parent worksheet if parameter <paramref name="active" /> is <see langword="true" />.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.SortState" /> is used to store sort settings and to apply sort on this range of cells.</para>
      </summary>
      <param name="active">if set to <see langword="true" />, gets or sets the <see cref="T:GemBox.Spreadsheet.SortState" /> active on the parent worksheet (<see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Sort" />).</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.SortState" /> active on the parent worksheet (<see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Sort" />) if active <see cref="P:GemBox.Spreadsheet.SortState.Range" /> is equal to this <see cref="T:GemBox.Spreadsheet.CellRange" /> and parameter <paramref name="active" /> is <see langword="true" />; otherwise, a new <see cref="T:GemBox.Spreadsheet.SortState" /> instance, which is set as active on the parent worksheet if parameter <paramref name="active" /> is <see langword="true" />.</returns>
      <remarks>
            Use this method (with parameter <paramref name="active" /> set to <see langword="false" />) to create multiple independent <see cref="T:GemBox.Spreadsheet.SortState" />s for the same <see cref="T:GemBox.Spreadsheet.CellRange" /> instance, even if it has an active <see cref="T:GemBox.Spreadsheet.SortState" /> (<see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Sort" />), which can then be stored and used later on.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/excel-sort/113">Excel Sorting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Filter">
      <summary>
        <para>Gets the <see cref="T:GemBox.Spreadsheet.AutoFilter" /> active on the parent worksheet (<see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Filter" />) or Table (<see cref="P:GemBox.Spreadsheet.Tables.Table.Filter" />) if active <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> is equal to this <see cref="T:GemBox.Spreadsheet.CellRange" />; otherwise, a new <see cref="T:GemBox.Spreadsheet.AutoFilter" /> instance, which is set as active on the parent worksheet or table.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.AutoFilter" /> is used to store filter settings and to apply filter on this range of cells.</para>
      </summary>
      <returns>The <see cref="T:GemBox.Spreadsheet.AutoFilter" /> active on the parent worksheet (<see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Filter" />) or table if active <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> is equal to this <see cref="T:GemBox.Spreadsheet.CellRange" />; otherwise, a new <see cref="T:GemBox.Spreadsheet.AutoFilter" /> instance, which is set as active on the parent worksheet or table.</returns>
      <remarks>
        <para>This method has the same affect as <see cref="M:GemBox.Spreadsheet.CellRange.Filter(System.Boolean)" /> with parameter set to <see langword="true" />.</para>
        <para>The filter is set as active filter on a table if this range is inside any table in this worksheet. Otherwise the filter is set as active filter on the parent worksheet</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-autofilter/112">Excel AutoFiltering example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Filter(System.Boolean)">
      <summary>
        <para>Gets the <see cref="T:GemBox.Spreadsheet.AutoFilter" /> active on the parent worksheet (<see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Filter" />) or Table (<see cref="P:GemBox.Spreadsheet.Tables.Table.Filter" />) if active <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> is equal to this <see cref="T:GemBox.Spreadsheet.CellRange" /> and parameter <paramref name="active" /> is <see langword="true" />; otherwise, a new <see cref="T:GemBox.Spreadsheet.AutoFilter" /> instance, which is set as active on the parent worksheet or table if parameter <paramref name="active" /> is <see langword="true" />.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.AutoFilter" /> is used to store filter settings and to apply filter on this range of cells.</para>
      </summary>
      <param name="active">if set to <see langword="true" />, gets or sets the <see cref="T:GemBox.Spreadsheet.AutoFilter" /> active on the parent worksheet (<see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Filter" />) or Table (<see cref="P:GemBox.Spreadsheet.Tables.Table.Filter" />).</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.AutoFilter" /> active on the parent worksheet (<see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Filter" />) or Table (<see cref="P:GemBox.Spreadsheet.Tables.Table.Filter" />) if active <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> is equal to this <see cref="T:GemBox.Spreadsheet.CellRange" /> and parameter <paramref name="active" /> is <see langword="true" />; otherwise, a new <see cref="T:GemBox.Spreadsheet.AutoFilter" /> instance, which is set as active on the parent worksheet or table if parameter <paramref name="active" /> is <see langword="true" />.</returns>
      <remarks>
        <para>Use this method (with parameter <paramref name="active" /> set to <see langword="false" />) to create multiple independent <see cref="T:GemBox.Spreadsheet.AutoFilter" />s for the same <see cref="T:GemBox.Spreadsheet.CellRange" /> instance, even if it has an active <see cref="T:GemBox.Spreadsheet.AutoFilter" /> (<see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Filter" />), which can then be stored and used later on.</para>
        <para>If the parameter <paramref name="active" /> is set to <see langword="true" /> the filter is set as active filter on a table if this range is inside any table in this worksheet. Otherwise the filter is set as active filter on the parent worksheet</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-autofilter/112">Excel AutoFiltering example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (all cells).
            </summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (all cells).</returns>
      <remarks>
            Returns default enumerator that iterates all cells in the range. If you are only reading existing
            cells (values or formatting), use more appropriate <see cref="M:GemBox.Spreadsheet.CellRange.GetReadEnumerator" />.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (all cells).
            </summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (all cells).</returns>
      <remarks>
            Returns default enumerator that iterates all cells in the range. If you are only reading existing
            cells (values or formatting), use more appropriate <see cref="M:GemBox.Spreadsheet.CellRange.GetReadEnumerator" />.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetReadEnumerator">
      <summary>
            Returns enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (only allocated cells).
            </summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (only allocated cells).</returns>
      <remarks>
            Returns enumerator that iterates only already allocated cells in the range. If you are only reading existing
            cells (values or formatting), use this enumerator as it is faster and doesn't allocate unnecessary cells.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.IndexingMode">
      <summary>
            Gets indexing mode used for cell range.
            </summary>
      <remarks>
        <para>If <see cref="P:GemBox.Spreadsheet.CellRange.Height" /> is 1, indexing mode 
            is <see cref="F:GemBox.Spreadsheet.RangeIndexingMode.Horizontal" />.</para>
        <para>Otherwise, if <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> is 1, indexing mode 
            is <see cref="F:GemBox.Spreadsheet.RangeIndexingMode.Vertical" />.</para>
        <para>Otherwise, indexing mode is <see cref="F:GemBox.Spreadsheet.RangeIndexingMode.Rectangular">
            Rectangular</see>.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetSubrangeAbsolute(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns new cell range using absolute indexing.
            </summary>
      <param name="firstAbsoluteRow">Absolute index of the first row.</param>
      <param name="firstAbsoluteColumn">Absolute index of the first column.</param>
      <param name="lastAbsoluteRow">Absolute index of the last row.</param>
      <param name="lastAbsoluteColumn">Absolute index of the last column.</param>
      <returns>New cell range using absolute indexing.</returns>
      <remarks>
            New cell range must be within this cell range.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Arguments are out of range.</exception>
      <seealso cref="P:GemBox.Spreadsheet.CellRange.FirstRowIndex" />
      <seealso cref="P:GemBox.Spreadsheet.CellRange.FirstColumnIndex" />
      <seealso cref="P:GemBox.Spreadsheet.CellRange.LastRowIndex" />
      <seealso cref="P:GemBox.Spreadsheet.CellRange.LastColumnIndex" />
      <seealso cref="M:GemBox.Spreadsheet.CellRange.GetSubrangeRelative(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <seealso cref="M:GemBox.Spreadsheet.CellRange.GetSubrange(System.String)" />
      <seealso cref="M:GemBox.Spreadsheet.CellRange.GetSubrange(System.String,System.String)" />
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetSubrangeRelative(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns new cell range using relative indexing.
            </summary>
      <param name="relativeRow">Relative index of the first row.</param>
      <param name="relativeColumn">Relative index of the first column.</param>
      <param name="width">Width of new cell range in columns.</param>
      <param name="height">Height of new cell range in rows.</param>
      <returns>New cell range using relative indexing.</returns>
      <remarks>
            New cell range must be within this cell range.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Arguments are out of range.</exception>
      <seealso cref="P:GemBox.Spreadsheet.CellRange.Width" />
      <seealso cref="P:GemBox.Spreadsheet.CellRange.Height" />
      <seealso cref="M:GemBox.Spreadsheet.CellRange.GetSubrangeAbsolute(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <seealso cref="M:GemBox.Spreadsheet.CellRange.GetSubrange(System.String)" />
      <seealso cref="M:GemBox.Spreadsheet.CellRange.GetSubrange(System.String,System.String)" />
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetSubrange(System.String,System.String)">
      <summary>
            Returns new cell range using start and end position.
            </summary>
      <param name="firstCell">Name of first (top-left) cell.</param>
      <param name="lastCell">Name of last (bottom-right) cell.</param>
      <returns>New cell range using start and end position.</returns>
      <remarks>
            New cell range must be within this cell range.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Arguments are out of range.</exception>
      <seealso cref="P:GemBox.Spreadsheet.CellRange.StartPosition" />
      <seealso cref="P:GemBox.Spreadsheet.CellRange.EndPosition" />
      <seealso cref="M:GemBox.Spreadsheet.CellRange.GetSubrangeAbsolute(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <seealso cref="M:GemBox.Spreadsheet.CellRange.GetSubrangeRelative(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <seealso cref="M:GemBox.Spreadsheet.CellRange.GetSubrange(System.String)" />
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetSubrange(System.String)">
      <summary>
            Returns new cell range using A1 style notation.
            </summary>
      <param name="reference">The cell range reference in A1 style notation.</param>
      <returns>New cell range using A1 style notation.</returns>
      <remarks>
            New cell range must be within this cell range.
            Multiple area selection is not supported (e.g. "A1:B2,C3:D4,E5:F6").
            </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellRange.StartPosition" />
      <seealso cref="P:GemBox.Spreadsheet.CellRange.EndPosition" />
      <seealso cref="M:GemBox.Spreadsheet.CellRange.GetSubrangeAbsolute(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <seealso cref="M:GemBox.Spreadsheet.CellRange.GetSubrangeRelative(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <seealso cref="M:GemBox.Spreadsheet.CellRange.GetSubrange(System.String,System.String)" />
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(System.String)">
      <summary>
            Copies this cell range to another position in the same worksheet or in another worksheet.
            </summary>
      <param name="topLeftCell">Full name of the top-left cell of the destination range (e.g. "D4", "Sheet2!D5", etc.).</param>
      <remarks>
        <para>Destination cell range has the same width and height as this cell range.</para>
        <para>
          <see cref="T:System.ArgumentOutOfRangeException" /> is thrown if destination range:</para>
        <list type="bullet">
          <item>
            <description>breaks Excel worksheet row or column limit,</description>
          </item>
          <item>
            <description>overlaps with source range, or</description>
          </item>
          <item>
            <description>overlaps with existing merged range.</description>
          </item>
        </list>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">Destination worksheet is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Top-left cell is incorrectly specified.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(System.String,GemBox.Spreadsheet.CopyOptions)">
      <summary>
            Copies this cell range to another position in the same worksheet or in another worksheet with specified copy options.
            </summary>
      <param name="topLeftCell">Full name of the top-left cell of the destination range (e.g. "D4", "Sheet2!D5", etc.).</param>
      <param name="copyOptions">The copy options.</param>
      <remarks>
        <para>Destination cell range has the same width and height as this cell range.</para>
        <para>
          <see cref="T:System.ArgumentOutOfRangeException" /> is thrown if destination range:</para>
        <list type="bullet">
          <item>
            <description>breaks Excel worksheet row or column limit,</description>
          </item>
          <item>
            <description>overlaps with source range, or</description>
          </item>
          <item>
            <description>overlaps with existing merged range.</description>
          </item>
        </list>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">Destination worksheet is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Top-left cell is incorrectly specified.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(GemBox.Spreadsheet.ExcelWorksheet,System.String)">
      <summary>
            Copies this cell range to another worksheet.
            </summary>
      <param name="destinationWorksheet">Destination worksheet.</param>
      <param name="topLeftCell">Full name of the top-left cell of the destination range.</param>
      <remarks>
        <para>Destination cell range has the same width and height as this cell range.</para>
        <para>
          <see cref="T:System.ArgumentOutOfRangeException" /> is thrown if destination range:</para>
        <list type="bullet">
          <item>
            <description>breaks Excel worksheet row or column limit,</description>
          </item>
          <item>
            <description>overlaps with source range, or</description>
          </item>
          <item>
            <description>overlaps with existing merged range.</description>
          </item>
        </list>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">Destination worksheet is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Top-left cell is incorrectly specified.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(GemBox.Spreadsheet.ExcelWorksheet,System.String,GemBox.Spreadsheet.CopyOptions)">
      <summary>
            Copies this cell range to another worksheet with specified copy options.
            </summary>
      <param name="destinationWorksheet">Destination worksheet.</param>
      <param name="topLeftCell">Full name of the top-left cell of the destination range.</param>
      <param name="copyOptions">The copy options.</param>
      <remarks>
        <para>Destination cell range has the same width and height as this cell range.</para>
        <para>
          <see cref="T:System.ArgumentOutOfRangeException" /> is thrown if destination range:</para>
        <list type="bullet">
          <item>
            <description>breaks Excel worksheet row or column limit,</description>
          </item>
          <item>
            <description>overlaps with source range, or</description>
          </item>
          <item>
            <description>overlaps with existing merged range.</description>
          </item>
        </list>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">Destination worksheet is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Top-left cell is incorrectly specified.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(System.Int32,System.Int32)">
      <summary>
            Copies this cell range to another position in the same worksheet.
            </summary>
      <param name="absoluteRow">Absolute index of the destination row.</param>
      <param name="absoluteColumn">Absolute index of the destination column.</param>
      <remarks>
        <para>Destination cell range has the same width and height as this cell range.</para>
        <para>
          <see cref="T:System.ArgumentOutOfRangeException" /> is thrown if destination range:</para>
        <list type="bullet">
          <item>
            <description>breaks Excel worksheet row or column limit,</description>
          </item>
          <item>
            <description>overlaps with source range, or</description>
          </item>
          <item>
            <description>overlaps with existing merged range.</description>
          </item>
        </list>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">Destination worksheet is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(System.Int32,System.Int32,GemBox.Spreadsheet.CopyOptions)">
      <summary>
            Copies this cell range to another position in the same worksheet with specified copy options.
            </summary>
      <param name="absoluteRow">Absolute index of the destination row.</param>
      <param name="absoluteColumn">Absolute index of the destination column.</param>
      <param name="copyOptions">The copy options.</param>
      <remarks>
        <para>Destination cell range has the same width and height as this cell range.</para>
        <para>
          <see cref="T:System.ArgumentOutOfRangeException" /> is thrown if destination range:</para>
        <list type="bullet">
          <item>
            <description>breaks Excel worksheet row or column limit,</description>
          </item>
          <item>
            <description>overlaps with source range, or</description>
          </item>
          <item>
            <description>overlaps with existing merged range.</description>
          </item>
        </list>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">Destination worksheet is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(GemBox.Spreadsheet.ExcelWorksheet,System.Int32,System.Int32)">
      <summary>
            Copies this cell range to another worksheet.
            </summary>
      <param name="destinationWorksheet">Destination worksheet.</param>
      <param name="absoluteRow">Absolute index of the destination row.</param>
      <param name="absoluteColumn">Absolute index of the destination column.</param>
      <remarks>
        <para>Destination cell range has the same width and height as this cell range.</para>
        <para>
          <see cref="T:System.ArgumentOutOfRangeException" /> is thrown if destination range:</para>
        <list type="bullet">
          <item>
            <description>breaks Excel worksheet row or column limit,</description>
          </item>
          <item>
            <description>overlaps with source range, or</description>
          </item>
          <item>
            <description>overlaps with existing merged range.</description>
          </item>
        </list>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">Destination worksheet is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(GemBox.Spreadsheet.ExcelWorksheet,System.Int32,System.Int32,GemBox.Spreadsheet.CopyOptions)">
      <summary>
            Copies this cell range to another worksheet with specified copy options.
            </summary>
      <param name="destinationWorksheet">Destination worksheet.</param>
      <param name="absoluteRow">Absolute index of the destination row.</param>
      <param name="absoluteColumn">Absolute index of the destination column.</param>
      <param name="copyOptions">The copy options.</param>
      <remarks>
        <para>Destination cell range has the same width and height as this cell range.</para>
        <para>
          <see cref="T:System.ArgumentOutOfRangeException" /> is thrown if destination range:</para>
        <list type="bullet">
          <item>
            <description>breaks Excel worksheet row or column limit,</description>
          </item>
          <item>
            <description>overlaps with source range, or</description>
          </item>
          <item>
            <description>overlaps with existing merged range.</description>
          </item>
        </list>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">Destination worksheet is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Overlaps(GemBox.Spreadsheet.CellRange)">
      <summary>
            Checks if this cell range overlaps with another cell range.
            </summary>
      <param name="range">Cell range.</param>
      <returns>
        <see langword="true" /> if cell ranges overlap; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="range" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindText(System.String,System.Int32@,System.Int32@)">
      <summary>
            Finds the first occurrence of the specified text in the current cell range.
            </summary>
      <param name="text">Text to search.</param>
      <param name="row">Index of the row where the text was found or -1 if no text was found.</param>
      <param name="column">Index of the column where the text was found or -1 if no text was found.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindText(System.String,System.Boolean,System.Int32@,System.Int32@)">
      <summary>
            Finds the first occurrence of the specified text in the current cell range.
            </summary>
      <param name="text">Text to search.</param>
      <param name="matchCase">
        <see langword="true" /> to match exact case, <see langword="false" /> otherwise.</param>
      <param name="row">Index of the row where the text was found or -1 if no text was found.</param>
      <param name="column">Index of the column where the text was found or -1 if no text was found.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindText(System.String,System.Boolean,System.Boolean,System.Int32@,System.Int32@)">
      <summary>
            Finds the first occurrence of the specified text in the current cell range.
            </summary>
      <param name="text">Text to search.</param>
      <param name="matchCase">
        <see langword="true" /> to match exact case, <see langword="false" /> otherwise.</param>
      <param name="matchEntireCellContents">
        <see langword="true" /> to match entire cell contents, <see langword="false" /> otherwise.</param>
      <param name="row">Index of the row where the text was found or -1 if no text was found.</param>
      <param name="column">Index of the column where the text was found or -1 if no text was found.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindText(System.String,GemBox.Spreadsheet.ExcelCell@)">
      <summary>
            Finds the first occurrence of the specified text in the current cell range.
            </summary>
      <param name="text">Text to search.</param>
      <param name="cell">The <see cref="T:GemBox.Spreadsheet.ExcelCell" /> where the text was found or <see langword="null" /> if no text was found.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindText(System.String,System.Boolean,GemBox.Spreadsheet.ExcelCell@)">
      <summary>
            Finds the first occurrence of the specified text in the current cell range.
            </summary>
      <param name="text">Text to search.</param>
      <param name="matchCase">
        <see langword="true" /> to match exact case, <see langword="false" /> otherwise.</param>
      <param name="cell">The <see cref="T:GemBox.Spreadsheet.ExcelCell" /> where the text was found or <see langword="null" /> if no text was found.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindText(System.String,System.Boolean,System.Boolean,GemBox.Spreadsheet.ExcelCell@)">
      <summary>
            Finds the first occurrence of the specified text in the current cell range.
            </summary>
      <param name="text">Text to search.</param>
      <param name="matchCase">
        <see langword="true" /> to match exact case, <see langword="false" /> otherwise.</param>
      <param name="matchEntireCellContents">
        <see langword="true" /> to match entire cell contents, <see langword="false" /> otherwise.</param>
      <param name="cell">The <see cref="T:GemBox.Spreadsheet.ExcelCell" /> where the text was found or <see langword="null" /> if no text was found.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindText(System.Text.RegularExpressions.Regex,System.Int32@,System.Int32@)">
      <summary>
            Finds the first occurrence which matches the specified <see cref="T:System.Text.RegularExpressions.Regex" /> in the current cell range.
            </summary>
      <param name="regex">The <see cref="T:System.Text.RegularExpressions.Regex" /> which should be matched.</param>
      <param name="row">Index of the row where the text was found or -1 if no text was found.</param>
      <param name="column">Index of the column where the text was found or -1 if no text was found.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="regex" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindText(System.Text.RegularExpressions.Regex,GemBox.Spreadsheet.ExcelCell@)">
      <summary>
            Finds the first occurrence which matches the specified <see cref="T:System.Text.RegularExpressions.Regex" /> in the current cell range.
            </summary>
      <param name="regex">The <see cref="T:System.Text.RegularExpressions.Regex" /> which should be matched.</param>
      <param name="cell">The <see cref="T:GemBox.Spreadsheet.ExcelCell" /> where the text was found or <see langword="null" /> if no text was found.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="regex" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindAllText(System.String)">
      <summary>
            Finds all occurrences which match the specified <see cref="T:System.Text.RegularExpressions.Regex" /> in the current cell range.
            </summary>
      <param name="text">Text to search.</param>
      <returns>All <see cref="T:GemBox.Spreadsheet.ExcelCell" />s where the text was found.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindAllText(System.String,System.Boolean)">
      <summary>
            Finds all occurrences which match the specified <see cref="T:System.Text.RegularExpressions.Regex" /> in the current cell range.
            </summary>
      <param name="text">Text to search.</param>
      <param name="matchCase">
        <see langword="true" /> to match exact case, <see langword="false" /> otherwise.</param>
      <returns>All <see cref="T:GemBox.Spreadsheet.ExcelCell" />s where the text was found.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindAllText(System.String,System.Boolean,System.Boolean)">
      <summary>
            Finds all occurrences which match the specified <see cref="T:System.Text.RegularExpressions.Regex" /> in the current cell range.
            </summary>
      <param name="text">Text to search.</param>
      <param name="matchCase">
        <see langword="true" /> to match exact case, <see langword="false" /> otherwise.</param>
      <param name="matchEntireCellContents">
        <see langword="true" /> to match entire cell contents, <see langword="false" /> otherwise.</param>
      <returns>All <see cref="T:GemBox.Spreadsheet.ExcelCell" />s where the text was found.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindAllText(System.Text.RegularExpressions.Regex)">
      <summary>
            Finds all occurrences which match the specified <see cref="T:System.Text.RegularExpressions.Regex" /> in the current cell range.
            </summary>
      <param name="regex">The <see cref="T:System.Text.RegularExpressions.Regex" /> which should be matched.</param>
      <returns>All <see cref="T:GemBox.Spreadsheet.ExcelCell" />s where the text was found.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="regex" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Insert(GemBox.Spreadsheet.InsertShiftDirection)">
      <summary>
            Inserts a range by shifting cells in the specified direction.
            </summary>
      <param name="direction">The shift direction.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Remove(GemBox.Spreadsheet.RemoveShiftDirection)">
      <summary>
            Removes a range by shifting cells in the specified direction.
            </summary>
      <param name="direction">The shift direction.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Calculate">
      <summary>
            Calculates formula for every excel cell in this range.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.ClearFormat">
      <summary>
            Clears the range format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetCurrentRegion">
      <summary>
            Selects a worksheet region to which the cell range belongs to. 
            </summary>
      <returns>The worksheet region to which the cell range belongs to.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Subtotal(System.Int32,GemBox.Spreadsheet.ConsolidationFunction,System.Int32[])">
      <summary>
            Creates subtotals for the current cell range.
            </summary>
      <param name="groupBy">The column index based on which grouping should be done.</param>
      <param name="function">The subtotal function to be applied.</param>
      <param name="totalList">An array of column indexes to which the subtotals are added.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Subtotal(System.Int32,GemBox.Spreadsheet.ConsolidationFunction,System.Int32[],System.Boolean)">
      <summary>
            Creates subtotals for the current cell range.
            </summary>
      <param name="groupBy">The column index based on which grouping should be done.</param>
      <param name="function">The subtotal function to be applied.</param>
      <param name="totalList">An array of column indexes to which the subtotals are added.</param>
      <param name="replace">
        <see langword="true" /> to replace existing subtotals, <see langword="false" /> otherwise.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Subtotal(System.Int32,GemBox.Spreadsheet.ConsolidationFunction,System.Int32[],System.Boolean,System.Boolean)">
      <summary>
            Creates subtotals for the current cell range.
            </summary>
      <param name="groupBy">The column index based on which grouping should be done.</param>
      <param name="function">The subtotal function to be applied.</param>
      <param name="totalList">An array of column indexes to which the subtotals are added.</param>
      <param name="replace">
        <see langword="true" /> to replace existing subtotals, <see langword="false" /> otherwise.</param>
      <param name="pageBreaks">
        <see langword="true" /> to add page breaks after each group, <see langword="false" /> otherwise.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Subtotal(System.Int32,GemBox.Spreadsheet.ConsolidationFunction,System.Int32[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates subtotals for the current cell range.
            </summary>
      <param name="groupBy">The column index based on which grouping should be done.</param>
      <param name="function">The subtotal function to be applied.</param>
      <param name="totalList">An array of column indexes to which the subtotals are added.</param>
      <param name="replace">
        <see langword="true" /> to replace existing subtotals, <see langword="false" /> otherwise.</param>
      <param name="pageBreaks">
        <see langword="true" /> to add page breaks after each group, <see langword="false" /> otherwise.</param>
      <param name="summaryBelowData">
        <see langword="true" /> to place the summary below data, <see langword="false" /> otherwise.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.PositionToRowColumn(System.String,System.Int32@,System.Int32@)">
      <summary>
            Converts position string ("A1", "BN27", etc.) to row and column index.
            </summary>
      <param name="position">Position string.</param>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.RowColumnToPosition(System.Int32,System.Int32)">
      <summary>
            Converts row and column index to position string ("A1", "BN27", etc.).
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>Position string.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.CellRange" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.CellRange" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.CellRange" /> and is equal to this <see cref="T:GemBox.Spreadsheet.CellRange" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.CellRange" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.CellRange" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.op_Equality(GemBox.Spreadsheet.CellRange,GemBox.Spreadsheet.CellRange)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.CellRange" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.CellRange" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.CellRange" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.CellRange" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.op_Inequality(GemBox.Spreadsheet.CellRange,GemBox.Spreadsheet.CellRange)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.CellRange" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.CellRange" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.CellRange" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.CellRange" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Sort(GemBox.Spreadsheet.SortDescription[])">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.CellRange.Sort(System.Boolean)" />, <see cref="M:GemBox.Spreadsheet.SortState.By(System.Int32)" /> and <see cref="M:GemBox.Spreadsheet.SortState.Apply" /> methods instead.</para>
        <para>Sorts the rows of this <see cref="T:GemBox.Spreadsheet.CellRange" /> by comparing values of <see cref="T:GemBox.Spreadsheet.ExcelCell" />s in columns specified by <paramref name="sortDescriptions" />.</para>
      </summary>
      <param name="sortDescriptions">The sort descriptions that specify columns by which to sort.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Sort(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.SortDescription})">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.CellRange.Sort(System.Boolean)" />, <see cref="M:GemBox.Spreadsheet.SortState.By(System.Int32)" /> and <see cref="M:GemBox.Spreadsheet.SortState.Apply" /> methods instead.</para>
        <para>Sorts the rows of this <see cref="T:GemBox.Spreadsheet.CellRange" /> by comparing values of <see cref="T:GemBox.Spreadsheet.ExcelCell" />s in columns specified by <paramref name="sortDescriptions" />.</para>
      </summary>
      <param name="sortDescriptions">The sort descriptions that specify columns by which to sort.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.CellRangeCollection">
      <summary>
            A collection of <see cref="T:GemBox.Spreadsheet.CellRange" /> items.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRangeCollection.Add(GemBox.Spreadsheet.ExcelWorksheet,System.String)">
      <summary>
            Adds the <see cref="T:GemBox.Spreadsheet.CellRange" /> from the specified worksheet to the collection.
            </summary>
      <param name="worksheet">The worksheet.</param>
      <param name="cellReference">The cell reference for which to create <see cref="T:GemBox.Spreadsheet.CellRange" />.</param>
      <returns>An instance of the <see cref="T:GemBox.Spreadsheet.CellRange" /> that was added to the collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRangeCollection.InsertItem(System.Int32,GemBox.Spreadsheet.CellRange)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.CellRangeCollection.SetItem(System.Int32,GemBox.Spreadsheet.CellRange)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.CellRangeEnumerator">
      <summary>
            Enumerator used for iterating cells in a <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRangeEnumerator.Dispose">
      <summary>
            Releases all resources used by the <see cref="T:GemBox.Spreadsheet.CellRangeEnumerator" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.Parent">
      <summary>
            Parent <see cref="T:GemBox.Spreadsheet.CellRange" />. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.CurrentRow">
      <summary>
            Current absolute row index in the cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.CurrentColumn">
      <summary>
            Current absolute column index in the cell range.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRangeEnumerator.Reset">
      <summary>
            Sets the enumerator to its initial position, which is one column before 
            the first cell in the cell range.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRangeEnumerator.MoveNext">
      <summary>
            Advances the enumerator to the next element of the cell range.
            </summary>
      <returns>
        <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if 
            the enumerator has passed the end of the cell range.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.Current">
      <summary>
            Gets the current <see cref="T:GemBox.Spreadsheet.ExcelCell" /> in the cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.System#Collections#IEnumerator#Current">
      <summary>
            Gets the current <see cref="T:GemBox.Spreadsheet.ExcelCell" /> in the cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.CurrentCell">
      <summary>
            Gets the current <see cref="T:GemBox.Spreadsheet.ExcelCell" /> in the cell range.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CellStyle">
      <summary>
            Represents cell formatting.
            </summary>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.AbstractRange.Style" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" />
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyle.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CellStyle" /> class not associated with any workbook.
            </summary>
      <remarks>
        <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
        <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyle.#ctor(GemBox.Spreadsheet.ExcelFile)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CellStyle" /> class which references default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) style from the specified workbook.
            </summary>
      <param name="workbook">The workbook from which default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) style this <see cref="T:GemBox.Spreadsheet.CellStyle" /> inherits formatting.</param>
      <remarks>
        <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
        <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.NumberFormat">
      <summary>
        <para>Gets or sets the number format which indicates how to format and render the numeric value of a cell.</para>
        <para>Default value is <b>General</b>.</para>
        <para>If set to <see langword="null" />, number format will be resolved from referenced workbook style.</para>
      </summary>
      <value>
            The number format which indicates how to format and render the numeric value of a cell.
            </value>
      <remarks>
        <para>
        If the value of this property is <b>General</b> or <see cref="F:System.String.Empty" /> and <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> is of <see cref="T:System.DateTime" /> type, ISO date/time format will be used as number format.
      </para>
        <para>Custom number format has to be in invariant culture format.</para>
        <para>Example:</para>
        <table border="1" cellpadding="5" cellspacing="0">
          <tr>
            <th>Format string</th>
            <th>Value</th>
            <th>Output</th>
          </tr>
          <tr>
            <td>#####</td>
            <td>123</td>
            <td>123</td>
          </tr>
          <tr>
            <td>00000</td>
            <td>123</td>
            <td>00123</td>
          </tr>
          <tr>
            <td>#,#</td>
            <td>1234567890</td>
            <td>1,234,567,890</td>
          </tr>
          <tr>
            <td>00.00</td>
            <td>1.2</td>
            <td>01.20</td>
          </tr>
          <tr>
            <td>#,##0.00</td>
            <td>1234567890</td>
            <td>1,234,567,890.00</td>
          </tr>
          <tr>
            <td>#0.##%</td>
            <td>0.092</td>
            <td>9.2%</td>
          </tr>
        </table>
        <para>
        For more information on number format strings consult <see href="https://support.office.com/en-us/article/Create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4">Microsoft Excel documentation</see>.
      </para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.NumberFormatLocal">
      <summary>
            Gets a <see cref="T:System.String" /> that represents the format code for the numeric value in the language of the user.
            </summary>
      <value>
            A <see cref="T:System.String" /> that represents the format code for the numeric value in the language of the user.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment">
      <summary>
        <para>Gets or sets the horizontal alignment.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.General" />.</para>
      </summary>
      <value>
            The horizontal alignment.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Indent" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.WrapText" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment">
      <summary>
        <para>Gets or sets the vertical alignment.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Bottom" />.</para>
      </summary>
      <value>
            The vertical alignment.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Indent" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.WrapText" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Indent">
      <summary>
        <para>Gets or sets the number of spaces (of the <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b> style font) of indentation for text in a cell.</para>
        <para>The number of spaces to indent is calculated as following: Number of spaces to indent = <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" /> * 3.</para>
        <para>Default value is 0.</para>
      </summary>
      <value>
            The number of spaces (of the <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b> style font) of indentation for text in a cell.
            </value>
      <remarks>
        <para>If <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" /> is <see langword="true" />, <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" /> should be set to <see cref="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Left" />, <see cref="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Right" /> or <see cref="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Distributed" />.</para>
        <para>If <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" /> is <see langword="false" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" /> should be set to <see cref="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Bottom" />, <see cref="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Top" /> or <see cref="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Distributed" />.</para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Value must be greater than or equal to 0.</exception>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.WrapText" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Rotation">
      <summary>
        <para>Gets or sets the text rotation in degrees (1/360th of a full circle).</para>
        <para>Value must be between -90 and 90 and specifies counterclockwise rotation of the text from the normal position. The first letter of the text is considered the center-point of the arc.</para>
        <para>Default value is 0.</para>
      </summary>
      <value>
            The text rotation in degrees.
            </value>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" /> are mutually exclusive.</para>
        <para>If <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" /> is set, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" /> is set to <see langword="false" />.</para>
        <para>If <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" /> is set, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" /> is set to 0.</para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Value must be between -90 and 90.</exception>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Indent" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.WrapText" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.IsTextVertical">
      <summary>
        <para>Gets or sets a value indicating whether text orientation is vertical.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> if text orientation is vertical; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" /> are mutually exclusive.</para>
        <para>If <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" /> is set, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" /> is set to 0.</para>
        <para>If <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" /> is set, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" /> is set to <see langword="false" />.</para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Indent" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.WrapText" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.WrapText">
      <summary>
        <para>Gets or sets a value indicating whether the text in a cell should be line-wrapped within the cell.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> if the text in a cell should be line-wrapped within the cell; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Indent" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit">
      <summary>
        <para>Gets or sets a value indicating whether the displayed text in the cell should be shrunk to fit the cell width. Not applicable when a cell contains multiple lines of text.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> if the displayed text in the cell should be shrunk to fit the cell width; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Indent" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.WrapText" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Font">
      <summary>
        <para>Gets or sets the font.</para>
        <para>If set to <see langword="null" />, font will be resolved from referenced workbook style.</para>
      </summary>
      <value>
            The font.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Borders">
      <summary>
        <para>Gets or sets the borders.</para>
        <para>If set to <see langword="null" />, borders will be resolved from referenced workbook style.</para>
      </summary>
      <value>
            The borders.
            </value>
      <remarks>
        <para>
        Diagonal-up (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp" />) and diagonal-down (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown" />)
        always share the same color and line style.
      </para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.FillPattern">
      <summary>
        <para>Gets or sets the fill (cell background).</para>
        <para>If set to <see langword="null" />, fill will be resolved from referenced workbook style.</para>
        <para>Fill can be either pattern or gradient.</para>
        <para>Gradient fill is currently supported in XLSX and partially in rendering formats (PDF, XPS and image formats).</para>
      </summary>
      <value>
            The fill (cell background).
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Locked">
      <summary>
        <para>Gets or sets a value indicating whether the cell is locked.</para>
        <para>Default value is <see langword="true" />.</para>
      </summary>
      <value>
        <see langword="true" /> if the cell is locked; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>When cells are marked as "locked" and the workbook is <see cref="P:GemBox.Spreadsheet.ExcelFile.Protected" /> or the sheet is <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Protected" />, 
            then the options specified in the <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.ProtectionSettings" /> are prohibited for these cells.</para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelFile.Protected" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.Protected" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.ProtectionSettings" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.FormulaHidden">
      <summary>
        <para>Gets or sets a value indicating whether the contents of the cell will not be displayed in the formula bar.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> if the contents of the cell will not be displayed in the formula bar; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>When the cell is hidden and the workbook is <see cref="P:GemBox.Spreadsheet.ExcelFile.Protected" /> or the sheet on which the cell resides is <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Protected" />, 
            then the cell value will be displayed in the cell grid location, but the contents of the cell will not be displayed in the formula bar.
            This is true for all types of cell content, including formula, text, or numbers.</para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Locked" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelFile.Protected" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.Protected" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Name">
      <summary>
        <para>If <see cref="T:GemBox.Spreadsheet.CellStyle" /> is workbook <see cref="T:GemBox.Spreadsheet.Style" />, gets or sets the name of the style; otherwise, gets the name of the referenced workbook <see cref="T:GemBox.Spreadsheet.Style" /> from which this <see cref="T:GemBox.Spreadsheet.CellStyle" /> inherits formatting.</para>
        <para>Default value is <b>Normal</b>.</para>
      </summary>
      <value>
            If <see cref="T:GemBox.Spreadsheet.CellStyle" /> is workbook <see cref="T:GemBox.Spreadsheet.Style" />, the name of the style; otherwise, the name of the referenced workbook <see cref="T:GemBox.Spreadsheet.Style" /> from which this <see cref="T:GemBox.Spreadsheet.CellStyle" /> inherits formatting.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.QuotePrefix">
      <summary>
        <para>Gets or sets a value indicating whether the text string in a cell should be prefixed by a single quote mark (e.g., 'text). Use it to store numeric value of a cell as text.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> if the text string in a cell should be prefixed by a single quote mark (e.g., 'text); otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.TextDirection">
      <summary>
            Gets or sets a value indicating whether the reading order of the cell is left-to-right, right-to-left, or context dependent.
            </summary>
      <value>
            A value indicating whether the reading order of the cell is left-to-right, right-to-left, or context dependent.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.IsDefault">
      <summary>
            Gets a value indicating whether the referenced workbook style is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting.
            </summary>
      <value>
        <see langword="true" /> if the referenced workbook style is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyle.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CellStyle" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CellStyle" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.CellStyleCollection">
      <summary>
            Represents a collection of workbook (master) <see cref="T:GemBox.Spreadsheet.Style" />s.
            </summary>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelFile.Styles" />
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyleCollection.Normal">
      <summary>
            Gets the '<b>Normal</b>' style.
            </summary>
      <value>
            The '<b>Normal</b>' style.
            </value>
      <remarks>
        <para>The '<b>Normal</b>' style always exists in a workbook and it cannot be removed.</para>
        <para>The '<b>Normal</b>' style stores default cell formatting properties for an entire workbook, because all cells will reference the '<b>Normal</b>' style by default.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyleCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.Style" />s contained in the collection. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyleCollection.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:GemBox.Spreadsheet.Style" /> that corresponds to given name.</para>
        <para>If <see cref="T:GemBox.Spreadsheet.CellStyleCollection" /> doesn't contain correspondent style, then new style will be added and returned.</para>
      </summary>
      <param name="styleName">The name of the <see cref="T:GemBox.Spreadsheet.Style" />.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Style" /> that corresponds to given name.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyleCollection.Item(GemBox.Spreadsheet.BuiltInCellStyleName)">
      <summary>
        <para>Gets the <see cref="T:GemBox.Spreadsheet.Style" /> that corresponds to given <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" />.</para>
        <para>If <see cref="T:GemBox.Spreadsheet.CellStyleCollection" /> doesn't contain correspondent style, then new style will be added and returned.</para>
      </summary>
      <param name="styleName">The <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> of the <see cref="T:GemBox.Spreadsheet.Style" />.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Style" /> that corresponds to given <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.Add(System.String)">
      <summary>
            Adds an empty <see cref="T:GemBox.Spreadsheet.Style" /> instance to the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />.
            </summary>
      <param name="name">The name of new <see cref="T:GemBox.Spreadsheet.Style" /> instance.</param>
      <returns>
            New <see cref="T:GemBox.Spreadsheet.Style" /> instance that is added to this collection.
            </returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="name" /> cannot be null or empty.</exception>
      <exception cref="T:System.InvalidOperationException">Style with name <paramref name="name" /> is already contained in the workbook.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.Remove(System.String)">
      <summary>
            Removes style with the specified name from the workbook.
            </summary>
      <param name="name">The name of the style which should be removed from the workbook.</param>
      <returns>
        <see langword="true" /> if style is successfully removed; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if style was not found in the workbook.</returns>
      <exception cref="T:System.InvalidOperationException">'<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>' style cannot be removed from the workbook.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.Remove(GemBox.Spreadsheet.BuiltInCellStyleName)">
      <summary>
            Removes built-in style with the specified name from the workbook.
            </summary>
      <param name="name">The name of the built-in style which should be removed from the workbook.</param>
      <returns>
        <see langword="true" /> if style is successfully removed; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if style was not found in the workbook.</returns>
      <exception cref="T:System.InvalidOperationException">'<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>' style cannot be removed from the workbook.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.Contains(System.String)">
      <summary>
            Determines whether the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" /> contains a <see cref="T:GemBox.Spreadsheet.Style" /> instance with specific name.
            </summary>
      <param name="styleName">Name of the <see cref="T:GemBox.Spreadsheet.Style" /> to locate in the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />.</param>
      <returns>
        <see langword="true" /> if <see cref="T:GemBox.Spreadsheet.Style" /> instance with specific name is found in the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1">IEnumerator&lt;Style&gt;</see> that can be used to iterate through the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.CellValueType">
      <summary>
            Represents the possible cell value types.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.Null">
      <summary>
            Blank cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.Bool">
      <summary>
             Cell value is boolean.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.Int">
      <summary>
            Cell value is integer.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.Double">
      <summary>
            Cell value is double.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.DateTime">
      <summary>
            Cell value is date-time.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.String">
      <summary>
            Cell value is string.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.Error">
      <summary>
            Cell containing an error.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.Object">
      <summary>
            A general type representing any reference or value type 
            not explicitly represented by another CellValueType.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.AreaChart">
      <summary>
            Represents a chart whose series values are drawn using filled areas.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AreaChart.SupportedDataLabelPositions">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AreaChart.DefaultDataLabelPosition">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AreaChart.DefaultEmptyCellDisplayMode">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AreaChart.SeriesCore">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AreaChart.ChartType">
      <summary>
            Gets the chart type for <see cref="T:GemBox.Spreadsheet.Charts.AreaChart" /> which is <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Area" />.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Area" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AreaChart.Grouping">
      <summary>
            Gets or sets the chart grouping.
            </summary>
      <value>
            The chart grouping.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AreaChart.Axes">
      <summary>
            Gets the chart axes.
            </summary>
      <value>
            The chart axes.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.AxisGridlines">
      <summary>
            Represents an axis major or minor gridlines.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AxisGridlines.IsVisible">
      <summary>
            Gets or sets a value indicating whether gridlines are visible.
            </summary>
      <value>
        <see langword="true" /> if gridlines are visible; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AxisGridlines.Fill">
      <summary>
            Gets or sets the fill formating options.
            </summary>
      <value>
            The fill formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AxisGridlines.Outline">
      <summary>
            Gets or sets the outline formating options.
            </summary>
      <value>
            The outline formatting options.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.AxisGridlines.Delete">
      <summary>
            Deletes gridlines.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.AxisGridlines.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.AxisGridlines" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.AxisGridlines" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.AxisLabelsPosition">
      <summary>
            Represents the possible positions for axis labels.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisLabelsPosition.None">
      <summary>
            Axis labels are not drawn.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisLabelsPosition.NextToAxis">
      <summary>
            Axis labels are next to the axis.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisLabelsPosition.Low">
      <summary>
            Axis labels are at the low end of the perpendicular axis.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisLabelsPosition.High">
      <summary>
        <para>Axis labels are at the high end of the perpendicular axis.</para>
        <para>This value is currently not supported when exporting a chart to PDF, XPS or image file formats. This value is exported as <see cref="F:GemBox.Spreadsheet.Charts.AxisLabelsPosition.NextToAxis" />.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.AxisType">
      <summary>
            Represents an axis type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisType.Category">
      <summary>
            Axis type used for categories.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisType.Date">
      <summary>
        <para>Axis type used for categories which are dates / times.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisType.Value">
      <summary>
            Axis type used for series values.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.BarChart">
      <summary>
            Represents a chart whose series values are drawn using horizontal rectangles.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.BarChart.SupportedDataLabelPositions">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.BarChart.DefaultDataLabelPosition">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.BarChart.DefaultEmptyCellDisplayMode">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.BarChart.SeriesCore">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.BarChart.ChartType">
      <summary>
            Gets the chart type for <see cref="T:GemBox.Spreadsheet.Charts.BarChart" /> which is <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Bar" />.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Bar" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.BarChart.Grouping">
      <summary>
            Gets or sets the chart grouping.
            </summary>
      <value>
            The chart grouping.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.BarChart.Axes">
      <summary>
            Gets the chart axes.
            </summary>
      <value>
            The chart axes.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.BarChart.SeriesGapWidth">
      <summary>
        <para>Gets or sets the width of the series gap.</para>
        <para>Default value is 1.82 if <see cref="P:GemBox.Spreadsheet.Charts.BarChart.Grouping" /> is <see cref="F:GemBox.Spreadsheet.Charts.ChartGrouping.Clustered" />; otherwise, 1.5.</para>
      </summary>
      <value>
            The width of the series gap in range from 0.0 to 5.0.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between 0.0 and 5.0.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.BarChart.SeriesOverlap">
      <summary>
        <para>Gets or sets the series overlap.</para>
        <para>Default value is 0 if <see cref="P:GemBox.Spreadsheet.Charts.BarChart.Grouping" /> is <see cref="F:GemBox.Spreadsheet.Charts.ChartGrouping.Clustered" />; otherwise, 1.</para>
      </summary>
      <value>
            The series overlap in range from -1.0 to 1.0.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between -1.0 and 1.0.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.BarChart.Import(GemBox.Spreadsheet.Charts.ExcelChart)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.CategoryAxis">
      <summary>
            Represents an axis used for categories.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.CategoryAxis.AxisType">
      <summary>
            Gets the axis type for <see cref="T:GemBox.Spreadsheet.Charts.CategoryAxis" /> which is <see cref="F:GemBox.Spreadsheet.Charts.AxisType.Category" />.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Charts.AxisType.Category" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.CategoryAxis.LabelsInterval">
      <summary>
            Gets or sets the interval between labels that are drawn.
            </summary>
      <value>
            The interval between labels that are drawn.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value must be between 1 and 255.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.CategoryAxis.TickMarksInterval">
      <summary>
            Gets or sets the interval between tick marks that are drawn.
            </summary>
      <value>
            The interval between tick marks that are drawn.
            </value>
      <remarks>
            Default value of this property is 1.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Value must be between 1 and 31999.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.CategoryAxis.MultiLevelLabels">
      <summary>
            Gets or sets the value indicating whether the labels should be shown as hierarchy.
            </summary>
      <value>
        <see langword="true" />, to show the labels as hierarchy; false, to show the labels as flat text.
            </value>
      <remarks>
            Default value of this property is <see langword="true" />. This member is currently not supported when saving to PDF, XPS or image file formats.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.CategoryAxis.NumberFormatFromLinkedSource">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.CategoryAxis.Import(GemBox.Spreadsheet.Charts.ChartAxis)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartAxes">
      <summary>
            Represents chart axes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.IsVisible">
      <summary>
            Gets or sets a value indicating whether any axis is visible.
            </summary>
      <value>
        <see langword="true" /> if any axis is visible; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.Horizontal">
      <summary>
            Gets the horizontal chart axis.
            </summary>
      <value>
            The horizontal chart axis.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.Vertical">
      <summary>
            Gets the vertical chart axis.
            </summary>
      <value>
            The vertical chart axis.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.HorizontalCategory">
      <summary>
            Gets the horizontal chart axis as category axis, if horizontal chart axis is category axis; otherwise <see langword="null" />.
            </summary>
      <value>
            The horizontal chart axis as category axis, if horizontal chart axis is category axis; otherwise <see langword="null" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.HorizontalDate">
      <summary>
            Gets the horizontal chart axis as date axis, if horizontal chart axis is date axis; otherwise <see langword="null" />.
            </summary>
      <value>
            The horizontal chart axis as date axis, if horizontal chart axis is date axis; otherwise <see langword="null" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.HorizontalValue">
      <summary>
            Gets the horizontal chart axis as value axis, if horizontal chart axis is value axis; otherwise <see langword="null" />.
            </summary>
      <value>
            The horizontal chart axis as value axis, if horizontal chart axis is value axis; otherwise <see langword="null" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.VerticalCategory">
      <summary>
            Gets the vertical chart axis as category axis, if vertical chart axis is category axis; otherwise <see langword="null" />.
            </summary>
      <value>
            The vertical chart axis as category axis, if vertical chart axis is category axis; otherwise <see langword="null" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.VerticalDate">
      <summary>
            Gets the vertical chart axis as date axis, if vertical chart axis is date axis; otherwise <see langword="null" />.
            </summary>
      <value>
            The vertical chart axis as date axis, if vertical chart axis is date axis; otherwise <see langword="null" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.VerticalValue">
      <summary>
            Gets the vertical chart axis as value axis, if vertical chart axis is value axis; otherwise <see langword="null" />.
            </summary>
      <value>
            The vertical chart axis as value axis, if vertical chart axis is value axis; otherwise <see langword="null" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartAxes.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartAxes" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartAxes" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartAxes.Delete">
      <summary>
            Deletes axes.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartAxis">
      <summary>
            Represents a base class for all chart axis types.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.NumberFormatFromLinkedSource">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.IsVisible">
      <summary>
            Gets or sets a value indicating whether axis is visible.
            </summary>
      <value>
        <see langword="true" /> if axis is visible; otherwise, <see langword="false" />.
            </value>
      <remarks>
            Default value of this property is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.NumberFormatLinkedToSource">
      <summary>
            Gets or sets a value indicating whether number format from chart's source data (cells) will be used to format axis value labels.
            </summary>
      <value>
        <see langword="true" /> if number format from chart's source data (cells) will be used to format axis value labels; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>
      If <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.NumberFormatLinkedToSource" /> is <see langword="true" />, then number format from chart's source data (cells) will be used to format axis value labels based on the following logic:
    </para>
        <list type="bullet">
          <item>
            <description>
          If axis is <see cref="T:GemBox.Spreadsheet.Charts.CategoryAxis" /> or <see cref="T:GemBox.Spreadsheet.Charts.DateAxis" />, then <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat">number format</see> of the first cell in <see cref="P:GemBox.Spreadsheet.Charts.ExcelChart.CategoryLabelsReference" /> will be used.
        </description>
          </item>
          <item>
            <description>
          If axis is <see cref="T:GemBox.Spreadsheet.Charts.ValueAxis" />, then <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat">number format</see> of the first cell in <see cref="P:GemBox.Spreadsheet.Charts.ChartSeries.ValuesReference" /> of the chart's first series will be used.
        </description>
          </item>
        </list>
        <para>
      Otherwise, if <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.NumberFormat" /> is specified, then it will be used to format axis value labels.
    </para>
        <para>
      Otherwise, if number format cannot be retrieved by any previously described means, then "General" number format will be used to format axis value labels.
    </para>
        <para>Default value of this property is <see langword="true" />.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.MajorTickMarkType">
      <summary>
            Gets or sets the major tick marks position.
            </summary>
      <value>
            The major tick marks position.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.MinorTickMarkType">
      <summary>
            Gets or sets the minor tick marks position.
            </summary>
      <value>
            The minor tick marks position.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.LabelsPosition">
      <summary>
            Gets or sets the axis labels position.
            </summary>
      <value>
            The axis labels position.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.AxisType">
      <summary>
            Gets the <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.AxisType" /> of this <see cref="T:GemBox.Spreadsheet.Charts.ChartAxis" /> instance.
            </summary>
      <value>
            The <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.AxisType" /> of this <see cref="T:GemBox.Spreadsheet.Charts.ChartAxis" /> instance.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.ReverseOrder">
      <summary>
        <para>Gets or sets a value indicating whether values on the axis shall be reversed so they go from maximum to minimum.</para>
        <para>This value is currently not supported when exporting a chart to PDF, XPS or image file formats. This value is always exported as <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> if values on the axis shall be reversed so they go from maximum to minimum; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Setting the value also changes position of the axis perpendicular to this one. 
            If value is <see langword="true" />, axis perpendicular to this one will be positioned at the top (if horizontal) or at the right (if vertical) of the plot area; otherwise,
            if value is <see langword="false" />, axis perpendicular to this one will be positioned at the bottom (if horizontal) or at the left (if vertical) of the plot area.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.NumberFormat">
      <summary>
            Gets or sets the number format used for formatting axis value labels. 
            If <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.NumberFormatLinkedToSource" /> is <see langword="true" />, then number format from chart's source data (cells) will be used to format axis value labels as explained in remarks.
            Setting this property, sets <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.NumberFormatLinkedToSource" /> to <see langword="false" />.
            </summary>
      <value>
            The number format used for formatting axis value labels.
            </value>
      <remarks>
        <para>
      If <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.NumberFormatLinkedToSource" /> is <see langword="true" />, then number format from chart's source data (cells) will be used to format axis value labels based on the following logic:
    </para>
        <list type="bullet">
          <item>
            <description>
          If axis is <see cref="T:GemBox.Spreadsheet.Charts.CategoryAxis" /> or <see cref="T:GemBox.Spreadsheet.Charts.DateAxis" />, then <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat">number format</see> of the first cell in <see cref="P:GemBox.Spreadsheet.Charts.ExcelChart.CategoryLabelsReference" /> will be used.
        </description>
          </item>
          <item>
            <description>
          If axis is <see cref="T:GemBox.Spreadsheet.Charts.ValueAxis" />, then <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat">number format</see> of the first cell in <see cref="P:GemBox.Spreadsheet.Charts.ChartSeries.ValuesReference" /> of the chart's first series will be used.
        </description>
          </item>
        </list>
        <para>
      Otherwise, if <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.NumberFormat" /> is specified, then it will be used to format axis value labels.
    </para>
        <para>
      Otherwise, if number format cannot be retrieved by any previously described means, then "General" number format will be used to format axis value labels.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.Title">
      <summary>
            Gets the axis title.
            </summary>
      <value>
            The axis title.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.MajorGridlines">
      <summary>
            Gets the major gridlines.
            </summary>
      <value>
            The major gridlines.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.MinorGridlines">
      <summary>
            Gets the minor gridlines.
            </summary>
      <value>
            The minor gridlines.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.Fill">
      <summary>
            Gets or sets the fill formating options.
            </summary>
      <value>
            The fill formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.Outline">
      <summary>
            Gets or sets the outline formating options.
            </summary>
      <value>
            The outline formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.TextFormat">
      <summary>
            Gets or sets the text formatting options.
            </summary>
      <value>
            The text formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.TextBoxFormat">
      <summary>
            Gets or sets the text box formatting.
            </summary>
      <value>
            The text box formatting.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartAxis.ChangeAxisType(GemBox.Spreadsheet.Charts.AxisType)">
      <summary>
            Changes the type of the axis.
            </summary>
      <param name="axisType">New type of the axis.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Charts.ChartAxis" /> instance with <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.AxisType" /> equal to <paramref name="axisType" />, if <paramref name="axisType" /> is not equal to <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.AxisType" /> of this instance; otherwise, this instance.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartAxis.ChangeAxisType``1">
      <summary>
            Changes the type of the axis.
            </summary>
      <typeparam name="TChartAxis">New type of the axis.</typeparam>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Charts.ChartAxis" /> instance of <typeparamref name="TChartAxis" /> type, if this instance is not of <typeparamref name="TChartAxis" /> type; otherwise, this instance.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartAxis.Import(GemBox.Spreadsheet.Charts.ChartAxis)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartAxis.Delete">
      <summary>
            Deletes axis.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartAxis.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartAxis" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartAxis" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartDataLabels">
      <summary>
            Represents the settings for the data labels for an entire series or the entire chart.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.LabelContainsSeriesName">
      <summary>
            Gets or sets a value indicating whether the series name should be shown in a data label.
            </summary>
      <value>
        <see langword="true" /> if the series name should be shown in a data label; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.LabelContainsCategoryName">
      <summary>
            Gets or sets a value indicating whether the category name should be shown in a data label.
            </summary>
      <value>
        <see langword="true" /> if the category name should be shown in a data label; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.LabelContainsValue">
      <summary>
            Gets or sets a value indicating whether the value should be shown in a data label.
            </summary>
      <value>
        <see langword="true" /> if the value should be shown in a data label; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.LabelContainsPercentage">
      <summary>
            Gets or sets a value indicating whether the percentage should be shown in a data label.
            </summary>
      <value>
        <see langword="true" /> if the percentage should be shown in a data label; otherwise, <see langword="false" />.
            </value>
      <remarks>Supported only in XLSX and XLSB.</remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.ShowLeaderLines">
      <summary>
            Gets or sets a value indicating whether leader lines should be shown for data labels.
            </summary>
      <value>
        <see langword="true" /> if leader lines should be shown for data labels; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.LabelContainsLegendKey">
      <summary>
            Gets or sets a value indicating whether the legend key should be shown in a data label.
            </summary>
      <value>
        <see langword="true" /> if the legend key should be shown in a data label; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.LabelContainsValueFromCells">
      <summary>
            Gets or sets value from cells as a cell range reference (for example, 'Sheet1!A1:D1') that should be shown in a data label.
            Null if value from cells should not be shown.
            </summary>
      <value>
              Value from cells that should be shown, null otherwise.
            </value>
      <remarks>Supported only in XLSX and XLSB.</remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.Separator">
      <summary>
            Gets or sets the text that should be used to separate the parts of a data label.
            </summary>
      <value>
            The text that should be used to separate the parts of a data label.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.LabelPosition">
      <summary>
            Gets or sets the position of the data label.
            </summary>
      <value>
            The position of the data label.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.NumberFormat">
      <summary>
            Gets or sets the number format used for formatting data labels.
            If <see cref="P:GemBox.Spreadsheet.Charts.ChartDataLabels.NumberFormatLinkedToSource" /> is <see langword="true" />, then number format from chart's source data (cells) will be used to format data labels.
            Setting this property, sets <see cref="P:GemBox.Spreadsheet.Charts.ChartDataLabels.NumberFormatLinkedToSource" /> to <see langword="false" />.
            </summary>
      <value>
            The number format used for formatting data labels.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.NumberFormatLinkedToSource">
      <summary>
            Gets or sets a value indicating whether number format from chart's source data (cells) will be used to format data labels.
            </summary>
      <value>
        <see langword="true" /> if number format from chart's source data (cells) will be used to format data labels; otherwise, <see langword="false" />.
            </value>
      <remarks>
            Default value of this property is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.Fill">
      <summary>
            Gets or sets the fill formating options.
            </summary>
      <value>
            The fill formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.Outline">
      <summary>
            Gets or sets the outline formating options.
            </summary>
      <value>
            The outline formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartDataLabels.TextFormat">
      <summary>
            Gets or sets the text formatting options.
            </summary>
      <value>
            The text formatting options.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartDataLabels.Show">
      <summary>
            Shows the value in the data label.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartDataLabels.Show(GemBox.Spreadsheet.Charts.DataLabelPosition)">
      <summary>
        <para>Shows the value in the data label at the specified position.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Charts.ColumnChart" /> and <see cref="T:GemBox.Spreadsheet.Charts.BarChart" /> support <see cref="F:GemBox.Spreadsheet.Charts.DataLabelPosition.Center" />, <see cref="F:GemBox.Spreadsheet.Charts.DataLabelPosition.InsideEnd" />, <see cref="F:GemBox.Spreadsheet.Charts.DataLabelPosition.InsideBase" /> and <see cref="F:GemBox.Spreadsheet.Charts.DataLabelPosition.OutsideEnd" /> data label positions.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Charts.LineChart" /> supports <see cref="F:GemBox.Spreadsheet.Charts.DataLabelPosition.Center" />, <see cref="F:GemBox.Spreadsheet.Charts.DataLabelPosition.Left" />, <see cref="F:GemBox.Spreadsheet.Charts.DataLabelPosition.Right" />, <see cref="F:GemBox.Spreadsheet.Charts.DataLabelPosition.Top" /> and <see cref="F:GemBox.Spreadsheet.Charts.DataLabelPosition.Bottom" /> data label positions.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Charts.PieChart" /> supports <see cref="F:GemBox.Spreadsheet.Charts.DataLabelPosition.Center" />, <see cref="F:GemBox.Spreadsheet.Charts.DataLabelPosition.InsideEnd" />, <see cref="F:GemBox.Spreadsheet.Charts.DataLabelPosition.OutsideEnd" /> and <see cref="F:GemBox.Spreadsheet.Charts.DataLabelPosition.BestFit" /> data label positions.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Charts.AreaChart" /> supports none of the data label positions. Use <see cref="M:GemBox.Spreadsheet.Charts.ChartDataLabels.Show" /> overload for <see cref="T:GemBox.Spreadsheet.Charts.AreaChart" /> instead.</para>
      </summary>
      <param name="labelPosition">The position of the label.</param>
      <exception cref="T:System.NotSupportedException">The specified <paramref name="labelPosition" /> is not supported for this chart.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartDataLabels.Delete">
      <summary>
            Deletes data labels.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartDataLabels.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartDataLabels" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartDataLabels" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartGrouping">
      <summary>
            Represents the grouping of a chart series for each category in a chart.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartGrouping.Standard">
      <summary>
            Chart series are drawn on the value axis. Not applicable for <see cref="T:GemBox.Spreadsheet.Charts.ColumnChart" /> and <see cref="T:GemBox.Spreadsheet.Charts.BarChart" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartGrouping.Clustered">
      <summary>
            Chart series are drawn next to each other along the category axis. Applicable only for <see cref="T:GemBox.Spreadsheet.Charts.ColumnChart" /> and <see cref="T:GemBox.Spreadsheet.Charts.BarChart" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartGrouping.Stacked">
      <summary>
        <para>Chart series are drawn next to each other on the value axis.</para>
        <para>Use it to compare the contribution of each value to a total across categories.</para>
        <para>
            This value is currently supported only by <see cref="T:GemBox.Spreadsheet.Charts.ColumnChart" /> and <see cref="T:GemBox.Spreadsheet.Charts.BarChart" /> when exporting a chart to PDF, XPS or image file formats. This value is exported as <see cref="F:GemBox.Spreadsheet.Charts.ChartGrouping.Standard" /> for all other chart types.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartGrouping.PercentStacked">
      <summary>
        <para>Chart series are drawn next to each other along the value axis and scaled to total 100%.</para>
        <para>Use it to compare the percentage that each value contributes to a total across categories.</para>
        <para>
            This value is currently not supported when exporting a chart to PDF, XPS or image file formats. This value is exported as <see cref="F:GemBox.Spreadsheet.Charts.ChartGrouping.Stacked" /> for <see cref="T:GemBox.Spreadsheet.Charts.ColumnChart" /> and <see cref="T:GemBox.Spreadsheet.Charts.BarChart" /> and as <see cref="F:GemBox.Spreadsheet.Charts.ChartGrouping.Standard" /> for all other chart types.
            </para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartLegend">
      <summary>
            Represents a chart legend.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartLegend.IsVisible">
      <summary>
            Gets or sets a value indicating whether legend is visible.
            </summary>
      <value>
        <see langword="true" /> if legend is visible; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>If legend is not visible, its properties won't be saved when saving a workbook into XLSX format.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartLegend.Position">
      <summary>
            Gets or sets the legend position.
            </summary>
      <value>
            The legend position.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartLegend.AllowOverlap">
      <summary>
            Gets or sets a value indicating whether legend overlaps chart's plot area or resizes it.
            </summary>
      <value>
        <see langword="true" /> if legend overlaps chart's plot area without resizing it; otherwise, <see langword="false" /> if legend doesn't overlap chart's plot area but resizes it instead.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartLegend.Fill">
      <summary>
            Gets or sets the fill formating options.
            </summary>
      <value>
            The fill formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartLegend.Outline">
      <summary>
            Gets or sets the outline formating options.
            </summary>
      <value>
            The outline formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartLegend.TextFormat">
      <summary>
            Gets or sets the text formatting options.
            </summary>
      <value>
            The text formatting options.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartLegend.Delete">
      <summary>
            Deletes legend.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartLegend.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartLegend" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartLegend" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartLegendPosition">
      <summary>
            Specifies the possible positions for a legend.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartLegendPosition.Right">
      <summary>
            Specifies that the legend shall be drawn at the right of the chart.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartLegendPosition.Top">
      <summary>
            Specifies that the legend shall be drawn at the top of the chart.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartLegendPosition.Bottom">
      <summary>
            Specifies that the legend shall be drawn at the bottom of the chart.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartLegendPosition.Left">
      <summary>
            Specifies that the legend shall be drawn at the left of the chart.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartLegendPosition.TopRight">
      <summary>
            Specifies that the legend shall be drawn at the top right of the chart.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartPlotArea">
      <summary>
            Represents a chart plot area.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartPlotArea.Fill">
      <summary>
            Gets or sets the fill formating options.
            </summary>
      <value>
            The fill formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartPlotArea.Outline">
      <summary>
            Gets or sets the outline formating options.
            </summary>
      <value>
            The outline formatting options.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartSeries">
      <summary>
            Represents a single chart series.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.Name">
      <summary>
            Gets or sets the series name as direct value (for example, 'My series') or as a reference to a cell with value (for example, '=Sheet1!A1').
            </summary>
      <value>
            The series name.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.IsLegendEntryVisible">
      <summary>
            Gets or sets a value indicating whether legend entry for this series instance is visible.
            </summary>
      <value>
        <see langword="true" /> if legend entry for this series instance is visible; otherwise, <see langword="false" />.
            </value>
      <remarks>
            Default value of this property is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.Index">
      <summary>
            Gets the index of this <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" /> instance in the parent <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection" />.
            If parent chart is a <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />'s child, value represents a global index.
            </summary>
      <value>
            The index of this <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" /> instance in the parent <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.DisplayName">
      <summary>
            Gets the series display name. If <see cref="P:GemBox.Spreadsheet.Charts.ChartSeries.Name" /> is direct value, then <see cref="P:GemBox.Spreadsheet.Charts.ChartSeries.Name" /> value is returned; otherwise, if <see cref="P:GemBox.Spreadsheet.Charts.ChartSeries.Name" /> is a cell reference, then referenced cell value is returned. 
            </summary>
      <value>
            The series display name.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.DataLabels">
      <summary>
            Gets the settings for the data labels for an entire series.
            </summary>
      <value>
            The settings for the data labels for an entire series.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.ValuesReference">
      <summary>
            Gets or sets the chart series values as a cell range reference (for example, 'Sheet1!A1:D1'). Values from cells in the referenced range will be used as values of this series.
            </summary>
      <value>
            The chart series values as a cell range reference.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.Values">
      <summary>
            Gets the chart series values.
            </summary>
      <value>
            The chart series values.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.DataPoints">
      <summary>
            Gets the chart series data points.
            </summary>
      <value>
            The chart series data points.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeries.SetValues(System.Collections.IEnumerable)">
      <summary>
            Sets the chart series values.
            </summary>
      <param name="values">The chart series values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeries.SetValues(System.Object[])">
      <summary>
            Sets the chart series values.
            </summary>
      <param name="values">The chart series values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeries.Delete">
      <summary>
            Deletes the series.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeries.ToString">
      <summary>
            Returns the <see cref="P:GemBox.Spreadsheet.Charts.ChartSeries.DisplayName" /> value.
            </summary>
      <returns>
            The <see cref="P:GemBox.Spreadsheet.Charts.ChartSeries.DisplayName" /> value.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.Fill">
      <summary>
            Gets or sets the fill formating options.
            </summary>
      <value>
            The fill formatting options.
            </value>
      <remarks>
            Fill format is not supported by <see cref="T:GemBox.Spreadsheet.Charts.LineChartSeries" /> and <see cref="T:GemBox.Spreadsheet.Charts.ScatterChartSeries" />.
            For those instances property will always return an empty fill and setting the value will have no effect.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.Outline">
      <summary>
            Gets or sets the outline formating options.
            </summary>
      <value>
            The outline formatting options.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" /> objects.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" /> that is stored at the zero-based index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection" />. 
            </summary>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection" /> from which to get the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" />.</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" /> that is stored at the zero-based index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.GetItemCore(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.CreateCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.AddCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.AddCore(System.String,System.String)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.AddCore(System.String,System.Collections.IEnumerable)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.CopyToCore(System.Array,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.GetEnumeratorCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add">
      <summary>
            Adds a new empty series to the chart.
            </summary>
      <returns>A new empty series added to the chart.</returns>
      <remarks>
            Calling this method on <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />'s series collection will add a new empty series to the last child chart's series collection.
            If <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" /> is empty, an <see cref="T:GemBox.Spreadsheet.Charts.AreaChart" /> will be added automatically.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add(System.String,System.String)">
      <summary>
            Adds a new series with specified name and values reference to the chart.
            </summary>
      <param name="name">The series name.</param>
      <param name="valuesReference">The series values reference.</param>
      <returns>A new series with specified name and values reference added to the chart.</returns>
      <remarks>
            Calling this method on <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />'s series collection will add a new series with specified name and values reference to the last child chart's series collection.
            If <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" /> is empty, an <see cref="T:GemBox.Spreadsheet.Charts.AreaChart" /> will be added automatically.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add(System.String,System.Collections.IEnumerable)">
      <summary>
            Adds a new series with specified name and values to the chart.
            </summary>
      <param name="name">The series name.</param>
      <param name="values">The series values.</param>
      <returns>A new series with specified name and values added to the chart.</returns>
      <remarks>
            Calling this method on <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />'s series collection will add a new series with specified name and values to the last child chart's series collection.
            If <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" /> is empty, an <see cref="T:GemBox.Spreadsheet.Charts.AreaChart" /> will be added automatically.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add(System.String,System.Object[])">
      <summary>
            Adds a new series with specified name and values to the chart.
            </summary>
      <param name="name">The series name.</param>
      <param name="values">The series values.</param>
      <returns>A new series with specified name and values added to the chart.</returns>
      <remarks>
            Calling this method on <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />'s series collection will add a new series with specified name and values to the last child chart's series collection.
            If <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" /> is empty, an <see cref="T:GemBox.Spreadsheet.Charts.AreaChart" /> will be added automatically.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the element at the specified index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection" />.
            </summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Clear">
      <summary>
            Removes all elements from the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Move(System.Int32,System.Int32)">
      <summary>
            Moves the series at the specified index to a new location in the collection.
            </summary>
      <param name="oldIndex">The zero-based index specifying the location of the item to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the item.</param>
      <remarks>This method is not supported by <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />'s series collection.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.GetEnumerator">
      <inheritdoc cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#IList#Item(System.Int32)">
      <summary>
            Gets the element at the specified index. Setting element is not supported.
            </summary>
      <param name="index">The zero-based index of the element to get.</param>
      <returns>The element at the specified index.</returns>
      <exception cref="T:System.NotSupportedException">Setting element is not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add(System.String,System.String)">ChartSeriesCollection.Add</see> overloads.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>
            Not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add(GemBox.Spreadsheet.Charts.ChartSeries)">ChartSeriesCollection.Add</see> overloads.
            </summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add(System.String,System.String)">ChartSeriesCollection.Add</see> overloads.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#IList#Add(System.Object)">
      <summary>
            Not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add(System.String,System.String)">ChartSeriesCollection.Add</see> overloads.
            </summary>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</param>
      <returns>
            The position into which the new element was inserted.
            </returns>
      <exception cref="T:System.NotSupportedException">Not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add(System.String,System.String)">ChartSeriesCollection.Add</see> overloads.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1">
      <summary>
            Represents a collection of series of specific type which derives from <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" /> type.
            </summary>
      <typeparam name="T">A <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" /> derived type.</typeparam>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Item(System.Int32)">
      <summary>
            Gets the <typeparamref name="T" /> that is stored at the zero-based index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1">ChartSeriesCollection&lt;T&gt;</see>. 
            </summary>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1">ChartSeriesCollection&lt;T&gt;</see> from which to get the <typeparamref name="T" />.</param>
      <returns>The <typeparamref name="T" /> that is stored at the zero-based index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1">ChartSeriesCollection&lt;T&gt;</see>.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.CreateItem">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.GetItemCore(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.CreateCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.AddCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.AddCore(System.String,System.String)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.AddCore(System.String,System.Collections.IEnumerable)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.CopyToCore(System.Array,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.GetEnumeratorCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add">
      <summary>
            Adds a new empty series to the chart.
            </summary>
      <returns>A new empty series added to the chart.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add(System.String,System.String)">
      <summary>
            Adds a new series with specified name and values reference to the chart.
            </summary>
      <param name="name">The series name.</param>
      <param name="valuesReference">The series values reference.</param>
      <returns>A new series with specified name and values reference added to the chart.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add(System.String,System.Collections.IEnumerable)">
      <summary>
            Adds a new series with specified name and values to the chart.
            </summary>
      <param name="name">The series name.</param>
      <param name="values">The series values.</param>
      <returns>A new series with specified name and values added to the chart.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add(System.String,System.Object[])">
      <summary>
            Adds a new series with specified name and values to the chart.
            </summary>
      <param name="name">The series name.</param>
      <param name="values">The series values.</param>
      <returns>A new series with specified name and values added to the chart.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.RemoveAt(System.Int32)">
      <summary>
            Removes the element at the specified index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1" />.
            </summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Clear">
      <summary>
            Removes all elements from the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Move(System.Int32,System.Int32)">
      <summary>
            Moves the series at the specified index to a new location in the collection.
            </summary>
      <param name="oldIndex">The zero-based index specifying the location of the item to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the item.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1" /></summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1" />.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>
            Gets the item at the specified index. Setting item is not supported.
            </summary>
      <param name="index">The zero-based index of the item to get.</param>
      <returns>The item at the specified index.</returns>
      <exception cref="T:System.NotSupportedException">Setting item is not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add">ChartSeriesCollection&lt;T&gt;.Add</see> method or one of its overloads.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>
            Not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add">ChartSeriesCollection&lt;T&gt;.Add</see> method or one of its overloads.
            </summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The <typeparamref name="T" /> to insert into the <see cref="T:System.Collections.Generic.IList`1">IList&lt;T&gt;</see>.</param>
      <exception cref="T:System.NotSupportedException">Not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add">ChartSeriesCollection&lt;T&gt;.Add</see> method or one of its overloads.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>
            Not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add">ChartSeriesCollection&lt;T&gt;.Add</see> method or one of its overloads.
            </summary>
      <param name="item">The <typeparamref name="T" /> to add to the <see cref="T:System.Collections.Generic.IList`1">IList&lt;T&gt;</see>.</param>
      <exception cref="T:System.NotSupportedException">Not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add">ChartSeriesCollection&lt;T&gt;.Add</see> method or one of its overloads.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartTitle">
      <summary>
            Represents a chart or axis title.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.Direction">
      <summary>
            Gets or sets the title text direction.
            </summary>
      <value>
            The title text direction.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.AllowOverlap">
      <summary>
            Gets or sets a value indicating whether title overlaps chart's plot area or resizes it.
            </summary>
      <value>
        <see langword="true" /> if title overlaps chart's plot area without resizing it; otherwise, <see langword="false" /> if title doesn't overlap chart's plot area but resizes it instead.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.IsVisible">
      <summary>
            Gets or sets a value indicating whether title is visible.
            </summary>
      <value>
        <see langword="true" /> if title is visible; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Default value of this property is <see langword="false" />.</para>
        <para>If title is not visible, its properties won't be saved when saving a workbook into XLSX format.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.Text">
      <summary>
            Gets or sets the title text as direct value (for example, 'My chart title') or as a reference to a cell with value (for example, '=Sheet1!A1'). 
            If set value is not <see langword="null" /> nor <see cref="F:System.String.Empty" />, then <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.IsVisible" /> is set to <see langword="true" />.
            </summary>
      <value>
            The title text.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.RichText">
      <summary>
            Gets the title's rich text, which can be used to partially format the title content. Set the rich text by using <see cref="M:GemBox.Spreadsheet.Charts.ChartTitle.SetRichText" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.DisplayText">
      <summary>
            Gets the title display text. If <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.IsVisible" /> is <see langword="false" />, then <see cref="F:System.String.Empty" /> is returned;
            otherwise, if <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.Text" /> is direct value, then <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.Text" /> value is returned; 
            otherwise, if <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.Text" /> is a cell reference, then referenced cell value is returned;
            otherwise, default title is returned.
            </summary>
      <value>
            The title display text.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.Fill">
      <summary>
            Gets or sets the fill formating options.
            </summary>
      <value>
            The fill formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.Outline">
      <summary>
            Gets or sets the outline formating options.
            </summary>
      <value>
            The outline formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.TextFormat">
      <summary>
            Gets or sets the text formatting options.
            </summary>
      <value>
            The text formatting options.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartTitle.Delete">
      <summary>
            Deletes the title.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartTitle.ToString">
      <summary>
            Returns the <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.DisplayText" /> value.
            </summary>
      <returns>
            The <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.DisplayText" /> value.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartTitle.SetRichText">
      <summary>
            Defines this chart title as rich text, enabling the usage of <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.RichText" />.
            It is possible to use the <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.RichText" /> property to set multiple formats to different parts of the title.
            </summary>
      <remarks>Using this method will erase the current title.</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartTitleDirection">
      <summary>
            Represents chart or axis title text direction.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartTitleDirection.Horizontal">
      <summary>
            Text is horizontal.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartTitleDirection.Rotate90">
      <summary>
            Text is vertical (each line is 90 degrees rotated clockwise, so it goes from top to bottom; each next line is to the left from the previous one).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartTitleDirection.Rotate270">
      <summary>
            Text is vertical (each line is 270 degrees rotated clockwise, so it goes from bottom to top; each next line is to the right from the previous one).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartTitleDirection.Stacked">
      <summary>
            Text is vertical (one letter on top of another).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartType">
      <summary>
            Represents a chart type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartType.Column">
      <summary>
            Chart type whose series values are drawn using vertical rectangles.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartType.Bar">
      <summary>
            Chart type whose series values are drawn using horizontal rectangles.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartType.Line">
      <summary>
            Chart type whose series values are drawn using lines.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartType.Area">
      <summary>
            Chart type whose series values are drawn using filled areas.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartType.Pie">
      <summary>
            Chart type whose single series values are drawn as filled arcs in a pie-like form.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartType.Combo">
      <summary>
            Chart type which combines different chart types in a single chart.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartType.Scatter">
      <summary>
            Chart type whose series x and y values are drawn using lines.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ColumnChart">
      <summary>
            Represents a chart whose series values are drawn using vertical rectangles.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ColumnChart.SupportedDataLabelPositions">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ColumnChart.DefaultDataLabelPosition">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ColumnChart.DefaultEmptyCellDisplayMode">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ColumnChart.SeriesCore">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ColumnChart.ChartType">
      <summary>
            Gets the chart type for <see cref="T:GemBox.Spreadsheet.Charts.ColumnChart" /> which is <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Column" />.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Column" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ColumnChart.Grouping">
      <summary>
            Gets or sets the chart grouping.
            </summary>
      <value>
            The chart grouping.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ColumnChart.Axes">
      <summary>
            Gets the chart axes.
            </summary>
      <value>
            The chart axes.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ColumnChart.SeriesGapWidth">
      <summary>
        <para>Gets or sets the width of the series gap.</para>
        <para>Default value is 2.19 if <see cref="P:GemBox.Spreadsheet.Charts.ColumnChart.Grouping" /> is <see cref="F:GemBox.Spreadsheet.Charts.ChartGrouping.Clustered" />; otherwise, 1.5.</para>
      </summary>
      <value>
            The width of the series gap in range from 0.0 to 5.0.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between 0.0 and 5.0.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ColumnChart.SeriesOverlap">
      <summary>
        <para>Gets or sets the series overlap.</para>
        <para>Default value is -0.27 if <see cref="P:GemBox.Spreadsheet.Charts.ColumnChart.Grouping" /> is <see cref="F:GemBox.Spreadsheet.Charts.ChartGrouping.Clustered" />; otherwise, 1.</para>
      </summary>
      <value>
            The series overlap in range from -1.0 to 1.0.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Value is not between -1.0 and 1.0. 
            </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ColumnChart.Import(GemBox.Spreadsheet.Charts.ExcelChart)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ComboChart">
      <summary>
            Represents a chart that combines different chart types in a single chart.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ComboChart.SeriesCore">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ComboChart.ChartType">
      <summary>
            Gets the chart type for <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" /> which is <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Combo" />.
            </summary>
      <returns>
            The <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Combo" /> value.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ComboChart.Count">
      <summary>
            Gets the number of child charts contained in the <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />.
            </summary>
      <returns>
            The number of child charts contained in the <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ComboChart.Item(System.Int32)">
      <summary>
            Gets the child chart at the specified index.
            </summary>
      <value>
            The child chart at the specified index.
            </value>
      <param name="index">The zero-based index of the child chart to get.</param>
      <returns>The child chart at the specified index.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ComboChart.DefaultEmptyCellDisplayMode">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ComboChart.Contains(GemBox.Spreadsheet.Charts.ExcelChart)">
      <summary>
            Determines whether the <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" /> contains the specified child chart.
            </summary>
      <param name="item">The child chart to locate.</param>
      <returns>
        <see langword="true" /> if child chart is found; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ComboChart.IndexOf(GemBox.Spreadsheet.Charts.ExcelChart)">
      <summary>
            Determines the index of the specified child chart.
            </summary>
      <param name="item">The child chart to locate.</param>
      <returns>
            The index of child chart if found; otherwise, -1.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ComboChart.Add(GemBox.Spreadsheet.Charts.ChartType)">
      <summary>
            Adds a new child chart to <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />.
            </summary>
      <param name="chartType">Type of the child chart.</param>
      <returns>A new chart added to <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ComboChart.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.Charts.ChartGrouping)">
      <summary>
            Adds a new child chart to <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />.
            </summary>
      <param name="chartType">Type of the child chart.</param>
      <param name="chartGrouping">The child chart's series grouping (clustered, stacked or 100% stacked).</param>
      <returns>A new chart added to <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ComboChart.Add``1">
      <summary>
            Adds a new child chart to <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />.
            </summary>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <returns>A new chart added to <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ComboChart.Add``1(GemBox.Spreadsheet.Charts.ChartGrouping)">
      <summary>
            Adds a new child chart to <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />.
            </summary>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <param name="chartGrouping">The child chart's series grouping (clustered, stacked or 100% stacked).</param>
      <returns>A new chart added to <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ComboChart.Remove(GemBox.Spreadsheet.Charts.ExcelChart)">
      <summary>
            Removes the specified child chart from the <see cref="T:GemBox.Spreadsheet.Charts.ComboChart" />.
            </summary>
      <param name="item">The child chart to remove.</param>
      <returns>
        <see langword="true" /> if child chart was removed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ComboChart.RemoveAt(System.Int32)">
      <summary>
            Removes the child chart at the specified index.
            </summary>
      <param name="index">The zero-based index of the child chart to remove.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ComboChart.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through child charts.
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through child charts.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.DataLabelPosition">
      <summary>
            Represents the possible positions for a data label.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.DataLabelPosition.None">
      <summary>
            Data label is not shown.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.DataLabelPosition.Left">
      <summary>
            Specifies that data labels shall be displayed to the left of the data marker.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.DataLabelPosition.Right">
      <summary>
            Specifies that data labels shall be displayed to the right of the data marker.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.DataLabelPosition.Top">
      <summary>
            Specifies that data labels shall be displayed above the data marker.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.DataLabelPosition.Bottom">
      <summary>
            Specifies that data labels shall be displayed below the data marker.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.DataLabelPosition.Center">
      <summary>
            Specifies that data labels shall be displayed centered on the data marker.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.DataLabelPosition.InsideBase">
      <summary>
            Specifies that data labels shall be displayed inside the base of the data marker.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.DataLabelPosition.InsideEnd">
      <summary>
            Specifies that data labels shall be displayed inside the end of the data marker.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.DataLabelPosition.OutsideEnd">
      <summary>
            Specifies that data labels shall be displayed outside the end of the data marker.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.DataLabelPosition.BestFit">
      <summary>
            Specifies that data labels shall be displayed in the best position.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.DataPoint">
      <summary>
            Represents a chart series data point.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DataPoint.InvertIfNegative">
      <summary>
            Gets or sets a value indicating whether colors should be inverted if the data point value is negative.
            </summary>
      <value>
        <c>true</c> if colors should be inverted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DataPoint.DataLabel">
      <summary>
            Gets the settings for the data label for data point.
            </summary>
      <value>
            The settings for the data labels for single data point.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DataPoint.Index">
      <summary>
            Gets the index.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DataPoint.Fill">
      <summary>
            Gets or sets the fill formating options.
            </summary>
      <value>
            The fill formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DataPoint.Outline">
      <summary>
            Gets or sets the outline formating options.
            </summary>
      <value>
            The outline formatting options.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.DataPoint.Delete">
      <summary>
            Deletes the data point.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.DataPointCollection">
      <summary>
            Represents a collection of chart series data points.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DataPointCollection.Item(System.Int32)">
      <summary>
            Gets the data point at the specified index.
            </summary>
      <param name="index">The zero-based index of the data point to get.</param>
      <returns>
            The data point at the specified index.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.DataPointCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through data points.
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through data points.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.DateAxis">
      <summary>
        <para>Represents an axis used for categories which are dates / times.</para>
        <para>This axis type is currently not supported when exporting a chart to PDF, XPS or image file formats. This axis is exported as <see cref="T:GemBox.Spreadsheet.Charts.CategoryAxis" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.Minimum">
      <summary>
            Gets or sets the minimum value of the axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <value>
            The minimum value of the axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.Maximum">
      <summary>
            Gets or sets the maximum value of the axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <value>
            The maximum value of the axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.MajorTimeUnit">
      <summary>
            Gets or sets the time unit for <see cref="P:GemBox.Spreadsheet.Charts.DateAxis.MajorUnit">major tick marks</see>.
            </summary>
      <value>
            The time unit for major tick marks.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.MinorTimeUnit">
      <summary>
            Gets or sets the time unit for <see cref="P:GemBox.Spreadsheet.Charts.DateAxis.MinorUnit">minor tick marks</see>.
            </summary>
      <value>
            The time unit for minor tick marks.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.BaseUnit">
      <summary>
            Gets or sets the smallest time unit that is represented on the date axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <value>
            The smallest time unit that is represented on the date axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.MajorUnit">
      <summary>
            Gets or sets the distance between major ticks or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <value>
            The distance between major ticks or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not positive number.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.MinorUnit">
      <summary>
            Gets or sets the distance between minor ticks or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <value>
            The distance between minor ticks or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not positive number.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.AxisType">
      <summary>
            Gets the axis type for <see cref="T:GemBox.Spreadsheet.Charts.DateAxis" /> which is <see cref="F:GemBox.Spreadsheet.Charts.AxisType.Date" />.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Charts.AxisType.Date" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.NumberFormatFromLinkedSource">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.DateAxis.Import(GemBox.Spreadsheet.Charts.ChartAxis)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.EmptyCellDisplayMode">
      <summary>
            Specifies the possible ways to display empty cell values (cells with <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> equal to <see langword="null" />).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.EmptyCellDisplayMode.Zero">
      <summary>
            Specifies that empty cell values shall be treated as zero.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.EmptyCellDisplayMode.Gaps">
      <summary>
            Specifies that empty cell values shall be left as a gap.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.EmptyCellDisplayMode.ConnectDataPointsWithLine">
      <summary>
            Specifies that empty cell values shall be spanned with a line.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ExcelChart">
      <summary>
            Represents a base class for all charts in a worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.SeriesCore">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.RoundedCorners">
      <summary>
        <para>Gets or sets a value indicating whether the chart area border has rounded corners.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> if the chart area border has rounded corners; otherwise, <see langword="false" />.
            </value>
      <remarks>Supported only in XLSX and XLSB.</remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.Series">
      <summary>
            Gets the chart's series.
            </summary>
      <value>
            The chart's series.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.ChartType">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.Charts.ChartType" /> of this <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> instance.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.Charts.ChartType" /> of this <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> instance.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.DefaultEmptyCellDisplayMode">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.Title">
      <summary>
            Gets the chart's title.
            </summary>
      <value>
            The chart's title.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.Legend">
      <summary>
            Gets the chart's legend.
            </summary>
      <value>
            The chart's legend.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.PlotArea">
      <summary>
            Gets the chart's plot area.
            </summary>
      <value>
            The chart's plot area.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.DataLabels">
      <summary>
            Gets the settings for the data labels for the entire chart.
            </summary>
      <value>
            The settings for the data labels for the entire chart.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.ShowEmptyCellsAs">
      <summary>
            Gets or sets the value which indicates how empty cells (cells with <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> equal to <see langword="null" />) shall be plotted on the chart.
            </summary>
      <value>
            The value which indicates how empty cells (cells with <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> equal to <see langword="null" />) shall be plotted on the chart.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.ShowDataInHiddenCells">
      <summary>
            Gets or sets the value which indicates whether only visible cells should be plotted on the chart.
            </summary>
      <value>
        <see langword="true" /> to plot also cells in hidden rows or columns, <see langword="false" /> otherwise.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.CategoryLabelsReference">
      <summary>
            Gets or sets the chart's category labels as a cell range reference (for example, 'Sheet1!A1:D1'). Values from cells in the referenced range will be used as category labels.
            </summary>
      <value>
            The chart's category labels as a cell range reference.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.CategoryLabels">
      <summary>
            Gets the chart's category labels.
            </summary>
      <value>
            The chart's category labels.
            </value>
      <remarks>
            If category labels are not set neither as <see cref="P:GemBox.Spreadsheet.Charts.ExcelChart.CategoryLabelsReference">cell range reference</see> nor as <see cref="M:GemBox.Spreadsheet.Charts.ExcelChart.SetCategoryLabels(System.Collections.Generic.IEnumerable{System.String})">direct value</see>, automatic labels will be used (sequence of integral numbers starting from 1 whose count will be equal to the count of <see cref="P:GemBox.Spreadsheet.Charts.ChartSeries.Values">values</see> in the first chart series).
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.Fill">
      <summary>
            Gets or sets the fill formating options.
            </summary>
      <value>
            The fill formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.Outline">
      <summary>
            Gets or sets the outline formating options.
            </summary>
      <value>
            The outline formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.TextFormat">
      <summary>
            Gets or sets the text formatting options.
            </summary>
      <value>
            The text formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.IsAutoDisplayTitleVisible">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SetCategoryLabels(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Sets the chart's category labels.
            </summary>
      <param name="categoryLabels">The chart's category labels.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryLabels" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SetCategoryLabels(System.String[])">
      <summary>
            Sets the chart's category labels.
            </summary>
      <param name="categoryLabels">The chart's category labels.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(System.String)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Either chart is in invalid state or <paramref name="range" /> parameter is not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(System.String,System.Boolean)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <param name="switchRowColumn">if set to <see langword="true" /> category labels will be in first column (not row), series names will be in first row (not column) and series values will be in columns (not rows).</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Either chart is in invalid state or <paramref name="range" /> parameter is not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(System.String,System.Boolean,System.Boolean)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <param name="switchRowColumn">if set to <see langword="true" /> category labels will be in first column (not row), series names will be in first row (not column) and series values will be in columns (not rows).</param>
      <param name="excludeCategoryLabels">if set to <see langword="true" />, category labels won't be resolved from <paramref name="range" />.</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Either chart is in invalid state or <paramref name="range" /> parameter is not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <param name="switchRowColumn">if set to <see langword="true" /> category labels will be in first column (not row), series names will be in first row (not column) and series values will be in columns (not rows).</param>
      <param name="excludeCategoryLabels">if set to <see langword="true" />, category labels won't be resolved from <paramref name="range" />.</param>
      <param name="excludeSeriesNames">if set to <see langword="true" />, series names won't be resolved from <paramref name="range" />.</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Either chart is in invalid state or <paramref name="range" /> parameter is not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(GemBox.Spreadsheet.CellRange)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Parameter <paramref name="range" /> is <see langword="null" /> or not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(GemBox.Spreadsheet.CellRange,System.Boolean)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <param name="switchRowColumn">if set to <see langword="true" /> category labels will be in first column (not row), series names will be in first row (not column) and series values will be in columns (not rows).</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Parameter <paramref name="range" /> is <see langword="null" /> or not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(GemBox.Spreadsheet.CellRange,System.Boolean,System.Boolean)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <param name="switchRowColumn">if set to <see langword="true" /> category labels will be in first column (not row), series names will be in first row (not column) and series values will be in columns (not rows).</param>
      <param name="excludeCategoryLabels">if set to <see langword="true" />, category labels won't be resolved from <paramref name="range" />.</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Parameter <paramref name="range" /> is <see langword="null" /> or not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(GemBox.Spreadsheet.CellRange,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <param name="switchRowColumn">if set to <see langword="true" /> category labels will be in first column (not row), series names will be in first row (not column) and series values will be in columns (not rows).</param>
      <param name="excludeCategoryLabels">if set to <see langword="true" />, category labels won't be resolved from <paramref name="range" />.</param>
      <param name="excludeSeriesNames">if set to <see langword="true" />, series names won't be resolved from <paramref name="range" />.</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Parameter <paramref name="range" /> is <see langword="null" /> or not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.ChangeChartType(GemBox.Spreadsheet.Charts.ChartType)">
      <summary>
            Changes the chart to a different type of chart.
            </summary>
      <param name="chartType">Type of chart to change the chart to.</param>
      <returns>A chart of different type.</returns>
      <exception cref="T:System.NotSupportedException">Changing to or from <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Combo" /> is not supported.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.ChangeChartType``1">
      <summary>
            Changes the chart to a different type of chart.
            </summary>
      <typeparam name="TChart">Type of chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type to change the chart to.</typeparam>
      <returns>A chart of different type.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.Import(GemBox.Spreadsheet.Charts.ExcelChart)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.ImportCategoryLabels(GemBox.Spreadsheet.Charts.ExcelChart)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.ToStringCore">
      <exclude />
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ExcelChart.allSupportedDataLabelPositions">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.SupportedDataLabelPositions">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.DefaultDataLabelPosition">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.DefaultDataLabelSeparator">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ExcelChartCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart">chart</see>s in the worksheet.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.Charts">ExcelWorksheet.Charts</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="left">The distance of the left edge of the chart from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the chart from the top edge of the worksheet.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which doesn't move nor sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.FreeFloating" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.Charts.ChartGrouping,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="left">The distance of the left edge of the chart from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the chart from the top edge of the worksheet.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which doesn't move nor sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.FreeFloating" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <param name="left">The distance of the left edge of the chart from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the chart from the top edge of the worksheet.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which doesn't move nor sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.FreeFloating" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.Charts.ChartGrouping,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="left">The distance of the left edge of the chart from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the chart from the top edge of the worksheet.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which doesn't move nor sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.FreeFloating" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="positionFrom">The chart's position.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.Charts.ChartGrouping,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFrom">The chart's position.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <param name="positionFrom">The chart's position.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.Charts.ChartGrouping,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFrom">The chart's position.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="positionFromCell">The chart's position (for example, "A1").</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.Charts.ChartGrouping,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFromCell">The chart's position (for example, "A1").</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <param name="positionFromCell">The chart's position (for example, "A1").</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.Charts.ChartGrouping,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFromCell">The chart's position (for example, "A1").</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="positionFrom">The chart's position (top-left corner).</param>
      <param name="positionTo">The chart's end position (bottom-right corner).</param>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.Charts.ChartGrouping,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFrom">The chart's position (top-left corner).</param>
      <param name="positionTo">The chart's end position (bottom-right corner).</param>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <param name="positionFrom">The chart's position (top-left corner).</param>
      <param name="positionTo">The chart's end position (bottom-right corner).</param>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.Charts.ChartGrouping,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFrom">The chart's position (top-left corner).</param>
      <param name="positionTo">The chart's end position (bottom-right corner).</param>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,System.String,System.String)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="positionFromCell">The chart's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The chart's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.Charts.ChartGrouping,System.String,System.String)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFromCell">The chart's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The chart's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(System.String,System.String)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <param name="positionFromCell">The chart's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The chart's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.Charts.ChartGrouping,System.String,System.String)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFromCell">The chart's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The chart's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added chart will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Get``1(System.Int32)">
      <summary>
            Gets the chart at the specified index and casts it to the specified chart subtype deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" />.
            </summary>
      <typeparam name="T">The chart subtype deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> to cast the chart to.</typeparam>
      <param name="index">The zero-based index of the chart to get.</param>
      <returns>The chart at the specified index casted to <typeparamref name="T" /> type.</returns>
      <remarks>This method serves as a utility method for casting.</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or is equal to or greater than <see cref="P:GemBox.Spreadsheet.ExcelDrawingCollection`1.Count" />.</exception>
      <exception cref="T:System.InvalidCastException">A chart at the specified index cannot be cast to type <typeparamref name="T" />.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.LineChart">
      <summary>
            Represents a chart whose series values are drawn using lines.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.Series">
      <summary>
            Gets the chart's series.
            </summary>
      <value>
            The chart's series.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.SupportedDataLabelPositions">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.DefaultDataLabelPosition">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.DefaultEmptyCellDisplayMode">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.SeriesCore">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.ChartType">
      <summary>
            Gets the chart type for <see cref="T:GemBox.Spreadsheet.Charts.LineChart" /> which is <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Line" />.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Line" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.ShowMarkers">
      <summary>
        <para>Gets or sets a value indicating whether markers will be shown on series points.</para>
        <para>Value is resolved from the series. If any series has a marker than all newly added series will also have a marker.</para>
        <para>When setting a value, value is propagated to all series.</para>
      </summary>
      <value>
        <see langword="true" /> if markers will be shown on series points; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.Grouping">
      <summary>
            Gets or sets the chart grouping.
            </summary>
      <value>
            The chart grouping.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.Axes">
      <summary>
            Gets the chart axes.
            </summary>
      <value>
            The chart axes.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.LineChart.Import(GemBox.Spreadsheet.Charts.ExcelChart)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.LineChart.ToStringCore">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.LineChartSeries">
      <summary>
            Represents a single <see cref="T:GemBox.Spreadsheet.Charts.LineChart" /> series.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChartSeries.Fill">
      <inheritdoc />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.LineChartSeries.CreateDefaultMarker">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.LineChartSeriesCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.Charts.LineChartSeries" /> objects.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.LineChartSeriesCollection.CreateItem">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.Marker">
      <summary>
            Represents a marker for <see cref="T:GemBox.Spreadsheet.Charts.LineChartSeries" /> and <see cref="T:GemBox.Spreadsheet.Charts.ScatterChartSeries" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.Marker.MarkerType">
      <summary>
            Gets or sets the marker type.
            </summary>
      <value>
            The marker type.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.Marker.Size">
      <summary>
            Gets or sets the marker size.
            </summary>
      <value>
            The marker size.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.Marker.Fill">
      <summary>
            Gets or sets the fill formating options.
            </summary>
      <value>
            The fill formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.Marker.Outline">
      <summary>
            Gets or sets the outline formating options.
            </summary>
      <value>
            The outline formatting options.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.Marker.Delete">
      <summary>
            Deletes the marker from series.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.Marker.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.Marker" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.Marker" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.MarkerChartSeries">
      <summary>
            Represents a single chart series with <see cref="T:GemBox.Spreadsheet.Charts.Marker" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.MarkerChartSeries.Marker">
      <summary>
            Gets the marker.
            </summary>
      <value>
            The marker.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.MarkerChartSeries.CreateDefaultMarker">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.MarkerType">
      <summary>
            Represents a marker symbol which will be used on each <see cref="T:GemBox.Spreadsheet.Charts.LineChartSeries" /> data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Auto">
      <summary>
            Specifies an automatic symbol shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.None">
      <summary>
            Specifies nothing shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Square">
      <summary>
            Specifies a square shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Diamond">
      <summary>
            Specifies a diamond shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Triangle">
      <summary>
            Specifies a triangle shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.X">
      <summary>
            Specifies an X shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Star">
      <summary>
            Specifies a star shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Dot">
      <summary>
            Specifies a dot shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Dash">
      <summary>
            Specifies a dash shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Circle">
      <summary>
            Specifies a circle shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Plus">
      <summary>
            Specifies a plus shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Picture">
      <summary>
            Specifies a picture shall be drawn at each data point.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.PieChart">
      <summary>
            Represents a chart whose single series values are drawn as filled arcs in a pie-like form.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.PieChart.SupportedDataLabelPositions">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.PieChart.DefaultDataLabelPosition">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.PieChart.DefaultDataLabelSeparator">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.PieChart.IsAutoDisplayTitleVisible">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.PieChart.DefaultEmptyCellDisplayMode">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.PieChart.SeriesCore">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.PieChart.ChartType">
      <summary>
            Gets the chart type for <see cref="T:GemBox.Spreadsheet.Charts.PieChart" /> which is <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Pie" />.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Pie" /> value.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ScatterChart">
      <summary>
            Represents a chart whose series values are drawn using horizontal rectangles.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChart.Series">
      <summary>
            Gets the chart's series.
            </summary>
      <value>
            The chart's series.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChart.SmoothLines">
      <summary>
            Gets or sets a value indicating whether the series lines will be smooth or straight.
            </summary>
      <value>
        <c>true</c> if series lines will be smooth; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChart.DefaultEmptyCellDisplayMode">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChart.SupportedDataLabelPositions">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChart.DefaultDataLabelPosition">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChart.SeriesCore">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChart.ChartType">
      <summary>
            Gets the chart type for <see cref="T:GemBox.Spreadsheet.Charts.ScatterChart" /> which is <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Scatter" />.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Scatter" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChart.Axes">
      <summary>
            Gets the chart axes.
            </summary>
      <value>
            The chart axes.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChart.ShowMarkers">
      <summary>
        <para>Gets or sets a value indicating whether markers will be shown on series points.</para>
        <para>Value is resolved from the series. If any series has a marker than all newly added series will also have a marker.</para>
        <para>When setting a value, value is propagated to all series.</para>
      </summary>
      <value>
        <see langword="true" /> if markers will be shown on series points; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChart.CategoryLabels">
      <summary>
            Gets the chart's category labels.
            </summary>
      <value>
            The chart's category labels.
            </value>
      <remarks>
            Method will always return an empty collection since scatter chart doesn't support category labels. 
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChart.CategoryLabelsReference">
      <summary>
            Scatter chart doesn't support category labels. Please use <see cref="T:GemBox.Spreadsheet.Charts.ScatterChartSeries" /> to set x or y values.
            </summary>
      <value>
            The scatter chart's category labels which is always <see langword="null" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ScatterChart.Import(GemBox.Spreadsheet.Charts.ExcelChart)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ScatterChart.SetCategoryLabels(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Scatter chart doesn't support category labels. Please use <see cref="T:GemBox.Spreadsheet.Charts.ScatterChartSeries" /> to set x or y values.
            </summary>
      <param name="categoryLabels">The chart's category labels.</param>
      <exception cref="T:System.NotSupportedException">Scatter chart doesn't support category labels.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ScatterChartSeries">
      <summary>
            Represents a single <see cref="T:GemBox.Spreadsheet.Charts.ScatterChart" /> series.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ScatterChartSeries.CreateDefaultMarker">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChartSeries.Fill">
      <inheritdoc />
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChartSeries.XValuesReference">
      <summary>
            Gets or sets the scatter chart series x values as a cell range reference (for example, 'Sheet1!A1:D1'). Values from cells in the referenced range will be used as x values of this series.
            </summary>
      <value>
            The scatter chart series x values as a cell range reference.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ScatterChartSeries.XValues">
      <summary>
            Gets the scatter chart series x values.
            </summary>
      <value>
            The scatter chart series x values.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ScatterChartSeries.SetXValues(System.Collections.IEnumerable)">
      <summary>
            Sets the scatter chart series x values.
            </summary>
      <param name="values">The scatter chart series x values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ScatterChartSeries.SetXValues(System.Object[])">
      <summary>
            Sets the scatter chart series x values.
            </summary>
      <param name="values">The scatter chart series x values.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ScatterChartSeriesCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.Charts.ScatterChartSeries" /> objects.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ScatterChartSeriesCollection.CreateItem">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.TickMarkType">
      <summary>
            Represents the possible positions for axis major and minor tick marks.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TickMarkType.None">
      <summary>
            No tick marks.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TickMarkType.Inside">
      <summary>
            Tick marks are inside the plot area.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TickMarkType.Outside">
      <summary>
            Tick marks are outside the plot area.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TickMarkType.Cross">
      <summary>
            Tick marks cross the axis.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.TimeUnit">
      <summary>
            Represents a unit of time used by <see cref="T:GemBox.Spreadsheet.Charts.DateAxis" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TimeUnit.Days">
      <summary>
            Chart data is shown in days.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TimeUnit.Months">
      <summary>
            Chart data is shown in months.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TimeUnit.Years">
      <summary>
            Chart data is shown in years.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ValueAxis">
      <summary>
            Represents an axis used for series values.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ValueAxis.Minimum">
      <summary>
            Gets or sets the minimum value of the axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <value>
            The minimum value of the axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is greater than Maximum.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ValueAxis.Maximum">
      <summary>
            Gets or sets the maximum value of the axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <value>
            The maximum value of the axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is smaller than Minimum.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ValueAxis.MajorUnit">
      <summary>
            Gets or sets the distance between major ticks or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <value>
            The distance between major ticks or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not positive number or is smaller than MinorUnit.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ValueAxis.MinorUnit">
      <summary>
            Gets or sets the distance between minor ticks or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <value>
            The distance between minor ticks or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not positive number or is greater than MajorUnit.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ValueAxis.AxisType">
      <summary>
            Gets the axis type for <see cref="T:GemBox.Spreadsheet.Charts.ValueAxis" /> which is <see cref="F:GemBox.Spreadsheet.Charts.AxisType.Value" />.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Charts.AxisType.Value" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ValueAxis.NumberFormatFromLinkedSource">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ValueAxis.Import(GemBox.Spreadsheet.Charts.ChartAxis)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ClearOptions">
      <summary>
            Specifies the clear options.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ClearOptions.Content">
      <summary>
            Clears the cell content.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ClearOptions.Format">
      <summary>
            Clears the cell formatting.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ClearOptions.Comment">
      <summary>
            Clears the cell comment.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ClearOptions.Hyperlink">
      <summary>
            Clears the cell hyperlink.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ClearOptions.All">
      <summary>
            Clears everything (content, formatting, comment and hyperlink).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ColorName">
      <summary>
            Represents a color name of colors available in <b>MS Excel</b> user interface.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.ExcelFont.Color" />
      <seealso cref="P:GemBox.Spreadsheet.CellBorder.LineColor" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternBackgroundColor" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelFillPattern.GradientColor1" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelFillPattern.GradientColor2" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.TabColor" />
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Empty">
      <summary>
            No color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Automatic">
      <summary>
        <para>
          <b>Automatic</b> color.</para>
        <para>For <see cref="P:GemBox.Spreadsheet.ExcelFont.Color" />, <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor" /> and <see cref="P:GemBox.Spreadsheet.CellBorder.LineColor" /> properties, automatic color is equal to <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.systemcolors.windowtext">System.Drawing.SystemColors.WindowText</see>.</para>
        <para>For <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternBackgroundColor" />, <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.GradientColor1" />, <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.GradientColor2" /> and <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.TabColor" /> properties,  automatic color is equal to <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.systemcolors.window">System.Drawing.SystemColors.Window</see>.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background1">
      <summary>
            '<b>Background 1</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background1Darker5Pct">
      <summary>
            '<b>Background 1, Darker 5%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background1Darker15Pct">
      <summary>
            '<b>Background 1, Darker 15%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background1Darker25Pct">
      <summary>
            '<b>Background 1, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background1Darker35Pct">
      <summary>
            '<b>Background 1, Darker 35%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background1Darker50Pct">
      <summary>
            '<b>Background 1, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text1">
      <summary>
            '<b>Text 1</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text1Lighter50Pct">
      <summary>
            '<b>Text 1, Lighter 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text1Lighter35Pct">
      <summary>
            '<b>Text 1, Lighter 35%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text1Lighter25Pct">
      <summary>
            '<b>Text 1, Lighter 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text1Lighter15Pct">
      <summary>
            '<b>Text 1, Lighter 15%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text1Lighter5Pct">
      <summary>
            '<b>Text 1, Lighter 5%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background2">
      <summary>
            '<b>Background 2</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background2Darker10Pct">
      <summary>
            '<b>Background 2, Darker 10%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background2Darker25Pct">
      <summary>
            '<b>Background 2, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background2Darker50Pct">
      <summary>
            '<b>Background 2, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background2Darker75Pct">
      <summary>
            '<b>Background 2, Darker 75%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background2Darker90Pct">
      <summary>
            '<b>Background 2, Darker 90%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text2">
      <summary>
            '<b>Text 2</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text2Lighter80Pct">
      <summary>
            '<b>Text 2, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text2Lighter60Pct">
      <summary>
            '<b>Text 2, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text2Lighter40Pct">
      <summary>
            '<b>Text 2, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text2Darker25Pct">
      <summary>
            '<b>Text 2, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text2Darker50Pct">
      <summary>
            '<b>Text 2, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent1">
      <summary>
            '<b>Accent 1</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent1Lighter80Pct">
      <summary>
            '<b>Accent 1, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent1Lighter60Pct">
      <summary>
            '<b>Accent 1, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent1Lighter40Pct">
      <summary>
            '<b>Accent 1, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent1Darker25Pct">
      <summary>
            '<b>Accent 1, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent1Darker50Pct">
      <summary>
            '<b>Accent 1, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent2">
      <summary>
            '<b>Accent 2</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent2Lighter80Pct">
      <summary>
            '<b>Accent 2, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent2Lighter60Pct">
      <summary>
            '<b>Accent 2, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent2Lighter40Pct">
      <summary>
            '<b>Accent 2, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent2Darker25Pct">
      <summary>
            '<b>Accent 2, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent2Darker50Pct">
      <summary>
            '<b>Accent 2, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent3">
      <summary>
            '<b>Accent 3</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent3Lighter80Pct">
      <summary>
            '<b>Accent 3, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent3Lighter60Pct">
      <summary>
            '<b>Accent 3, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent3Lighter40Pct">
      <summary>
            '<b>Accent 3, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent3Darker25Pct">
      <summary>
            '<b>Accent 3, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent3Darker50Pct">
      <summary>
            '<b>Accent 3, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent4">
      <summary>
            '<b>Accent 4</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent4Lighter80Pct">
      <summary>
            '<b>Accent 4, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent4Lighter60Pct">
      <summary>
            '<b>Accent 4, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent4Lighter40Pct">
      <summary>
            '<b>Accent 4, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent4Darker25Pct">
      <summary>
            '<b>Accent 4, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent4Darker50Pct">
      <summary>
            '<b>Accent 4, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent5">
      <summary>
            '<b>Accent 5</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent5Lighter80Pct">
      <summary>
            '<b>Accent 5, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent5Lighter60Pct">
      <summary>
            '<b>Accent 5, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent5Lighter40Pct">
      <summary>
            '<b>Accent 5, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent5Darker25Pct">
      <summary>
            '<b>Accent 5, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent5Darker50Pct">
      <summary>
            '<b>Accent 5, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent6">
      <summary>
            '<b>Accent 6</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent6Lighter80Pct">
      <summary>
            '<b>Accent 6, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent6Lighter60Pct">
      <summary>
            '<b>Accent 6, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent6Lighter40Pct">
      <summary>
            '<b>Accent 6, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent6Darker25Pct">
      <summary>
            '<b>Accent 6, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent6Darker50Pct">
      <summary>
            '<b>Accent 6, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Black">
      <summary>
            '<b>Black</b>' standard color (R = 0, G = 0, B = 0, ARGB = 0xFF000000).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.White">
      <summary>
            '<b>White</b>' standard color (R = 255, G = 255, B = 255, ARGB = 0xFFFFFFFF).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.DarkRed">
      <summary>
            '<b>Dark Red</b>' standard color (R = 192, G = 0, B = 0, ARGB = 0xFFC00000).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Red">
      <summary>
            '<b>Red</b>' standard color (R = 255, G = 0, B = 0, ARGB = 0xFFFF0000).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Orange">
      <summary>
            '<b>Orange</b>' standard color (R = 255, G = 192, B = 0, ARGB = 0xFFFFC000).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Yellow">
      <summary>
            '<b>Yellow</b>' standard color (R = 255, G = 255, B = 0, ARGB = 0xFFFFFF00).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.LightGreen">
      <summary>
            '<b>Light Green</b>' standard color (R = 146, G = 208, B = 80, ARGB = 0xFF92D050).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Green">
      <summary>
            '<b>Green</b>' standard color (R = 0, G = 176, B = 80, ARGB = 0xFF00B050).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.LightBlue">
      <summary>
            '<b>Light Blue</b>' standard color (R = 0, G = 176, B = 240, ARGB = 0xFF00B0F0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Blue">
      <summary>
            '<b>Blue</b>' standard color (R = 0, G = 112, B = 192, ARGB = 0xFF0070C0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.DarkBlue">
      <summary>
            '<b>Dark Blue</b>' standard color (R = 0, G = 32, B = 96, ARGB = 0xFF002060).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Purple">
      <summary>
            '<b>Purple</b>' standard color (R = 112, G = 48, B = 160, ARGB = 0xFF7030A0).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ColumnTypeResolution">
      <summary>
            Defines resolution method that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>. 
            </summary>
      <remarks>
        <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see> is determined by the <see cref="T:GemBox.Spreadsheet.ColumnTypeResolution">column type resolution</see> and by exploring 
            types of all <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> in some column.
            Column type can be <see cref="T:System.Boolean" />, <see cref="T:System.Int32" />, <see cref="T:System.Double" />, <see cref="T:System.DateTime">
            DateTime</see>, <see cref="T:System.String" /> or <see cref="T:System.Object" />.
            </remarks>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.Object">
      <summary>
            All columns will be of type <see cref="T:System.Object" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.StringInvariantCulture">
      <summary>
            All columns  will be of type <see cref="T:System.String" />. For conversion from some <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> to string <see cref="P:System.Globalization.CultureInfo.InvariantCulture">
            invariant culture</see> will be used.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.StringCurrentCulture">
      <summary>
            All columns  will be of type <see cref="T:System.String" />. For conversion from some <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> to string <see cref="P:System.Globalization.CultureInfo.CurrentCulture">
            current culture</see> will be used.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.Auto">
      <summary>
            If all values in some column have the same type then that type will be used for <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>, otherwise
            column will be of type <see cref="T:System.Object" />. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.AutoPreferStringInvariantCulture">
      <summary>
            If all values in some column have the same type then that type will be used for <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>, otherwise
            column will be of type <see cref="T:System.String" />. For conversion from some <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> to string <see cref="P:System.Globalization.CultureInfo.InvariantCulture">
            invariant culture</see> will be used.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.AutoPreferStringCurrentCulture">
      <summary>
            If all values in some column have the same type then that type will be used for <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>, otherwise
            column will be of type <see cref="T:System.String" />. For conversion from some <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> to string <see cref="P:System.Globalization.CultureInfo.CurrentCulture">
            current culture</see> will be used.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ComHelper">
      <summary>
            Contains methods that can be useful for users which are calling GemBox.Spreadsheet component using COM interop.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.ComHelper" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.ComSetLicense(System.String)">
      <summary>
            Call this method from your application to set GemBox.Spreadsheet serial key.
            </summary>
      <remarks>
        <para>You should call this method before using any other class from GemBox.Spreadsheet library. 
            Key can only be set once (if you try second key, exception will be thrown). 
            The best place to call this method is from static constructor of your application's main class.</para>
        <para>Valid serial key has multiple groups of alphanumeric characters, separated with dashes.</para>
        <para>Free version serial key is: <b>FREE-LIMITED-KEY</b>.</para>
      </remarks>
      <param name="serialKey">Serial key.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.IsEncrypted(System.String)">
      <summary>
            Determines whether the file is an encrypted XLSX.
            </summary>
      <param name="path">The path from which to read a file.</param>
      <returns>
        <see langword="true" /> if file is an encrypted XLSX; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.Load(System.String)">
      <summary>
            Loads a spreadsheet from a file with the specified path.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <returns>A loaded spreadsheet.</returns>
      <remarks>
            File extension that is extracted from the <paramref name="path" /> is used to create the appropriate <see cref="T:GemBox.Spreadsheet.LoadOptions" />
            derived class instance that is then passed to the <see cref="M:GemBox.Spreadsheet.ExcelFile.Load(System.String,GemBox.Spreadsheet.LoadOptions)" /> method.
            <para>Following file extensions are supported:</para><list type="bullet"><item><description>Microsoft Excel: .xlsx, xlsm, .xltx, .xltm, .xls, .xlt</description></item><item><description>OpenDocument Spreadsheet: .ods, .ots</description></item><item><description>Character Separated Values: .csv, .tsv</description></item><item><description>HyperText Markup Language: .htm, .html, .mht, .mhtml</description></item></list></remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.LoadWithOptions(System.String,System.Object)">
      <summary>
            Loads a spreadsheet from a file with the specified path.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <param name="options">The loading options which can be used to define settings for load operation.</param>
      <returns>A loaded spreadsheet.</returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.SaveWithOptions(System.Object,System.String,System.Object)">
      <summary>
            Saves the spreadsheet to a file with the specified path.
            </summary>
      <param name="file">The ExcelFile instance which to save.</param>
      <param name="path">The path to which to save the spreadsheet.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.GetColumn(System.Object,System.Int32)">
      <summary>
            Gets the column from a sheet with the specified index.
            </summary>
      <param name="sheet">The ExcelWorksheet instance from which to retrieve the column.</param>
      <param name="index">The zero-based index of the column.</param>
      <returns>The ExcelColumn instance of the specified index.</returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.GetRow(System.Object,System.Int32)">
      <summary>
            Gets the row from a sheet with the specified index.
            </summary>
      <param name="sheet">The ExcelWorksheet instance from which to retrieve the row.</param>
      <param name="index">The zero-based index of the row.</param>
      <returns>The ExcelRow instance of the specified index.</returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.RemoveColumn(System.Object,System.Int32)">
      <summary>
            Removes the column with the specified index.
            </summary>
      <param name="sheet">The ExcelWorksheet instance from which to remove the column.</param>
      <param name="index">The zero-based index of the column.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.RemoveRow(System.Object,System.Int32)">
      <summary>
            Removes the row with the specified index.
            </summary>
      <param name="sheet">The ExcelWorksheet instance from which to remove the row.</param>
      <param name="index">The zero-based index of the row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.SetFrozenWorksheetPanes(System.Object,System.String)">
      <summary>
            Sets frozen worksheet panes for freezing rows and columns.
            </summary>
      <param name="sheet">The ExcelWorksheet instance in which to freeze row and column.</param>
      <param name="topLeftCell">Top left visible cell in the bottom right pane.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.AddPageBreak(System.Object,System.Int32,System.Boolean)">
      <summary>
            Adds a new horizontal or vertical page break above or left to the specified index.
            </summary>
      <param name="sheet">The ExcelWorksheet instance in which to add a page break.</param>
      <param name="index">The zero-based index of the row or column.</param>
      <param name="horizontalBreak">
        <see langword="true" /> for horizontal page break, <see langword="false" /> for vertical page break.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.LoadXlsxFromDirectory(System.String)">
      <summary>
            Loads all parts of XLSX file as separate files from input directory.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <returns>A loaded XLSX spreadsheet.</returns>
      <remarks>
            You need to use external ZIP library to extract all parts from XLSX file.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.SaveXlsxToDirectory(System.Object,System.String)">
      <summary>
            Saves all parts of XLSX file as separate files to output directory.
            </summary>
      <param name="file">The ExcelFile instance which to save.</param>
      <param name="path">Path of output directory.</param>
      <remarks>
        <para>You need to use external ZIP library to package all created files to XLSX file.</para>
        <note type="note">
            When using external ZIP library to package all created files to XLSX file, only the contents of the directory should be zipped and not the directory itself.
            </note>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.SaveEntireFileToPdf(System.Object,System.String)">
      <summary>
            Saves the entire spreadsheet to PDF file with the specified path.
            </summary>
      <param name="file">The ExcelFile instance which to save.</param>
      <param name="path">The PDF file's path to which to save the spreadsheet.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition">
      <summary>
            Represents a condition that formats only cells with values that are above or below average.
            </summary>
      <remarks>
            AboveOrBelowAverageCondition is not supported in XLS file format.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition.Below">
      <summary>
        <para>Gets or sets a value indicating whether to format cells with values below average.</para>
        <para>Default value is <see langword="false" /> (formats cells with values above average).</para>
      </summary>
      <value>
        <see langword="true" /> to format cells with values below average; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition.Equal">
      <summary>
        <para>Gets or sets a value indicating whether to format cells with values equal to average.</para>
        <para>Default value is <see langword="false" /> (formats cells with values exclusively above or below average).</para>
      </summary>
      <value>
        <see langword="true" /> to format cells with values equal to average; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition.ConditionType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.AboveOrBelowAverage" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.AboveOrBelowAverage" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition.StandardDeviations">
      <summary>
        <para>Gets or sets the number of standard deviations above or below average.</para>
        <para>Only cells with values above or below average ± <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition.StandardDeviations" /> * <i>std</i> are formatted.</para>
        <para>Default value is 0.</para>
      </summary>
      <value>
            The number of standard deviations above or below average.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is less than zero.</exception>
      <seealso href="http://en.wikipedia.org/wiki/Standard_deviation#Discrete_random_variable">Standard deviation (std)</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition.Style">
      <summary>
            Gets the actual formatting which will be applied to a cell if its value satisfies this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition" />.
            </summary>
      <value>
            The actual formatting which will be applied to a cell if its value satisfies this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition">
      <summary>
            Represents a condition that formats fill of all cells based on their values using a specified 2-point or 3-point color scale.
            </summary>
      <remarks>
        <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition" /> is not supported when writing to XLS file format.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition.ConditionType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.ColorScale" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.ColorScale" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition.Minimum">
      <summary>
            Gets the minimum color point.
            </summary>
      <value>
            The minimum color point.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition.Midpoint">
      <summary>
            Gets the midpoint color point or <see langword="null" /> if conditional formatting rule is '<b>2-Color Scale</b>'.
            </summary>
      <value>
            The midpoint color point or <see langword="null" /> if conditional formatting rule is '<b>2-Color Scale</b>'.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition.Maximum">
      <summary>
            Gets the maximum color point.
            </summary>
      <value>
            The maximum color points.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalColor">
      <summary>
            Represents a conditional color used in <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition" /> of a conditional formatting rule to specify color scale point.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalColor.Color">
      <summary>
            Gets or sets the color.
            </summary>
      <value>
            The color.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalColor.ParentCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalColor.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalColor" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalColor" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalColor.VerifyValue(GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalColor.GetIndexToString(System.Int32)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule">
      <summary>
            Represents a conditional formatting rule.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.StopIfTrue">
      <summary>
            Gets or sets a value indicating whether a rule with lower priority may be applied over this rule, when this rule evaluates to true.
            </summary>
      <value>
        <see langword="true" /> if no rules with lower priority may be applied over this rule, when this rule evaluates to true; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.AppliesTo">
      <summary>
            Gets or sets the sequence of references to cell ranges over which this conditional formatting rule is applied.
            </summary>
      <value>
            The sequence of references to cell ranges over which this conditional formatting rule is applied.
            </value>
      <exception cref="T:System.ArgumentException">Parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.Condition">
      <summary>
            Gets the condition specified in this conditional formatting rule.
            </summary>
      <value>
            The condition specified in this conditional formatting rule.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.Set2ColorScale">
      <summary>
            Sets a '<b>2-Color Scale</b>' formatting condition to this conditional formatting rule.
            </summary>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition" /> set to this conditional formatting rule which can be used to further customize the formatting condition.</returns>
      <remarks>
            Newly set condition has the same default settings as in MS Excel.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.Set3ColorScale">
      <summary>
            Sets a '<b>3-Color Scale</b>' formatting condition to this conditional formatting rule.
            </summary>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition" /> set to this conditional formatting rule which can be used to further customize the formatting condition.</returns>
      <remarks>
            Newly set condition has the same default settings as in MS Excel.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.SetDataBar">
      <summary>
            Sets a '<b>Data Bar</b>' formatting condition to this conditional formatting rule.
            </summary>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition" /> set to this conditional formatting rule which can be used to further customize the formatting condition.</returns>
      <remarks>
            Newly set condition has the same default settings as in MS Excel.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.SetIconSet">
      <summary>
            Sets an '<b>Icon Set</b>' formatting condition to this conditional formatting rule.
            </summary>
      <returns>An <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition" /> set to this conditional formatting rule which can be used to further customize the formatting condition.</returns>
      <remarks>
            Newly set condition has the same default settings as in MS Excel.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.SetContainValue(GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator,System.Object)">
      <summary>
            Sets a '<b>Cells with Cell Value</b>' formatting condition to this conditional formatting rule.
            </summary>
      <param name="operator">The operator (all except <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.Between" /> and <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.NotBetween" />).</param>
      <param name="value">The value (constant or formula).</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition" /> set to this conditional formatting rule which can be used to customize the formatting.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="operator" /> is <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.Between" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.NotBetween" />. Use other method overload for these operators.</exception>
      <exception cref="T:System.ArgumentNullException">Parameter <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="value" /> type is not supported.</exception>
      <remarks>
        <para>Value can be either constant or formula.</para>
        <para>If value is constant, then it cannot be <see langword="null" /> and value's type must be supported in <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> (types supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.SupportsType(System.Type)" />).</para>
        <para>If value is formula, then value type must be <see cref="T:System.String" /> and it must start with '='.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.SetContainValue(GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator,System.Object,System.Object)">
      <summary>
            Sets a '<b>Cells with Cell Value</b>' formatting condition to this conditional formatting rule.
            </summary>
      <param name="operator">The operator (<see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.Between" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.NotBetween" />).</param>
      <param name="value">The value (constant or formula).</param>
      <param name="value2">The second value (constant or formula).</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition" /> set to this conditional formatting rule which can be used to customize the formatting.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="operator" /> is not <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.Between" /> nor <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.NotBetween" />. Use other method overload for other operators.</exception>
      <exception cref="T:System.ArgumentNullException">Parameter <paramref name="value" /> or <paramref name="value2" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="value" /> or <paramref name="value2" /> type is not supported.</exception>
      <remarks>
        <para>Values can be either constant or formula.</para>
        <para>If value is constant, then it cannot be <see langword="null" /> and value's type must be supported in <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> (types supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.SupportsType(System.Type)" />).</para>
        <para>If value is formula, then value type must be <see cref="T:System.String" /> and it must start with '='.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.SetContainText(GemBox.Spreadsheet.ConditionalFormatting.ContainTextOperator,System.String)">
      <summary>
            Sets a '<b>Cells with Specific Text</b>' formatting condition to this conditional formatting rule.
            </summary>
      <param name="operator">The textual operator.</param>
      <param name="value">The value (constant string or formula).</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition" /> set to this conditional formatting rule which can be used to customize the formatting.</returns>
      <exception cref="T:System.ArgumentNullException">Parameter <paramref name="value" /> is <see langword="null" />.</exception>
      <remarks>
        <para>Value can be either constant or formula.</para>
        <para>If value is constant, then it cannot be <see langword="null" />.</para>
        <para>If value is formula, it must start with '='.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.SetContainDate(GemBox.Spreadsheet.ConditionalFormatting.ContainDateOperator)">
      <summary>
            Sets a '<b>Cells with Dates Occurring</b>' formatting condition to this conditional formatting rule.
            </summary>
      <param name="operator">The date operator.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainDateCondition" /> set to this conditional formatting rule which can be used to customize the formatting.</returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.SetContain(GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType)">
      <summary>
            Sets a '<b>Cells with Blanks</b>' or '<b>Cells with No Blanks</b>' or '<b>Cells with Errors</b>' or '<b>Cells with No Errors</b>' formatting condition to this conditional formatting rule.
            </summary>
      <param name="containConditionType">The contain condition type (<see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.Blanks" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.NoBlanks" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.Errors" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.NoErrors" />).</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition" /> set to this conditional formatting rule which can be used to customize the formatting.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="containConditionType" /> is not <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.Blanks" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.NoBlanks" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.Errors" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.NoErrors" />.</exception>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.SetTopOrBottomRanked(System.Boolean,System.Int32)">
      <summary>
            Sets a '<b>Top or Bottom Ranked</b>' formatting condition to this conditional formatting rule.
            </summary>
      <param name="bottom">if set to <see langword="true" /> format cells with bottom ranked values; otherwise, format cells with top ranked values.</param>
      <param name="rank">The number of top or bottom ranked cells which are formatted.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition" /> set to this conditional formatting rule which can be used to further customize the formatting condition.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Parameter <paramref name="rank" /> is less than or equal to zero.</exception>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.SetAboveOrBelowAverage(System.Boolean)">
      <summary>
            Sets an '<b>Above or Below Average</b>' formatting condition to this conditional formatting rule.
            </summary>
      <param name="below">if set to <see langword="true" /> format cells with values below average; otherwise, format cells with values above average.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition" /> set to this conditional formatting rule which can be used to further customize the formatting condition.</returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.SetUniqueOrDuplicate(System.Boolean)">
      <summary>
            Sets a '<b>Unique or Duplicate</b>' formatting condition to this conditional formatting rule.
            </summary>
      <param name="duplicate">if set to <see langword="true" /> format cells with duplicate values; otherwise, format cells with unique values.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.UniqueOrDuplicateCondition" /> set to this conditional formatting rule which can be used to customize the formatting.</returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.SetFormula(System.String)">
      <summary>
            Sets a '<b>Formula</b>' formatting condition to this conditional formatting rule.
            </summary>
      <param name="formula">The formula used to determine which cells to format (only cells for which the formula result evaluates to <see langword="true" /> are formatted).</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.FormulaCondition" /> set to this conditional formatting rule which can be used to customize the formatting.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="formula" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.Calculate">
      <summary>
            Calculates conditional formatting for this rule.
            </summary>
      <remarks>
            This method caches intermediate results for this rule, therefore it can improve performance if
            the <see cref="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.Matches(GemBox.Spreadsheet.ExcelCell)" /> method is called repeatedly on the same rule. This is useful
            especially for <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition" />, <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition" />, and <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.UniqueOrDuplicateCondition" />.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.Matches(GemBox.Spreadsheet.ExcelCell)">
      <summary>
            Determines whether the given cell matches this rule.
            </summary>
      <param name="cell">The cell to evaluate with this rule. If the given cell is outside of the range
            of this rule, the method always returns false.</param>
      <returns>True if the given cell matches this rule, false otherwise.</returns>
      <remarks>
        <p>If <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.Condition" /> is of <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition" />,
            <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition" />, or <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition" /> type, this method returns true
            for cells with numeric values, false otherwise.</p>
      </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection">
      <summary>
        <para>Represents a collection of a conditional formatting rules.</para>
        <para>Rules are applied in the order they appear in the collection (first rule has highest priority and last rule has lowest priority).</para>
        <para>Newly added rules are inserted at the beginning of the collection so they are first applied.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" />s contained in the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection" />.
            </summary>
      <value>
            The number of <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" />s contained in the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> at the specified index.
            </value>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> to get.</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or is equal to or greater than <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.Add2ColorScale(System.String)">
      <summary>
            Adds a '<b>2-Color Scale</b>' conditional formatting rule applied to a specified sequence of references to cell ranges.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added conditional formatting rule is applied.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition" /> set to a newly created conditional formatting rule which can be used to further customize the formatting condition.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <remarks>
        <para>Newly added rule is inserted at the beginning of the collection so it has the highest priority and is first applied.</para>
        <para>Newly added rule has the same default settings as in MS Excel.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.Add3ColorScale(System.String)">
      <summary>
            Adds a '<b>3-Color Scale</b>' conditional formatting rule applied to a specified sequence of references to cell ranges.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added conditional formatting rule is applied.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition" /> set to a newly created conditional formatting rule which can be used to further customize the formatting condition.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <remarks>
        <para>Newly added rule is inserted at the beginning of the collection so it has the highest priority and is first applied.</para>
        <para>Newly added rule has the same default settings as in MS Excel.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.AddDataBar(System.String)">
      <summary>
            Adds a '<b>Data Bar</b>' conditional formatting rule applied to a specified sequence of references to cell ranges.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added conditional formatting rule is applied.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition" /> set to a newly created conditional formatting rule which can be used to further customize the formatting condition.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <remarks>
        <para>Newly added rule is inserted at the beginning of the collection so it has the highest priority and is first applied.</para>
        <para>Newly added rule has the same default settings as in MS Excel.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.AddIconSet(System.String)">
      <summary>
            Adds an '<b>Icon Set</b>' conditional formatting rule applied to a specified sequence of references to cell ranges.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added conditional formatting rule is applied.</param>
      <returns>An <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition" /> set to a newly created conditional formatting rule which can be used to further customize the formatting condition.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <remarks>
        <para>Newly added rule is inserted at the beginning of the collection so it has the highest priority and is first applied.</para>
        <para>Newly added rule has the same default settings as in MS Excel.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.AddContainValue(System.String,GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator,System.Object)">
      <summary>
            Adds a '<b>Cells with Cell Value</b>' conditional formatting rule applied to a specified sequence of references to cell ranges.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added conditional formatting rule is applied.</param>
      <param name="operator">The operator (all except <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.Between" /> and <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.NotBetween" />).</param>
      <param name="value">The value (constant or formula).</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition" /> set to a newly created conditional formatting rule which can be used to customize the formatting.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="operator" /> is <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.Between" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.NotBetween" />. Use other method overload for these operators.</exception>
      <exception cref="T:System.ArgumentNullException">Parameter <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="value" /> type is not supported.</exception>
      <remarks>
        <para>Newly added rule is inserted at the beginning of the collection so it has the highest priority and is first applied.</para>
        <para>Value can be either constant or formula.</para>
        <para>If value is constant, then it cannot be <see langword="null" /> and value's type must be supported in <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> (types supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.SupportsType(System.Type)" />).</para>
        <para>If value is formula, then value type must be <see cref="T:System.String" /> and it must start with '='.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.AddContainValue(System.String,GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator,System.Object,System.Object)">
      <summary>
            Adds a '<b>Cells with Cell Value</b>' conditional formatting rule applied to a specified sequence of references to cell ranges.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added conditional formatting rule is applied.</param>
      <param name="operator">The operator (<see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.Between" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.NotBetween" />).</param>
      <param name="value">The value (constant or formula).</param>
      <param name="value2">The second value (constant or formula).</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition" /> set to a newly created conditional formatting rule which can be used to customize the formatting.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="operator" /> is not <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.Between" /> nor <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.NotBetween" />. Use other method overload for other operators.</exception>
      <exception cref="T:System.ArgumentNullException">Parameter <paramref name="value" /> or <paramref name="value2" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="value" /> or <paramref name="value2" /> type is not supported.</exception>
      <remarks>
        <para>Newly added rule is inserted at the beginning of the collection so it has the highest priority and is first applied.</para>
        <para>Values can be either constant or formula.</para>
        <para>If value is constant, then it cannot be <see langword="null" /> and value's type must be supported in <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> (types supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.SupportsType(System.Type)" />).</para>
        <para>If value is formula, then value type must be <see cref="T:System.String" /> and it must start with '='.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.AddContainText(System.String,GemBox.Spreadsheet.ConditionalFormatting.ContainTextOperator,System.String)">
      <summary>
            Adds a '<b>Cells with Specific Text</b>' conditional formatting rule applied to a specified sequence of references to cell ranges.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added conditional formatting rule is applied.</param>
      <param name="operator">The textual operator.</param>
      <param name="value">The value (constant string or formula).</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition" /> set to a newly created conditional formatting rule which can be used to customize the formatting.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">Parameter <paramref name="value" /> is <see langword="null" />.</exception>
      <remarks>
        <para>Newly added rule is inserted at the beginning of the collection so it has the highest priority and is first applied.</para>
        <para>Value can be either constant or formula.</para>
        <para>If value is constant, then it cannot be <see langword="null" />.</para>
        <para>If value is formula, it must start with '='.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.AddContainDate(System.String,GemBox.Spreadsheet.ConditionalFormatting.ContainDateOperator)">
      <summary>
            Adds a '<b>Cells with Dates Occurring</b>' conditional formatting rule applied to a specified sequence of references to cell ranges.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added conditional formatting rule is applied.</param>
      <param name="operator">The date operator.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainDateCondition" /> set to a newly created conditional formatting rule which can be used to customize the formatting.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <remarks>
            Newly added rule is inserted at the beginning of the collection so it has the highest priority and is first applied.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.AddContain(System.String,GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType)">
      <summary>
            Adds a '<b>Cells with Blanks</b>' or '<b>Cells with No Blanks</b>' or '<b>Cells with Errors</b>' or '<b>Cells with No Errors</b>' conditional formatting rule applied to a specified sequence of references to cell ranges.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added conditional formatting rule is applied.</param>
      <param name="containConditionType">The contain condition type (<see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.Blanks" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.NoBlanks" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.Errors" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.NoErrors" />).</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition" /> set to a newly created conditional formatting rule which can be used to customize the formatting.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="containConditionType" /> is not <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.Blanks" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.NoBlanks" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.Errors" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.NoErrors" />.</exception>
      <remarks>
            Newly added rule is inserted at the beginning of the collection so it has the highest priority and is first applied.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.AddTopOrBottomRanked(System.String,System.Boolean,System.Int32)">
      <summary>
            Adds a '<b>Top or Bottom Ranked</b>' conditional formatting rule applied to a specified sequence of references to cell ranges.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added conditional formatting rule is applied.</param>
      <param name="bottom">if set to <see langword="true" /> format cells with bottom ranked values; otherwise, format cells with top ranked values.</param>
      <param name="rank">The number of top or bottom ranked cells which are formatted.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition" /> set to a newly created conditional formatting rule which can be used to further customize the formatting condition.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Parameter <paramref name="rank" /> is less than or equal to zero.</exception>
      <remarks>
            Newly added rule is inserted at the beginning of the collection so it has the highest priority and is first applied.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.AddAboveOrBelowAverage(System.String,System.Boolean)">
      <summary>
            Adds an '<b>Above or Below Average</b>' conditional formatting rule applied to a specified sequence of references to cell ranges.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added conditional formatting rule is applied.</param>
      <param name="below">if set to <see langword="true" /> format cells with values below average; otherwise, format cells with values above average.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition" /> set to a newly created conditional formatting rule which can be used to further customize the formatting condition.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <remarks>
            Newly added rule is inserted at the beginning of the collection so it has the highest priority and is first applied.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.AddUniqueOrDuplicate(System.String,System.Boolean)">
      <summary>
            Adds a '<b>Unique or Duplicate</b>' conditional formatting rule applied to a specified sequence of references to cell ranges.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added conditional formatting rule is applied.</param>
      <param name="duplicate">if set to <see langword="true" /> format cells with duplicate values; otherwise, format cells with unique values.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.UniqueOrDuplicateCondition" /> set to a newly created conditional formatting rule which can be used to customize the formatting.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <remarks>
            Newly added rule is inserted at the beginning of the collection so it has the highest priority and is first applied.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.AddFormula(System.String,System.String)">
      <summary>
            Adds a '<b>Formula</b>' conditional formatting rule applied to a specified sequence of references to cell ranges.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added conditional formatting rule is applied.</param>
      <param name="formula">The formula used to determine which cells to format (only cells for which the formula result evaluates to <see langword="true" /> are formatted).</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.FormulaCondition" /> set to a newly created conditional formatting rule which can be used to customize the formatting.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="formula" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <remarks>
            Newly added rule is inserted at the beginning of the collection so it has the highest priority and is first applied.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.Remove(GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule)">
      <summary>
            Removes the specified <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> from the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection" />.
            </summary>
      <param name="rule">The <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> to remove from the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection" />.</param>
      <returns>
        <see langword="true" /> if <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> is successfully removed; otherwise, <see langword="false" />. 
            This method also returns <see langword="false" /> if <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> was not found in the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.Remove(GemBox.Spreadsheet.ConditionalFormatting.FormatCondition)">
      <summary>
            Removes a <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> associated with the specified <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.FormatCondition" /> from the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection" />.
            </summary>
      <param name="condition">The <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.FormatCondition" /> which associated <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> to remove from the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection" />.</param>
      <returns>
        <see langword="true" /> if <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> associated with the specified <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.FormatCondition" /> is successfully removed; otherwise, <see langword="false" />. 
            This method also returns <see langword="false" /> if <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> associated with the specified <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.FormatCondition" /> was not found in the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> at the specified index of the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection" />.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or is equal to or greater than <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.Move(System.Int32,System.Int32)">
      <summary>
            Moves the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> at the specified index to a new location in the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection" />.
            </summary>
      <param name="oldIndex">The zero-based index specifying the location of the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" /> to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="oldIndex" /> is less than 0 or is equal to or greater than <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.Count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newIndex" /> is less than 0 or is equal to or greater than <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection" />.
            </summary>
      <returns>
            An enumerator that can be used to iterate through the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.Calculate">
      <summary>
            Calculates conditional formatting for all rules in this collection.
            </summary>
      <remarks>
            This method caches intermediate results for all rules in this collection, therefore it can improve performance if
            the <see cref="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRule.Matches(GemBox.Spreadsheet.ExcelCell)" /> method is called repeatedly on the same rule. This is useful
            especially for <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.AboveOrBelowAverageCondition" />, <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition" />, and <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.UniqueOrDuplicateCondition" />.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.Clear">
      <summary>
            Removes all elements from the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalFormatRuleCollection.System#Collections#IEnumerable#GetEnumerator">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalIcon">
      <summary>
            Represents a conditional icon used in <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition" /> of a conditional formatting rule to specify icon and a lower bound of the values onto which the icon is applied.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalIcon.Icon">
      <summary>
            Gets or sets the icon.
            </summary>
      <value>
            The icon.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalIcon.Equal">
      <summary>
        <para>Gets or sets a value indicating whether this or next icon will be shown if cell's value is equal to this <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject.Value" />.</para>
        <para>Default value is <see langword="true" /> (this icon will be shown if cell's value is equal to this <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject.Value" />).</para>
      </summary>
      <value>
        <see langword="true" /> if this icon will be shown if cell's value is equal to this <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject.Value" />; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalIcon.ParentCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalIcon.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalIcon" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalIcon" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalIcon.VerifyValue(GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalIcon.GetIndexToString(System.Int32)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalIconCollection">
      <summary>
            Represents a collection of conditional icons used in <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition" /> of a conditional formatting rule.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalIconCollection.ConditionObject">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalIconCollection.CreateItem(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalIconCollection.CloneItem(GemBox.Spreadsheet.ConditionalFormatting.ConditionalIcon)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalLength">
      <summary>
            Represents a conditional length used in <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition" /> of a conditional formatting rule to specify data bar length.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalLength.Length">
      <summary>
            Gets or sets the data bar length as a percentage of the cell width.
            </summary>
      <value>
            The data bar length as a percentage of the cell width.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is less than 0 or greater than 100.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalLength.ParentCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalLength.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalLength" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalLength" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalLength.VerifyValue(GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalLength.GetIndexToString(System.Int32)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject">
      <summary>
            Represents a base class for conditional objects used in conditional formatting. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject.ParentCore">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject.Value">
      <summary>
            Gets or sets the value.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.ArgumentException">Specified value is not valid for the current conditional object.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject.VerifyValue(GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject.GetIndexToString(System.Int32)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection">
      <summary>
            Represents a base class for a collections of <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject" />s used in conditional formatting.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection.ConditionObject">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection.CountObject">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection.Count">
      <summary>
            Gets the number of conditional objects contained in the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection" />.
            </summary>
      <value>
            The number of conditional objects contained in the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection.Item(System.Int32)">
      <summary>
            Gets the conditional object at the specified index.
            </summary>
      <value>
            The conditional object at the specified index.
            </value>
      <param name="index">The zero-based index of the conditional object to get.</param>
      <returns>The conditional object at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or is equal to or greater than <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection" />.
            </summary>
      <returns>
            An enumerator that can be used to iterate through the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection.GetItemObject(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection.GetEnumeratorObject">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1">
      <summary>
            Represents a base class for a collections of <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject" />-derived instances used in conditional formatting.
            </summary>
      <typeparam name="T">A <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObject" />-derived type.</typeparam>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1.Count">
      <summary>
            Gets the number of conditional objects contained in the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1" />.
            </summary>
      <value>
            Gets the number of conditional objects contained in the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1.CountObject">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1.Item(System.Int32)">
      <summary>
            Gets the conditional object at the specified index.
            </summary>
      <value>
            The conditional object at the specified index.
            </value>
      <param name="index">The zero-based index of the conditional object to get.</param>
      <returns>The conditional object at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or is equal to or greater than <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1" />.
            </summary>
      <returns>
            An enumerator that can be used to iterate through the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1.CreateItem(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1.CloneItem(`0)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1.GetItemObject(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1.GetEnumeratorObject">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalObjectCollection`1.Initialize(System.Int32)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue">
      <summary>
            Represents a conditional value used in conditional formating rules which format all cells based on their values (<see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ColorScaleCondition" />, <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition" /> and <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition" />).
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.None">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance whose <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.ValueType" /> is equal to <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.None" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.Automatic">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance whose <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.ValueType" /> is equal to <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Automatic" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.Lowest">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance whose <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.ValueType" /> is equal to <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Lowest" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.Highest">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance whose <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.ValueType" /> is equal to <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Highest" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.ValueType">
      <summary>
            Gets the conditional value type.
            </summary>
      <value>
            The conditional value type.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.Value">
      <summary>
            Gets the value.
            </summary>
      <value>
            The value.
            </value>
      <remarks>
            Value is
            <list type="bullet"><item><description>equal to <see langword="null" /> if <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.ValueType" /> is equal to <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.None" />, <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Automatic" />, <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Lowest" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Highest" />.</description></item><item><description><see cref="T:System.Double" /> or <see cref="T:System.String" /> if <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.ValueType" /> is equal to <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Number" />, <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Percent" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Percentile" />. The value is <see cref="T:System.Double" /> if it represents constant value and <see cref="T:System.String" /> if it represents formula.</description></item><item><description><see cref="T:System.String" /> if <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.ValueType" /> is equal to <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Formula" />.</description></item></list></remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.FromNumber(System.Double)">
      <summary>
            Creates a new instance of the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> from the specified number.
            </summary>
      <param name="number">The number value.</param>
      <returns>
            A new instance of the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> whose <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.ValueType" /> is equal to <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Number" /> and <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.Value" /> is equal to <paramref name="number" /> parameter.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.FromPercent(System.Double)">
      <summary>
            Creates a new instance of the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> from the specified percent.
            </summary>
      <param name="percent">The percent value.</param>
      <returns>
            A new instance of the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> whose <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.ValueType" /> is equal to <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Percent" /> and <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.Value" /> is equal to <paramref name="percent" /> parameter.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Percent value is less than 0 or greater than 100.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.FromPercentile(System.Double)">
      <summary>
            Creates a new instance of the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> from the specified percentile.
            </summary>
      <param name="percentile">The percentile value.</param>
      <returns>
            A new instance of the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> whose <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.ValueType" /> is equal to <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Percentile" /> and <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.Value" /> is equal to <paramref name="percentile" /> parameter.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Percentile value is less than 0 or greater than 100.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.FromFormula(System.String)">
      <summary>
            Creates a new instance of the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> from the specified formula.
            </summary>
      <param name="formula">The formula value.</param>
      <returns>
            A new instance of the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> whose <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.ValueType" /> is equal to <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Formula" /> and <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.Value" /> is equal to <paramref name="formula" /> parameter.
            </returns>
      <exception cref="T:System.ArgumentException">Formula value is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.Equals(GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue)">
      <summary>
            Determines whether the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> is equal to this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance.
            </summary>
      <param name="other">The other <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> to compare with this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance.</param>
      <returns>
        <see langword="true" /> if the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> is equal to this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> and is equal to this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.op_Equality(GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue,GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue.op_Inequality(GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue,GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType">
      <summary>
            Represents a <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValue" /> type.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.None">
      <summary>
            No conditional value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Lowest">
      <summary>
            Lowest value from the applied ranges.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Highest">
      <summary>
            Highest value from the applied ranges.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Automatic">
      <summary>
            The shortest data bar is proportional to the minimum value and the longest data bar is proportional to the maximum value from the applied ranges.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Number">
      <summary>
            A constant number.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Percent">
      <summary>
            A percentage between the lowest and highest values from the applied ranges.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Formula">
      <summary>
            A formula.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ConditionalValueType.Percentile">
      <summary>
            A percentile ranking of the values from the applied ranges.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition">
      <summary>
            Represents a condition that formats only cells that contain value which satisfies the specified criteria.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition.ContainConditionType">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition" /> type.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition" /> type.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition.ConditionType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.Contain" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.Contain" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition.Style">
      <summary>
            Gets the actual formatting which will be applied to a cell if its value satisfies this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition" />.
            </summary>
      <value>
            The actual formatting which will be applied to a cell if its value satisfies this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition.ValueToString(System.Object)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType">
      <summary>
            Represents a <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainCondition" /> type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.Value">
      <summary>
            Formats only cells with value that satisfies the specified criteria.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.Text">
      <summary>
            Formats only cells with text that satisfies the specified criteria.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.Date">
      <summary>
            Formats only cells with date that satisfies the specified criteria.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.Blanks">
      <summary>
            Formats only cells with blank values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.NoBlanks">
      <summary>
            Formats only cells without blank values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.Errors">
      <summary>
            Formats only cells with errors.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainConditionType.NoErrors">
      <summary>
            Formats only cells without errors.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ContainDateCondition">
      <summary>
            Represents a condition that formats only cells with date that satisfies the specified criteria.
            </summary>
      <remarks>
            ContainDateCondition is not supported in xls format
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ContainDateCondition.Operator">
      <summary>
            Gets or sets the operator of this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainDateCondition" />.
            </summary>
      <value>
            The operator of this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainDateCondition" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ContainDateCondition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainDateCondition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainDateCondition" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ContainDateOperator">
      <summary>
            Represents a <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainDateCondition" /> operator.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainDateOperator.Yesterday">
      <summary>
            Cell is formatted if its value falls into yesterday's date.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainDateOperator.Today">
      <summary>
            Cell is formatted if its value falls into today's date.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainDateOperator.Tomorrow">
      <summary>
            Cell is formatted if its value falls into tomorrow's date.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainDateOperator.Last7Days">
      <summary>
            Cell is formatted if its value falls into dates of the last 7 days.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainDateOperator.LastWeek">
      <summary>
            Cell is formatted if its value falls into last week's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainDateOperator.ThisWeek">
      <summary>
            Cell is formatted if its value falls into this week's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainDateOperator.NextWeek">
      <summary>
            Cell is formatted if its value falls into next week's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainDateOperator.LastMonth">
      <summary>
            Cell is formatted if its value falls into last month's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainDateOperator.ThisMonth">
      <summary>
            Cell is formatted if its value falls into this month's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainDateOperator.NextMonth">
      <summary>
            Cell is formatted if its value falls into next month's dates.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition">
      <summary>
            Represents a condition that formats only cells with text that satisfies the specified criteria.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition.Operator">
      <summary>
            Gets or sets the operator of this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition" />.
            </summary>
      <value>
            The operator of this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition.Value">
      <summary>
        <para>Gets or sets the value of this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition" />.</para>
        <para>Value can be either constant or formula.</para>
        <para>If value is constant, then it cannot be <see langword="null" />.</para>
        <para>If value is formula, it must start with '='.</para>
      </summary>
      <value>
            The value of this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition" />.
            </value>
      <exception cref="T:System.ArgumentNullException">Value is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ContainTextOperator">
      <summary>
            Represents a <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition" /> operator.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainTextOperator.Contains">
      <summary>
            Cell is formatted if its value contains <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition.Value" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainTextOperator.NotContains">
      <summary>
            Cell is formatted if its value does not contain <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition.Value" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainTextOperator.BeginsWith">
      <summary>
            Cell is formatted if its value begins with <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition.Value" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainTextOperator.EndsWith">
      <summary>
            Cell is formatted if its value ends with <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainTextCondition.Value" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition">
      <summary>
            Represents a condition that formats only cells with value that satisfies the specified criteria.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Operator">
      <summary>
            Gets or sets the operator of this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition" />.
            </summary>
      <value>
            The operator of this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Value">
      <summary>
        <para>Gets or sets the value of this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition" />.</para>
        <para>Value can be either constant or formula.</para>
        <para>If value is constant, then it cannot be <see langword="null" /> and value's type must be supported in <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> (types supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.SupportsType(System.Type)" />).</para>
        <para>If value is formula, then value type must be <see cref="T:System.String" /> and it must start with '='.</para>
      </summary>
      <value>
            The value of this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition" />.
            </value>
      <exception cref="T:System.ArgumentNullException">Value is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Value's type is not supported.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Value2">
      <summary>
        <para>Gets or sets the second value of this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition" /> used with <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.Between" /> and <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.NotBetween" /> operators.</para>
        <para>Value can be either constant or formula.</para>
        <para>If value is constant, then it cannot be <see langword="null" /> and value's type must be supported in <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> (types supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.SupportsType(System.Type)" />).</para>
        <para>If value is formula, then value type must be <see cref="T:System.String" /> and it must start with '='.</para>
      </summary>
      <value>
            The second value of this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition" /> used with <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.Between" /> and <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.NotBetween" /> operators.
            </value>
      <exception cref="T:System.ArgumentNullException">Value is <see langword="null" /> and <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Operator" /> is <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.Between" /> or <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.NotBetween" />.</exception>
      <exception cref="T:System.ArgumentException">Value's type is not supported.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator">
      <summary>
            Represents a <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition" /> operator.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.Between">
      <summary>
            Cell is formatted if its value is between <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Value" /> and <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Value2" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.NotBetween">
      <summary>
            Cell is formatted if its value is not between <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Value" /> and <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Value2" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.Equal">
      <summary>
            Cell is formatted if its value is equal to <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Value" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.NotEqual">
      <summary>
            Cell is formatted if its value is not equal to <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Value" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.GreaterThan">
      <summary>
            Cell is formatted if its value is greater than <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Value" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.LessThan">
      <summary>
            Cell is formatted if its value is less than <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Value" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.GreaterThanOrEqual">
      <summary>
            Cell is formatted if its value is greater than or equal to <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Value" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.ContainValueOperator.LessThanOrEqual">
      <summary>
            Cell is formatted if its value is less than or equal to <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.ContainValueCondition.Value" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarAxisPosition">
      <summary>
            Represents a data bar axis position.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.DataBarAxisPosition.Automatic">
      <summary>
            The axis position for the data bar is calculated automatically (variable position based on negative values).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.DataBarAxisPosition.Midpoint">
      <summary>
            The axis position for the data bar is the midpoint of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.DataBarAxisPosition.None">
      <summary>
            There is no axis for the data bar.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition">
      <summary>
            Represents a condition that formats all cells based on their values by displaying a data bar whose length is proportional to cell's value.
            </summary>
      <remarks>
        <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition" /> is not supported when writing to XLS file format.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition.ShowBarOnly">
      <summary>
        <para>Gets or sets a value indicating whether to show bar only.</para>
        <para>Default value is <see langword="false" /> (cell value is shown together with bar).</para>
      </summary>
      <value>
        <see langword="true" /> to show bar only; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition.BarStyle">
      <summary>
            Gets the bar appearance settings.
            </summary>
      <value>
            The bar appearance settings.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition.ConditionType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.DataBar" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.DataBar" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition.Minimum">
      <summary>
            Gets the data bar minimum.
            </summary>
      <value>
            The data bar minimum.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition.Maximum">
      <summary>
            Gets the data bar maximum.
            </summary>
      <value>
            The data bar maximum.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarCondition" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarDirection">
      <summary>
            Represents a data bar direction.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.DataBarDirection.Context">
      <summary>
            The direction of the data bar is determined by context.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.DataBarDirection.LeftToRight">
      <summary>
            The data bar is displayed in a <i>left-to-right</i> manner.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.DataBarDirection.RightToLeft">
      <summary>
            The data bar is displayed in a <i>right-to-left</i> manner.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle">
      <summary>
            Represents an appearance settings of a data bar.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle.Direction">
      <summary>
            Gets or sets the data bar direction.
            </summary>
      <value>
            The data bar direction.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle.GradientFill">
      <summary>
        <para>Gets or sets a value indicating whether the data bar <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle.FillColor" /> is gradient or solid.</para>
        <para>Default value is <see langword="false" /> (data bar <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle.FillColor" /> is solid).</para>
      </summary>
      <value>
        <see langword="true" /> if the data bar <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle.FillColor" /> is gradient; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle.AxisPosition">
      <summary>
            Gets or sets the data bar axis position.
            </summary>
      <value>
            The data bar axis position.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle.FillColor">
      <summary>
            Gets or sets the data bar fill color.
            </summary>
      <value>
            The data bar fill color.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle.BorderColor">
      <summary>
        <para>Gets or sets the data bar border color.</para>
        <para>If border color <see cref="P:GemBox.Spreadsheet.SpreadsheetColor.IsEmpty" />, then data bar won't have any border.</para>
      </summary>
      <value>
            The data bar border color.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle.NegativeFillColor">
      <summary>
        <para>Gets or sets the data bar fill color for negative values.</para>
        <para>If negative data bar fill color <see cref="P:GemBox.Spreadsheet.SpreadsheetColor.IsEmpty" />, then data bar fill color for negative values is same as for positive values.</para>
      </summary>
      <value>
            The data bar fill color for negative values.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle.NegativeBorderColor">
      <summary>
        <para>Gets or sets the data bar border color for negative values.</para>
        <para>If negative data bar border color <see cref="P:GemBox.Spreadsheet.SpreadsheetColor.IsEmpty" />, then data bar border color for negative values is same as for positive values.</para>
      </summary>
      <value>
            The data bar border color for negative values.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle.AxisColor">
      <summary>
            Gets or sets the data bar axis color.
            </summary>
      <value>
            The data bar axis color.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.DataBarStyle" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.FormatCondition">
      <summary>
            Represents a base class for all conditions that can be specified in a conditional formatting rule.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.FormatCondition.ConditionType">
      <summary>
            Gets the condition type.
            </summary>
      <value>
            The condition type.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.FormatCondition.Rule">
      <summary>
            Gets the conditional formatting rule associated with this condition.
            </summary>
      <value>
            The conditional formatting rule associated with this condition.
            </value>
      <exception cref="T:System.InvalidOperationException">Format condition is invalid because it is no longer associated with any conditional formatting rule.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.FormatCondition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.FormatCondition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.FormatCondition" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType">
      <summary>
            Represents a <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.FormatCondition" /> type.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.ColorScale">
      <summary>
            Formats fill of all cells based on their values using a specified 2-point or 3-point color scale.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.DataBar">
      <summary>
            Formats all cells based on their values by displaying a data bar whose length is proportional to cell's value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.IconSet">
      <summary>
            Formats all cells based on their values by displaying an icon from the specified icon set according to cell's value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.Contain">
      <summary>
            Formats only cells that contain value which satisfies the specified criteria.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.TopOrBottomRanked">
      <summary>
            Formats only cells with top or bottom ranked values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.AboveOrBelowAverage">
      <summary>
            Formats only cells with values that are above or below average.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.UniqueOrDuplicate">
      <summary>
            Formats only cells with unique or duplicate values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.Formula">
      <summary>
            Formats only cells for which the specified formula result evaluates to <see langword="true" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.FormulaCondition">
      <summary>
            Represents a condition that formats only cells for which the specified formula result evaluates to <see langword="true" />.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.FormulaCondition.ConditionType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.Formula" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.Formula" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.FormulaCondition.Formula">
      <summary>
            Gets or sets the formula used to determine which cells to format (only cells for which the formula result evaluates to <see langword="true" /> are formatted).
            </summary>
      <value>
            The formula used to determine which cells to format.
            </value>
      <exception cref="T:System.ArgumentException">Value is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.FormulaCondition.Style">
      <summary>
            Gets the actual formatting which will be applied to a cell if its value satisfies this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.FormulaCondition" />.
            </summary>
      <value>
            The actual formatting which will be applied to a cell if its value satisfies this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.FormulaCondition" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.FormulaCondition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.FormulaCondition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.FormulaCondition" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition">
      <summary>
            Represents a condition that formats all cells based on their values by displaying an icon from the specified icon set according to cell's value.
            </summary>
      <remarks>
        <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition" /> is not supported when writing to XLS file format.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition.ShowIconOnly">
      <summary>
        <para>Gets or sets a value indicating whether to show icon only.</para>
        <para>Default value is <see langword="false" /> (cell value is shown together with icon).</para>
      </summary>
      <value>
        <see langword="true" /> to show icon only; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition.Icons">
      <summary>
            Gets the icons.
            </summary>
      <value>
            The icons.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition.ConditionType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.IconSet" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.IconSet" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition.ReverseIconOrder">
      <summary>
        <para>Gets or sets a value indicating whether the order of icons should be reversed.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> if the order of icons should be reversed; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition.IconStyle">
      <summary>
        <para>Gets or sets the icon style for all icons contained in the <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition.Icons" /> collection.</para>
        <para>If icons are of different <see cref="T:GemBox.Spreadsheet.SpreadsheetIconStyle" /> or are not ordered, then <see cref="F:GemBox.Spreadsheet.SpreadsheetIconStyle.Custom" /> is returned.</para>
      </summary>
      <value>
            The icon style for all icons contained in the <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition.Icons" /> collection.
            </value>
      <exception cref="T:System.ArgumentException">Icon style is set to <see cref="F:GemBox.Spreadsheet.SpreadsheetIconStyle.None" /> or <see cref="F:GemBox.Spreadsheet.SpreadsheetIconStyle.Custom" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition">
      <summary>
            Represents a condition that formats only cells with top or bottom ranked values.
            </summary>
      <remarks>
        <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition" /> is not supported when writing to XLS file format.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition.Bottom">
      <summary>
        <para>Gets or sets a value indicating whether to format cells with bottom ranked values.</para>
        <para>Default value is <see langword="false" /> (formats cells with top ranked values).</para>
      </summary>
      <value>
        <see langword="true" /> to format cells with bottom ranked values; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition.Percent">
      <summary>
        <para>Gets or sets a value indicating whether the <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition.Rank" /> value is expressed as a percentage of a number of cells in the applied range.</para>
        <para>Default value is <see langword="false" /> (the <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition.Rank" /> value is expressed as a number of cells).</para>
      </summary>
      <value>
        <see langword="true" /> if the <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition.Rank" /> value is expressed as a percentage of a number of cells in the applied range; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition.ConditionType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.TopOrBottomRanked" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.TopOrBottomRanked" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition.Rank">
      <summary>
            Gets or sets the number or percentage of top or bottom ranked cells which are formatted.
            </summary>
      <value>
            The number or percentage of top or bottom ranked cells which are formatted.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is less than or equal to zero.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition.Style">
      <summary>
            Gets the actual formatting which will be applied to a cell if its value satisfies this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition" />.
            </summary>
      <value>
            The actual formatting which will be applied to a cell if its value satisfies this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.TopOrBottomRankedCondition" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ConditionalFormatting.UniqueOrDuplicateCondition">
      <summary>
            Represents a condition that formats only cells with unique or duplicate values.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.UniqueOrDuplicateCondition.Duplicate">
      <summary>
        <para>Gets or sets a value indicating whether to format cells with duplicate values.</para>
        <para>Default value is <see langword="false" /> (formats cells with unique values).</para>
      </summary>
      <value>
        <see langword="true" /> to format cells with duplicate values; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.UniqueOrDuplicateCondition.ConditionType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.UniqueOrDuplicate" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.ConditionalFormatting.FormatConditionType.UniqueOrDuplicate" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ConditionalFormatting.UniqueOrDuplicateCondition.Style">
      <summary>
            Gets the actual formatting which will be applied to a cell if its value satisfies this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.UniqueOrDuplicateCondition" />.
            </summary>
      <value>
            The actual formatting which will be applied to a cell if its value satisfies this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.UniqueOrDuplicateCondition" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ConditionalFormatting.UniqueOrDuplicateCondition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.UniqueOrDuplicateCondition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ConditionalFormatting.UniqueOrDuplicateCondition" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ConsolidationFunction">
      <summary>
            Represents a subtotal function.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConsolidationFunction.Unknown">
      <summary>
            No subtotal function specified.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConsolidationFunction.Average">
      <summary>
            The '<b>AVERAGE</b>' function.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConsolidationFunction.CountNumbers">
      <summary>
            The '<b>COUNT</b>' function.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConsolidationFunction.Count">
      <summary>
            The '<b>COUNTA</b>' function.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConsolidationFunction.Max">
      <summary>
            The '<b>MAX</b>' function.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConsolidationFunction.Min">
      <summary>
            The '<b>Min</b>' function.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConsolidationFunction.Product">
      <summary>
            The '<b>Product</b>' function.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConsolidationFunction.StdDev">
      <summary>
            The '<b>STDEV.S</b>' function.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConsolidationFunction.StdDevp">
      <summary>
            The '<b>STDEV.P</b>' function.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConsolidationFunction.Sum">
      <summary>
            The '<b>SUM</b>' function.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConsolidationFunction.Var">
      <summary>
            The '<b>VAR.S</b>' function.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ConsolidationFunction.Varp">
      <summary>
            The '<b>VAR.P</b>' function.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ContentTypeProperty">
      <summary>
            Represents a custom content type property.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ContentTypeProperty.Nillable">
      <summary>
            If this property is nillable.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ContentTypeProperty.Type">
      <summary>
            Property type (e.g., DateTime, Note, Boolean).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ContentTypeProperty.Value">
      <summary>
            Initial value for this property.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ContentTypeProperty.Name">
      <summary>
            Name of this property.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CopyOptions">
      <summary>
            Represents the options used when copying a cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CopyOptions.Transpose">
      <summary>
            Gets or sets a value indicating whether to transpose rows and columns. The default value is <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CopyOptions.SkipBlanks">
      <summary>
            Gets or sets a value indicating whether to skip blank cells. The default value is <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CopyOptions.CopyTypes">
      <summary>
            Gets or sets types of cell data to copy. The default value is <see cref="F:GemBox.Spreadsheet.CopyTypes.Default" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CopyTypes">
      <summary>
            Represents types of data to copy from a cell range.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CopyTypes.Values">
      <summary>
            Copy cell values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CopyTypes.Formulas">
      <summary>
            Copy cell formulas.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CopyTypes.Comments">
      <summary>
            Copy comments.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CopyTypes.Hyperlinks">
      <summary>
            Copy hyperlinks.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CopyTypes.Drawings">
      <summary>
            Copy drawings (pictures, shapes, and charts).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CopyTypes.Validations">
      <summary>
            Copy data validations.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CopyTypes.ConditionalFormats">
      <summary>
            Copy conditional formattings.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CopyTypes.Styles">
      <summary>
            Copy cell styles.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CopyTypes.MergedRanges">
      <summary>
            Copy merged ranges.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CopyTypes.Default">
      <summary>
            Copy all data except column widths and row heights.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CopyTypes.ColumnWidths">
      <summary>
            Copy column widths.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CopyTypes.RowHeights">
      <summary>
            Copy row heights.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CreateDataTableOptions">
      <summary>
            Represents options creating <see cref="T:System.Data.DataTable" /> and filling it with values from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <remarks>
            Use default constructor to extract used cell range.
            </remarks>
      <seealso cref="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.CreateDataTableOptions)" />
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-datatable-from-excel/503">Create DataTable from Excel sheet in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.StartColumn">
      <summary>
            Gets or sets the index of the first column of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.CreateDataTableOptions.StartColumn" /> is ignored if <see cref="P:GemBox.Spreadsheet.CreateDataTableOptions.ColumnIndexes" /> has any values.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.NumberOfRows">
      <summary>
            Gets or sets the number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.NumberOfColumns">
      <summary>
            Gets or sets the number of columns being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.CreateDataTableOptions.NumberOfColumns" /> is ignored if <see cref="P:GemBox.Spreadsheet.CreateDataTableOptions.ColumnIndexes" /> has any values.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.ColumnIndexes">
      <summary>
            Gets a list of indexes of columns which will be extracted.
            </summary>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.CreateDataTableOptions.StartColumn" /> and <see cref="P:GemBox.Spreadsheet.CreateDataTableOptions.NumberOfColumns" /> are ignored if <see cref="P:GemBox.Spreadsheet.CreateDataTableOptions.ColumnIndexes" /> has any values.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.Resolution">
      <summary>
            Gets or sets the resolution type that specifies how column types will be resolved in created <see cref="T:System.Data.DataTable" />,
            see <see cref="T:GemBox.Spreadsheet.ColumnTypeResolution" />.
            </summary>
      <remarks>
            Default value is <see cref="F:GemBox.Spreadsheet.ColumnTypeResolution.Auto" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.ColumnHeaders">
      <summary>
            Gets or sets a value indicating whether to use first row of extracted data for column headers.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.ColumnHeadersComparer">
      <summary>
            Gets or sets the comparison operation that's used for resolving names of column headers.
            </summary>
      <remarks>
            Default value is <see cref="P:System.StringComparer.Ordinal" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.ExtractDataOptions">
      <summary>
            Gets or sets <see cref="P:GemBox.Spreadsheet.CreateDataTableOptions.ExtractDataOptions" />.
            </summary>
      <remarks>
            Default value is <see cref="F:GemBox.Spreadsheet.ExtractDataOptions.None" />.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.CreateDataTableOptions.#ctor">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.CreateDataTableOptions" /> class.
            </summary>
      <remarks>
            Use this constructor to extract used cell range.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.CreateDataTableOptions.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.CreateDataTableOptions" /> class.
            </summary>
      <param name="startRow">Index of the first row of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="startColumn">Index of the first column of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfColumns">Number of columns being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CreateDataTableOptions.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.CreateDataTableOptions" /> class.
            </summary>
      <param name="startCell">Name of the first (top left) cell of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfColumns">Number of columns being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.CsvLoadOptions">
      <summary>
            Represents options for loading from Character Separated Values file format.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.HasQuotedValues">
      <summary>
            Gets or sets a value indicating whether values in CSV file can be quoted. Default value is <see langword="true" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.HasFormulas">
      <summary>
            Gets or sets a value indicating the text is formula if it starts with '='. Default value is <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.AllowNewLineInQuotes">
      <summary>
            Gets or sets a value indicating whether a new line character can be inside quotes. Default value is <see langword="true" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.ParseNumbers">
      <summary>
            Gets or sets a value indicating whether numbers will be parsed and stored as <see cref="T:System.Double" /> values when loading CSV file. If <see langword="false" />, numbers will be loaded as strings. Default value is <see langword="true" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.NumberStyles">
      <summary>
            Gets or sets a value indicating number styles permitted in strings when parsing them to numeric types.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.StreamingMode">
      <summary>
        <para>Gets or sets the streaming mode that allows streamlined reading of <see cref="T:GemBox.Spreadsheet.ExcelRow" />s of each <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> of a loaded <see cref="T:GemBox.Spreadsheet.ExcelFile" />.</para>
        <para>Default value: <see cref="F:GemBox.Spreadsheet.LoadStreamingMode.None" />.</para>
      </summary>
      <value>
            The streaming mode.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.ParseDates">
      <summary>
            Gets or sets a value indicating whether dates will be parsed and stored as <see cref="T:System.DateTime" /> values when loading a CSV file. 
            If <see langword="false" />, numbers will be loaded as strings. 
            Default value is <see langword="true" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.DateTimeStyles">
      <summary>
            Gets or sets a value indicating DateTime styles permitted in strings when parsing them to DateTimes. Default value is <see cref="F:System.Globalization.DateTimeStyles.None" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.DateTimeFormats">
      <summary>
            Gets or sets an list of formats to be used when parsing cell values to <see cref="T:System.DateTime" /> (provided that <see cref="P:GemBox.Spreadsheet.CsvLoadOptions.ParseDates" /> is <see langword="true" />). 
            </summary>
      <remarks>
        <para>If this list is empty and <see cref="P:GemBox.Spreadsheet.CsvLoadOptions.ParseDates" /> is set to <see langword="true" />, texts will be converted to <see cref="T:System.DateTime" /> values when they are in one of the default formats supported by <see cref="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />.</para>
        <para>By default, this list is pre-filled with the following formats:</para>
        <list type="table">
          <item>
            <description>"d-M-yyyy"</description>
            <description>"d-M-yyyy HH:mm"</description>
            <description>"d-M-yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"dd-MM-yyyy"</description>
            <description>"dd-MM-yyyy HH:mm"</description>
            <description>"dd-MM-yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"M-d-yyyy"</description>
            <description>"M-d-yyyy HH:mm"</description>
            <description>"M-d-yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"MM-dd-yyyy"</description>
            <description>"MM-dd-yyyy HH:mm"</description>
            <description>"MM-dd-yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"yyyy-M-d"</description>
            <description>"yyyy-M-d HH:mm"</description>
            <description>"yyyy-M-d HH:mm:ss"</description>
          </item>
          <item>
            <description>"yyyy-MM-dd"</description>
            <description>"yyyy-MM-dd HH:mm"</description>
            <description>"yyyy-MM-dd HH:mm:ss"</description>
          </item>
          <item>
            <description>"d/M/yyyy"</description>
            <description>"d/M/yyyy HH:mm"</description>
            <description>"d/M/yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"dd/MM/yyyy"</description>
            <description>"dd/MM/yyyy HH:mm"</description>
            <description>"dd/MM/yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"M/d/yyyy"</description>
            <description>"M/d/yyyy HH:mm"</description>
            <description>"M/d/yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"MM/dd/yyyy"</description>
            <description>"MM/dd/yyyy HH:mm"</description>
            <description>"MM/dd/yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"yyyy/M/d"</description>
            <description>"yyyy/M/d HH:mm"</description>
            <description>"yyyy/M/d HH:mm:ss"</description>
          </item>
          <item>
            <description>"yyyy/MM/dd"</description>
            <description>"yyyy/MM/dd HH:mm"</description>
            <description>"yyyy/MM/dd HH:mm:ss"</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvLoadOptions.#ctor(GemBox.Spreadsheet.CsvType)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CsvLoadOptions" /> class.
            </summary>
      <param name="csvType">Value delimiter, <see cref="T:GemBox.Spreadsheet.CsvType" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvLoadOptions.#ctor(System.Char)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CsvLoadOptions" /> class.
            </summary>
      <param name="separator">Character that will serve as value delimiter.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.Separator">
      <summary>
            Gets or sets character that serves as value delimiter.
            </summary>
      <exception cref="T:System.ArgumentException">Value is set to quote '"' or new line '\n'.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.Type">
      <summary>
            Gets or sets value delimiter type, see <see cref="T:GemBox.Spreadsheet.CsvType" />.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.ParseFormatProvider">
      <summary>
            Gets or sets the format provider for the CSV file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.Encoding">
      <summary>
            Gets or sets the encoding for the CSV file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvLoadOptions.LoadCore(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.CsvQuoteMode">
      <summary>
            Possible conditions for when values in a CSV file should be quoted.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CsvQuoteMode.Default">
      <summary>
            Only cells with the selected delimiter, quotation marks, or newline characters in its value will be quoted.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CsvQuoteMode.Always">
      <summary>
            All cells will be quoted regardless of value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CsvQuoteMode.OnlyText">
      <summary>
            Only cells with text values will be quoted.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CsvSaveOptions">
      <summary>
            Represents options for saving to Character Separated Values file format.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.QuoteMode">
      <summary>
            Gets or sets a value indicating in which conditions values in a CSV file should be quoted. Default value is <see cref="F:GemBox.Spreadsheet.CsvQuoteMode.Default" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.UseFormattedValues">
      <summary>
            Gets or sets a value indicating whether values in CSV file will be formatted using <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat">number format</see>. Default value is <see langword="false" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvSaveOptions.#ctor(GemBox.Spreadsheet.CsvType)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CsvSaveOptions" /> class.
            </summary>
      <param name="csvType">Value delimiter, <see cref="T:GemBox.Spreadsheet.CsvType" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvSaveOptions.#ctor(System.Char)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CsvSaveOptions" /> class.
            </summary>
      <param name="separator">Character that will serve as value delimiter.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to CSV file format.
            </summary>
      <remarks>
            These are the limits:
            <list type="bullet"><item><description>MaxRows: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxColumns: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxColors: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxCellStyles: <see cref="F:System.Int32.MaxValue" /></description></item></list></remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.ContentType">
      <summary>
            Gets the content-type for CSV file format:
            <list type="bullet"><item><description><b>"text/tab-separated-values; charset=" + <see cref="P:GemBox.Spreadsheet.CsvSaveOptions.Encoding" />.<see cref="P:System.Text.Encoding.WebName" /></b> if <see cref="P:GemBox.Spreadsheet.CsvSaveOptions.Type" /> is <see cref="F:GemBox.Spreadsheet.CsvType.TabDelimited" />, otherwise</description></item><item><description><b>"text/csv; charset=" + <see cref="P:GemBox.Spreadsheet.CsvSaveOptions.Encoding" />.<see cref="P:System.Text.Encoding.WebName" /></b>.</description></item></list></summary>
      <value>
            The content-type for CSV file format.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.Separator">
      <summary>
            Gets or sets character that serves as value delimiter.
            </summary>
      <exception cref="T:System.ArgumentException">Value is set to quote '"' or new line '\n'.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.Type">
      <summary>
            Gets or sets value delimiter type, see <see cref="T:GemBox.Spreadsheet.CsvType" />.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.FormatProvider">
      <summary>
            Gets or sets the format provider for the CSV file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.Encoding">
      <summary>
            Gets or sets the encoding for the CSV file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvSaveOptions.Save(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.AlwaysQuoteValues">
      <summary>
            Gets or sets a value indicating whether values in a CSV file will always be quoted. Default value is <see langword="false" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CsvType">
      <summary>
            Formatting type for CSV files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CsvType.CommaDelimited">
      <summary>
            Comma delimited CSV (most frequently used). 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CsvType.SemicolonDelimited">
      <summary>
            Semicolon delimited CSV (used by Excel if current culture specifies comma as decimal separator).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CsvType.TabDelimited">
      <summary>
            Tab delimited CSV.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CustomFilter">
      <summary>
            Represents a filter that specifies one or two conditions (operators and values) and whether the two conditions are joined by 'and' or 'or'.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-autofilter/112">Excel AutoFiltering example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.CustomFilter.Operator">
      <summary>
            Gets or sets the operator used by the (first) filter condition.
            </summary>
      <value>
            The operator used by the (first) filter condition.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.CustomFilter.And">
      <summary>
            Gets or sets the value indicating whether the two conditions have an "and" relationship.
            <see langword="true" /> indicates "and", <see langword="false" /> indicates "or" and <see langword="null" /> indicates that second condition won't be applied.
            </summary>
      <value>
            The value indicating whether the two conditions have an "and" relationship.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.CustomFilter.Operator2">
      <summary>
            Gets or sets the operator used by the second filter condition.
            </summary>
      <value>
            The operator used by the second filter condition.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.CustomFilter.FilterType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.FilterType.Custom" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.FilterType.Custom" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.CustomFilter.Value">
      <summary>
        <para>Gets or sets the value used by the (first) filter condition.</para>
        <para>The value's type must be supported in <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> (<see langword="null" /> and types supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.SupportsType(System.Type)" />).</para>
      </summary>
      <value>
            The value used by the (first) filter condition.
            </value>
      <exception cref="T:System.NotSupportedException">Value's type is not supported.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CustomFilter.Value2">
      <summary>
        <para>Gets or sets the value used by the second filter condition.</para>
        <para>The value's type must be supported in <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> (<see langword="null" /> and types supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.SupportsType(System.Type)" />).</para>
      </summary>
      <value>
            The value used by the second filter condition.
            </value>
      <exception cref="T:System.NotSupportedException">Value's type is not supported.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CustomFilter.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CustomFilter" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CustomFilter" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs">
      <summary>
            Arguments for <see cref="E:GemBox.Spreadsheet.InsertDataTableOptions.DataTableCellToExcelCellConverting" /> event.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable">
      <summary>
            Gets the source <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable" /></summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTableRowIndex">
      <summary>
            Gets the source row index in <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTableColumnIndex">
      <summary>
            Gets the source column index in <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTableValue">
      <summary>
            Gets the source value from <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCell">
      <summary>
            Gets the destination <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCell" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCellValue">
      <summary>
            Gets or sets the value which will be inserted into destination <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCell" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelWorksheet">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCell" /> and <see cref="P:GemBox.Spreadsheet.ExcelCell.Worksheet" /> properties instead.</para>
        <para>Gets the destination <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelWorksheet" />.</para>
      </summary>
      <value>
            The destination <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelWorksheet" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelRowIndex">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCell" />, <see cref="P:GemBox.Spreadsheet.ExcelCell.Row" /> and <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Index" /> properties instead.</para>
        <para>Gets the destination row index in <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelWorksheet" />.</para>
      </summary>
      <value>
            The destination row index in <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelWorksheet" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelColumnIndex">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCell" />, <see cref="P:GemBox.Spreadsheet.ExcelCell.Column" /> and <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Index" /> properties instead.</para>
        <para>Gets the destination column index in <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelWorksheet" />.</para>
      </summary>
      <value>
            The destination column index in <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelWorksheet" />.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidation">
      <summary>
            A single item of data validation defined on ranges of the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.Type">
      <summary>
            Gets or sets the type of data validation.
            </summary>
      <value>
            The type of data validation.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.Operator">
      <summary>
            Gets or sets the relational operator used with this data validation.
            </summary>
      <value>
            The relational operator used with this data validation.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.IgnoreBlank">
      <summary>
            Gets or sets a value indicating whether the data validation treats empty or blank entries as 
            valid. <see langword="true" /> means empty entries are OK and do not violate the validation constraints.
            </summary>
      <value>
        <see langword="true" /> if empty entries are OK and do not violate the validation constraints; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.InCellDropdown">
      <summary>
            Gets or sets a value indicating whether to display the dropdown combo box for a <see cref="F:GemBox.Spreadsheet.DataValidationType.List" /> data validation type.
            </summary>
      <value>
        <see langword="true" /> to display the dropdown combo box for a <see cref="F:GemBox.Spreadsheet.DataValidationType.List" /> data validation type; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.Formula1">
      <summary>
            Gets or sets the first formula in the DataValidation dropdown.
            </summary>
      <value>
            The first formula in the DataValidation dropdown.
            </value>
      <remarks>
            It used as a bounds for <see cref="F:GemBox.Spreadsheet.DataValidationOperator.Between" /> and <see cref="F:GemBox.Spreadsheet.DataValidationOperator.NotBetween" /> relational
            operators, and the only formula used for other relational operators (<see cref="F:GemBox.Spreadsheet.DataValidationOperator.Equal" />, 
            <see cref="F:GemBox.Spreadsheet.DataValidationOperator.NotEqual" />, <see cref="F:GemBox.Spreadsheet.DataValidationOperator.LessThan" />, <see cref="F:GemBox.Spreadsheet.DataValidationOperator.LessThanOrEqual" />,
            <see cref="F:GemBox.Spreadsheet.DataValidationOperator.GreaterThan" />, <see cref="F:GemBox.Spreadsheet.DataValidationOperator.GreaterThanOrEqual" />), 
            or for <see cref="F:GemBox.Spreadsheet.DataValidationType.Custom" /> or <see cref="F:GemBox.Spreadsheet.DataValidationType.List" /> data validation type.
            The content can be an instance of any type, but the following rules apply when formula is being written:
            <list type="table"><item><description>
            If data validation type is <see cref="F:GemBox.Spreadsheet.DataValidationType.WholeNumber" /> or <see cref="F:GemBox.Spreadsheet.DataValidationType.TextLength" />, and content is integral data type
            (<see cref="T:System.SByte" />, <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, 
            <see cref="T:System.UInt32" />, <see cref="T:System.Int64" />, <see cref="T:System.UInt64" />), formula will be saved as integral constant, else if formula is an 
            Excel formula or an Excel reference (<see cref="T:System.String" /> that starts with '='), value will be saved as a formula, otherwise, it will be saved as string constant.
            </description></item><item><description>
            If data validation type is <see cref="F:GemBox.Spreadsheet.DataValidationType.Decimal" />, and content is floating-point data type (<see cref="T:System.Single" />,
            <see cref="T:System.Double" />, <see cref="T:System.Decimal" />), formula will be saved as floating-point constant, else if formula is an 
            Excel formula or an Excel reference (<see cref="T:System.String" /> that starts with '='), value will be saved as a formula, otherwise, it will be saved as string constant.
            </description></item><item><description>
            If data validation type is <see cref="F:GemBox.Spreadsheet.DataValidationType.Date" />, and content is <see cref="T:System.DateTime" /> data type, formula will be saved as 
            date constant, else if formula is an Excel formula or an Excel reference (<see cref="T:System.String" /> that starts with '='), 
            value will be saved as a formula, otherwise, it will be saved as string constant.
            </description></item><item><description>
            If data validation type is <see cref="F:GemBox.Spreadsheet.DataValidationType.Time" />, and content is <see cref="T:System.TimeSpan" /> data type, formula will be saved as
            time constant, else if formula is an Excel formula or an Excel reference (<see cref="T:System.String" /> that starts with '='), 
            value will be saved as a formula, otherwise, it will be saved as string constant.
            </description></item><item><description>
            If data validation type is <see cref="F:GemBox.Spreadsheet.DataValidationType.List" />, and content is any type that implements <see cref="T:System.Collections.IEnumerable" />, 
            formula will be saved as list series (comma separated values), else if formula is an Excel formula or an Excel reference 
            (<see cref="T:System.String" /> that starts with '='), value will be saved as a formula, otherwise, it will be saved as string constant.
            </description></item><item><description>
            If data validation type is <see cref="F:GemBox.Spreadsheet.DataValidationType.Custom" />, and formula is an Excel formula or an Excel reference 
            (<see cref="T:System.String" /> that starts with '='), value will be saved as a formula, otherwise, it will be saved as string constant.
            </description></item><item><description>
            If data validation type is <see cref="F:GemBox.Spreadsheet.DataValidationType.None" />, formula won't be saved.
            </description></item></list></remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.Formula2">
      <summary>
            Gets or sets the second formula in the DataValidation dropdown.
            </summary>
      <value>
            The second formula in the DataValidation dropdown.
            </value>
      <remarks>
            It used as a bounds for <see cref="F:GemBox.Spreadsheet.DataValidationOperator.Between" /> and <see cref="F:GemBox.Spreadsheet.DataValidationOperator.NotBetween" /> relational operators only.
            For the information about the content, see <see cref="P:GemBox.Spreadsheet.DataValidation.Formula1" /> remarks.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ShowInputMessage">
      <summary>
            Gets or sets a value indicating whether to display the input prompt message.
            </summary>
      <value>
        <see langword="true" /> to display the input prompt message; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.InputMessageTitle">
      <summary>
            Gets or sets the title bar text of input prompt.
            </summary>
      <value>
            The title bar text of input prompt.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.InputMessage">
      <summary>
            Gets or sets the message text of input prompt.
            </summary>
      <value>
            The message text of input prompt.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ShowErrorAlert">
      <summary>
            Gets or sets a value indicating whether to display the error alert message when an invalid
            value has been entered, according to the criteria specified.
            </summary>
      <value>
        <see langword="true" /> to display the error alert message when an invalid
            value has been entered; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ErrorStyle">
      <summary>
            Gets or sets the style of error alert used for this data validation.
            </summary>
      <value>
            The style of error alert used for this data validation.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ErrorTitle">
      <summary>
            Gets or sets the title bar text of error alert.
            </summary>
      <value>
            The title bar text of error alert.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ErrorMessage">
      <summary>
            Gets or sets the message text of error alert.
            </summary>
      <value>
            The message text of error alert.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.CellRanges">
      <summary>
            Gets the ranges over which data validation is applied.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor(GemBox.Spreadsheet.ExcelWorksheet,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class with specified worksheet and cell references on which this data validation will be applied.
            </summary>
      <param name="worksheet">The worksheet that will be used to initialize <see cref="T:GemBox.Spreadsheet.CellRange" />s that will be added to the <see cref="P:GemBox.Spreadsheet.DataValidation.CellRanges" /> collection of this data validation.</param>
      <param name="cellReferences">The cell references from which to create <see cref="T:GemBox.Spreadsheet.CellRange" />s.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor(GemBox.Spreadsheet.ExcelWorksheet,System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class with specified worksheet and cell references on which this data validation will be applied.
            </summary>
      <param name="worksheet">The worksheet that will be used to initialize <see cref="T:GemBox.Spreadsheet.CellRange" />s that will be added to the <see cref="P:GemBox.Spreadsheet.DataValidation.CellRanges" /> collection of this data validation.</param>
      <param name="cellReferences">The cell references from which to create <see cref="T:GemBox.Spreadsheet.CellRange" />s.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.CellRange})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class with specified cell ranges on which this data validation will be applied.
            </summary>
      <param name="cellRanges">The cell ranges on which this data validation will be applied.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor(GemBox.Spreadsheet.CellRange[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class with specified cell ranges on which this data validation will be applied.
            </summary>
      <param name="cellRanges">The cell ranges on which this data validation will be applied.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.Validate(GemBox.Spreadsheet.ExcelCell)">
      <summary>
            Applies this data validation to a specific cell, returning true if its value is to be considered valid.
            </summary>
      <param name="cell">The cell to be validated.</param>
      <returns>
        <see langword="true" /> if the cell value is valid, <see langword="false" /> if it is not.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidationCollection">
      <summary>
            A collection of <see cref="T:GemBox.Spreadsheet.DataValidation" /> items.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidationCollection.InsertItem(System.Int32,GemBox.Spreadsheet.DataValidation)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidationCollection.SetItem(System.Int32,GemBox.Spreadsheet.DataValidation)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidationErrorStyle">
      <summary>
            The style of data validation error alert.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationErrorStyle.Stop">
      <summary>
            This data validation error style uses a stop icon in the error alert.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationErrorStyle.Warning">
      <summary>
            This data validation error style uses a warning icon in the error alert.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationErrorStyle.Information">
      <summary>
            This data validation error style uses an information icon in the error alert.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidationOperator">
      <summary>
            The relational operator used in data validation.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.Between">
      <summary>
            Data validation which checks if a value is between two other values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.NotBetween">
      <summary>
            Data validation which checks if a value is not between two other values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.Equal">
      <summary>
            Data validation which checks if a value is equal to a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.NotEqual">
      <summary>
            Data validation which checks if a value is not equal to a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.LessThan">
      <summary>
            Data validation which checks if a value is less than a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.LessThanOrEqual">
      <summary>
            Data validation which checks if a value is less than or equal to a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.GreaterThan">
      <summary>
            Data validation which checks if a value is greater than a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.GreaterThanOrEqual">
      <summary>
            Data validation which checks if a value is greater than or equal to a specified value.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidationType">
      <summary>
            Specifies the type of data validation used to validate user input.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.None">
      <summary>
            No data validation.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.WholeNumber">
      <summary>
            Data validation which checks for whole number values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.Decimal">
      <summary>
            Data validation which checks for decimal values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.List">
      <summary>
            Data validation which checks for a value matching one of list of values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.Date">
      <summary>
            Data validation which checks for date values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.Time">
      <summary>
            Data validation which checks for time values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.TextLength">
      <summary>
            Data validation which checks for text values, whose length satisfies the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.Custom">
      <summary>
            Data validation which uses a custom formula to check the cell value.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DateTimeGroup">
      <summary>
        <para>Represents a group of <see cref="P:GemBox.Spreadsheet.DateTimeGroup.DateTime" />s.</para>
        <para>Each <see cref="P:GemBox.Spreadsheet.DateTimeGroup.DateTime" /> instance that has the same date/time components (year, month, day, hour, minute, second) as this <see cref="P:GemBox.Spreadsheet.DateTimeGroup.DateTime" /> up to <see cref="P:GemBox.Spreadsheet.DateTimeGroup.Level" /> belongs to this group.</para>
        <para>Instance of <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> can be inserted into <see cref="P:GemBox.Spreadsheet.ValuesFilter.Values" /> collection to enable filtering <see cref="P:GemBox.Spreadsheet.DateTimeGroup.DateTime" /> values.</para>
      </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DateTimeGroup.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> type with <see cref="F:GemBox.Spreadsheet.DateTimeGroupLevel.Year" /> level.
            </summary>
      <param name="year">The year.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DateTimeGroup.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> type with <see cref="F:GemBox.Spreadsheet.DateTimeGroupLevel.Month" /> level.
            </summary>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DateTimeGroup.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> type with <see cref="F:GemBox.Spreadsheet.DateTimeGroupLevel.Day" /> level.
            </summary>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
      <param name="day">The day.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DateTimeGroup.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> type with <see cref="F:GemBox.Spreadsheet.DateTimeGroupLevel.Hour" /> level.
            </summary>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
      <param name="day">The day.</param>
      <param name="hour">The hour.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DateTimeGroup.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> type with <see cref="F:GemBox.Spreadsheet.DateTimeGroupLevel.Minute" /> level.
            </summary>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
      <param name="day">The day.</param>
      <param name="hour">The hour.</param>
      <param name="minute">The minute.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DateTimeGroup.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> type with <see cref="F:GemBox.Spreadsheet.DateTimeGroupLevel.Second" /> level.
            </summary>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
      <param name="day">The day.</param>
      <param name="hour">The hour.</param>
      <param name="minute">The minute.</param>
      <param name="second">The second.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.DateTimeGroup.Level">
      <summary>
            Gets the grouping level of this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />.
            </summary>
      <value>
            The grouping level of this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DateTimeGroup.DateTime">
      <summary>
        <para>Gets the date/time of this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />.</para>
        <para>Valid date/time components are only those upon to <see cref="P:GemBox.Spreadsheet.DateTimeGroup.Level" />.</para>
      </summary>
      <value>
            The date/time of this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.DateTimeGroup.Equals(GemBox.Spreadsheet.DateTimeGroup)">
      <summary>
            Determines whether the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> is equal to this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> instance.
            </summary>
      <param name="other">The other <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> to compare with this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> instance.</param>
      <returns>
        <see langword="true" /> if the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> is equal to this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.DateTimeGroup.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> and is equal to this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.DateTimeGroup.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.DateTimeGroup.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.DateTimeGroup.op_Equality(GemBox.Spreadsheet.DateTimeGroup,GemBox.Spreadsheet.DateTimeGroup)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.DateTimeGroup.op_Inequality(GemBox.Spreadsheet.DateTimeGroup,GemBox.Spreadsheet.DateTimeGroup)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.DateTimeGroupLevel">
      <summary>
            Represents a level of a <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DateTimeGroupLevel.Second">
      <summary>
            The second level.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DateTimeGroupLevel.Minute">
      <summary>
            The minute level.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DateTimeGroupLevel.Hour">
      <summary>
            The hour level.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DateTimeGroupLevel.Day">
      <summary>
            The day level.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DateTimeGroupLevel.Month">
      <summary>
            The month level.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DateTimeGroupLevel.Year">
      <summary>
            The year level.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DefinedName">
      <summary>
            Defined name class describes defined name that is not directly related with one cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedName.Name">
      <summary>
            Gets or sets the name of the defined name object.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedName.LocalSheetIndex">
      <summary>
            Gets or sets the local sheet index of the defined name.
            If the local sheet index is -1, defined name is global.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedName.Value">
      <summary>
            Gets or sets the value of the defined name.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedName.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.DefinedName" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.DefinedName" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.DefinedNameCollection">
      <summary>
            Collection of defined names that are not directly related with one cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedNameCollection.Count">
      <summary>
            Returns the number of defined names in collection.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedNameCollection.Item(System.Int32)">
      <summary>
            Gets or sets defined name described by index from collection.
            </summary>
      <param name="index">Index of the defined name.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedNameCollection.Item(System.String)">
      <summary>
            Gets defined name described by name from collection.
            </summary>
      <param name="definedName">Name of the defined name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.AddDefinedName(System.String,System.String,System.Int32)">
      <summary>
            Adds defined name to collection and returns index of that defined name.
            </summary>
      <param name="name">Name of the defined name.</param>
      <param name="value">Range string.</param>
      <param name="localSheetIndex">Local sheet index. If the value is -1, defined name is global.</param>
      <returns>Index of the defined name.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.RemoveDefinedName(System.String)">
      <summary>
            Removes the defined name described by name from collection.
            </summary>
      <param name="definedName">Name of the defined name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.RemoveDefinedNameAt(System.Int32)">
      <summary>
            Removes the defined name described by index from collection.
            </summary>
      <param name="index">Index of the defined name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.Clear">
      <summary>
            Removes all elements from defined names collection.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.GetEnumerator">
      <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the collection. 
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the collection. 
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an <see cref="T:System.Collections.IEnumerator" /> for the collection. 
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> for the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.DigitalSignatureSaveOptions">
      <summary>
            Represents a class that stores details for signing a workbook with a digital signature.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DigitalSignatureSaveOptions.Certificate">
      <summary>
        <para>Gets or sets the X.509 certificate.</para>
        <para>Value must be of type System.Security.Cryptography.X509Certificates.X509Certificate2.</para>
      </summary>
      <value>
            The X.509 certificate.
            </value>
      <seealso href="https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.x509certificates.x509certificate2">System.Security.Cryptography.X509Certificates.X509Certificate2</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.DigitalSignatureSaveOptions.CertificateBytes">
      <summary>
            Gets or sets the byte array that contains data from an X.509 certificate.
            </summary>
      <value>
            The byte array that contains data from an X.509 certificate.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DigitalSignatureSaveOptions.CertificatePath">
      <summary>
            Gets or sets the file path to the X.509 certificate.
            </summary>
      <value>
            The file path to the X.509 certificate.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DigitalSignatureSaveOptions.UseMachineKeySet">
      <summary>
            Gets or sets a value indicating whether private keys are stored in the local computer store rather than the current user store.
            </summary>
      <value>
        <see langword="true" /> if private keys are stored in the local computer store rather than the current user store; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DigitalSignatureSaveOptions.CertificatePassword">
      <summary>
            Gets or sets the password required to access the X.509 certificate data.
            </summary>
      <value>
            The password required to access the X.509 certificate data.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DigitalSignatureSaveOptions.Reason">
      <summary>
            Gets or sets the reason for the signing.
            </summary>
      <value>
            The reason for the signing, such as ( I agree … ).
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DigitalSignatureSaveOptions.Signature">
      <summary>
            Gets or sets the signature.
            </summary>
      <value>
            The signature.
            </value>
      <remarks>
        <para>If value is <see langword="null" />, then digital signature won't have any visual representation.</para>
        <para>
            Signature is not drawn in the same layer as the rest of the page, but in a layer above the page.
            Signature's position is specified through <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.
            </para>
      </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.DocumentProperties">
      <summary>
            Contains a collection of built-in and custom document properties.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DocumentProperties.BuiltIn">
      <summary>
            Gets a collection of built-in document properties.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DocumentProperties.Custom">
      <summary>
            Gets a collection of custom document properties.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DocumentProperties.ContentType">
      <summary>
            Gets a read-only collection of custom content type properties.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DocumentProperties.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:GemBox.Spreadsheet.DocumentProperties" />.
            </summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:GemBox.Spreadsheet.DocumentProperties" />.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.Button">
      <summary>
            Represents a Button Form Control
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.Button.HorizontalAlignment">
      <summary>
            Gets or sets the horizontal alignment of the text in this button.
            </summary>
      <value>
            The horizontal alignment of the text in this button.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.Button.VerticalAlignment">
      <summary>
            Gets or sets the vertical alignment of the text in this button.
            </summary>
      <value>
            The vertical alignment of the text in this button.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.Button.Text">
      <summary>
            Gets the text content and formatting associated with this <see cref="T:GemBox.Spreadsheet.Drawing.Button" />.
            </summary>
      <value>
            The text content and formatting associated with this <see cref="T:GemBox.Spreadsheet.Drawing.Button" />.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.CapsType">
      <summary>
            Represents a text caps (capitalization) type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.CapsType.None">
      <summary>
            No caps are applied to the text.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.CapsType.Small">
      <summary>
            Apply small caps to the text. All letters are converted to lower case.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.CapsType.All">
      <summary>
            Apply all caps on the text. All lower case letters are converted to upper case.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.CheckBox">
      <summary>
            Represents a Check Box Form Control
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.CheckBox.Checked">
      <summary>
        <para>Gets or sets the value indicating whether this checkbox is checked.</para>
        <para>
          <see langword="true" /> - if the checkbox is checked, <see langword="false" /> - if the checkbox is
            not checked, <see langword="null" /> - if the value of the checkbox is mixed.</para>
      </summary>
      <value>
            The value indicating whether this checkbox is checked.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.CheckBox.CellLink">
      <summary>
            Gets or sets the cell which holds the value of this checkbox.
            </summary>
      <value>
            The cell which holds the value of this checkbox.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.CheckBox.Text">
      <summary>
            Gets the text content and formatting associated with this <see cref="T:GemBox.Spreadsheet.Drawing.CheckBox" />.
            </summary>
      <value>
            The text content and formatting associated with this <see cref="T:GemBox.Spreadsheet.Drawing.CheckBox" />.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.ComboBox">
      <summary>
            Represents a Combo Box Form Control
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ComboBox.InputRange">
      <summary>
            Gets or sets a CellRange which is used as the input range for this combo box.
            </summary>
      <value>
            The CellRange which is used as the input range for this combo box.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ComboBox.CellLink">
      <summary>
            Gets or sets the cell which holds the value of this combo box.
            </summary>
      <value>
            The cell which holds the value of this combo box.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ComboBox.DropDownLines">
      <summary>
            Gets or sets the value that specifies the maximum number of lines in the dropdown before scrollbars are added.
            </summary>
      <value>
            The value that specifies the maximum number of lines in the dropdown before scrollbars are added.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ComboBox.SelectedValue">
      <summary>
            Gets the selected value in the combo box.
            </summary>
      <value>
            Selected value in the combo box.
            </value>
      <remarks>
            The property returns null if no item is selected.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ComboBox.SelectedIndex">
      <summary>
            Gets or sets the index of the selected item in the combo box.
            </summary>
      <value>
            The index of the selected item in the combo box.
            </value>
      <remarks>
            Similarly to MS Excel, the index is 1-based. The property returns -1 if no item is selected.
            </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.Content">
      <summary>
            Represents an arbitrary content that is either embedded in or linked to the workbook file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.Content.ContentType">
      <summary>
        <para>Gets the media type of the content.</para>
        <para>This value can be <see langword="null" /> if the content is not embedded in but is linked to the workbook file.</para>
      </summary>
      <value>
            The media type of the content.
            </value>
      <seealso href="https://en.wikipedia.org/wiki/Media_type">Media type</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.Content.Link">
      <summary>
            Gets the location of the content that is not embedded in the workbook file.
            </summary>
      <value>
            The location of the content that does not reside within the workbook file.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.Content.IsExternal">
      <summary>
            Gets a value indicating whether this content is linked to the workbook file.
            </summary>
      <value>
        <see langword="true" /> if this content is linked to the workbook file; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Content.Open">
      <summary>
        <para>Opens the content as a <see cref="T:System.IO.Stream" />.</para>
        <para>Make sure to call <see cref="M:System.IO.Stream.Dispose" /> on the returned instance after it is no longer used and before it gets out of scope.</para>
      </summary>
      <returns>An instance of a <see cref="T:System.IO.Stream" /> type that represents content data.</returns>
      <remarks>
            If content is linked to the workbook file (<see cref="P:GemBox.Spreadsheet.Drawing.Content.Link" /> property is not <see langword="null" />), this method will attempt to open an external content.
            This operation might fail if the <see cref="P:GemBox.Spreadsheet.Drawing.Content.Link" /> value is not in the correct format or if executing code doesn't have permissions to access content at the location specified in the <see cref="P:GemBox.Spreadsheet.Drawing.Content.Link" /> value.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Content.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.Content" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.Content" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.DrawingColor">
      <summary>
            Represents a color.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.DrawingColor.FromName(GemBox.Spreadsheet.Drawing.DrawingColorName)">
      <summary>
            Creates a new color instance from the specified color name.
            </summary>
      <param name="name">The color name.</param>
      <returns>A color instance with the specified name.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.DrawingColor.FromName(GemBox.Spreadsheet.Drawing.DrawingColorName,System.Double)">
      <summary>
            Creates a new color instance from the specified color name and luminance.
            </summary>
      <param name="name">The color name.</param>
      <param name="luminance">The luminance (-1 = darkest, 0 = none, 1 = lightest).</param>
      <returns>A color instance with the specified name and luminance.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.DrawingColor.FromName(GemBox.Spreadsheet.Drawing.DrawingColorName,System.Double,System.Double)">
      <summary>
            Creates a new color instance from the specified color name, luminance and transparency.
            </summary>
      <param name="name">The color name.</param>
      <param name="luminance">The luminance (-1 = darkest, 0 = none, 1 = lightest).</param>
      <param name="transparency">The transparency (0 = fully opaque, 1 = fully transparent).</param>
      <returns>A color instance with the specified name, luminance and transparency.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.DrawingColor.FromRgb(System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a new color instance from the specified Red, Green and Blue components.
            </summary>
      <param name="r">The Red component (from 0 to 255).</param>
      <param name="g">The Green component (from 0 to 255).</param>
      <param name="b">The Blue component (from 0 to 255).</param>
      <returns>A new color instance from the specified Red, Green and Blue components.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.DrawingColor.FromRgb(System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>
            Creates a new color instance from the specified Red, Green and Blue components and transparency.
            </summary>
      <param name="r">The Red component (from 0 to 255).</param>
      <param name="g">The Green component (from 0 to 255).</param>
      <param name="b">The Blue component (from 0 to 255).</param>
      <param name="transparency">The transparency (0 = fully opaque, 1 = fully transparent).</param>
      <returns>A new color instance from the specified Red, Green and Blue components and transparency.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.DrawingColor.FromHsl(System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a new color instance from the specified Hue, Saturation and Lightness components.
            </summary>
      <param name="h">The Hue component (from 0 to 255).</param>
      <param name="s">The Saturation component (from 0 to 255).</param>
      <param name="l">The Lightness component (from 0 to 255).</param>
      <returns>A new color instance from the specified Hue, Saturation and Lightness components.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.DrawingColor.FromHsl(System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>
            Creates a new color instance from the specified Hue, Saturation and Lightness components and transparency.
            </summary>
      <param name="h">The Hue component (from 0 to 255).</param>
      <param name="s">The Saturation component (from 0 to 255).</param>
      <param name="l">The Lightness component (from 0 to 255).</param>
      <param name="transparency">The transparency (0 = fully opaque, 1 = fully transparent).</param>
      <returns>
            A new color instance from the specified Hue, Saturation and Lightness components and transparency.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.DrawingColor.Name">
      <summary>
            Gets the color name.
            </summary>
      <value>
            The color name.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.DrawingColor.A">
      <summary>
            Gets the color opacity (0 = fully transparent, 255 = fully opaque).
            </summary>
      <value>
            The color opacity.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.DrawingColor.R">
      <summary>
            Gets the Red component (from 0 to 255).
            </summary>
      <value>
            The Red component.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.DrawingColor.G">
      <summary>
            Gets the Green component (from 0 to 255).
            </summary>
      <value>
            The Green component.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.DrawingColor.B">
      <summary>
            Gets the Blue component (from 0 to 255).
            </summary>
      <value>
            The Blue component.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.DrawingColor.Argb">
      <summary>
            Gets the Opacity, Red, Green and Blue components in a single <see cref="T:System.Int32" /> value.
            </summary>
      <value>
            The Opacity, Red, Green and Blue components in a single <see cref="T:System.Int32" /> value.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.DrawingColor.Equals(GemBox.Spreadsheet.Drawing.DrawingColor)">
      <summary>
            Determines whether the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.Drawing.DrawingColor" /> is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.DrawingColor" /> instance.
            </summary>
      <param name="other">The other color to compare with this color instance.</param>
      <returns>
        <see langword="true" /> if the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.Drawing.DrawingColor" /> is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.DrawingColor" /> instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.DrawingColor.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.DrawingColor" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this color instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.Drawing.DrawingColor" /> and is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.DrawingColor" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.DrawingColor.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.Drawing.DrawingColor" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.Drawing.DrawingColor" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.DrawingColor.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.DrawingColor" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.DrawingColor" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.DrawingColor.op_Equality(GemBox.Spreadsheet.Drawing.DrawingColor,GemBox.Spreadsheet.Drawing.DrawingColor)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.Drawing.DrawingColor" />s are equal.
            </summary>
      <param name="first">The first color.</param>
      <param name="second">The second color.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> colors are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.DrawingColor.op_Inequality(GemBox.Spreadsheet.Drawing.DrawingColor,GemBox.Spreadsheet.Drawing.DrawingColor)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.Drawing.DrawingColor" />s are not equal.
            </summary>
      <param name="first">The first color.</param>
      <param name="second">The second color.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> colors are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.DrawingColorName">
      <summary>
            Represents a color name.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.None">
      <summary>
            The '<b>Empty</b>' color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Custom">
      <summary>
            The '<b>Custom</b>' color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Transparent">
      <summary>
            The '<b>Transparent</b>' color. Values: RGB = 0x000000, RGB = (0, 0, 0), HSL = (0, 0, 0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.AliceBlue">
      <summary>
            Standard '<b>Alice Blue</b>' color. Values: RGB = 0xF0F8FF, RGB = (240, 248, 255), HSL = (147, 255, 248).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.AntiqueWhite">
      <summary>
            Standard '<b>Antique White</b>' color. Values: RGB = 0xFAEBD7, RGB = (250, 235, 215), HSL = (24, 198, 233).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Aqua">
      <summary>
            Standard '<b>Aqua</b>' color. Values: RGB = 0x00FFFF, RGB = (0, 255, 255), HSL = (128, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Aquamarine">
      <summary>
            Standard '<b>Aquamarine</b>' color. Values: RGB = 0x7FFFD4, RGB = (127, 255, 212), HSL = (113, 255, 191).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Azure">
      <summary>
            Standard '<b>Azure</b>' color. Values: RGB = 0xF0FFFF, RGB = (240, 255, 255), HSL = (128, 255, 248).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Beige">
      <summary>
            Standard '<b>Beige</b>' color. Values: RGB = 0xF5F5DC, RGB = (245, 245, 220), HSL = (43, 142, 233).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Bisque">
      <summary>
            Standard '<b>Bisque</b>' color. Values: RGB = 0xFFE4C4, RGB = (255, 228, 196), HSL = (23, 255, 226).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Black">
      <summary>
            Standard '<b>Black</b>' color. Values: RGB = 0x000000, RGB = (0, 0, 0), HSL = (0, 0, 0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.BlanchedAlmond">
      <summary>
            Standard '<b>Blanched Almond</b>' color. Values: RGB = 0xFFEBCD, RGB = (255, 235, 205), HSL = (25, 255, 230).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Blue">
      <summary>
            Standard '<b>Blue</b>' color. Values: RGB = 0x0000FF, RGB = (0, 0, 255), HSL = (170, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.BlueViolet">
      <summary>
            Standard '<b>Blue Violet</b>' color. Values: RGB = 0x8A2BE2, RGB = (138, 43, 226), HSL = (192, 194, 135).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Brown">
      <summary>
            Standard '<b>Brown</b>' color. Values: RGB = 0xA52A2A, RGB = (165, 42, 42), HSL = (0, 152, 104).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.BurlyWood">
      <summary>
            Standard '<b>Burly Wood</b>' color. Values: RGB = 0xDEB887, RGB = (222, 184, 135), HSL = (24, 145, 179).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.CadetBlue">
      <summary>
            Standard '<b>Cadet Blue</b>' color. Values: RGB = 0x5F9EA0, RGB = (95, 158, 160), HSL = (129, 65, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Chartreuse">
      <summary>
            Standard '<b>Chartreuse</b>' color. Values: RGB = 0x7FFF00, RGB = (127, 255, 0), HSL = (64, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Chocolate">
      <summary>
            Standard '<b>Chocolate</b>' color. Values: RGB = 0xD2691E, RGB = (210, 105, 30), HSL = (18, 191, 120).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Coral">
      <summary>
            Standard '<b>Coral</b>' color. Values: RGB = 0xFF7F50, RGB = (255, 127, 80), HSL = (11, 255, 168).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.CornflowerBlue">
      <summary>
            Standard '<b>Cornflower Blue</b>' color. Values: RGB = 0x6495ED, RGB = (100, 149, 237), HSL = (155, 202, 169).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Cornsilk">
      <summary>
            Standard '<b>Cornsilk</b>' color. Values: RGB = 0xFFF8DC, RGB = (255, 248, 220), HSL = (34, 255, 238).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Crimson">
      <summary>
            Standard '<b>Crimson</b>' color. Values: RGB = 0xDC143C, RGB = (220, 20, 60), HSL = (247, 213, 120).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkBlue">
      <summary>
            Standard '<b>Dark Blue</b>' color. Values: RGB = 0x00008B, RGB = (0, 0, 139), HSL = (170, 255, 70).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkCyan">
      <summary>
            Standard '<b>Dark Cyan</b>' color. Values: RGB = 0x008B8B, RGB = (0, 139, 139), HSL = (128, 255, 70).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkGoldenrod">
      <summary>
            Standard '<b>Dark Goldenrod</b>' color. Values: RGB = 0xB8860B, RGB = (184, 134, 11), HSL = (30, 226, 98).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkGray">
      <summary>
            Standard '<b>Dark Gray</b>' color. Values: RGB = 0xA9A9A9, RGB = (169, 169, 169), HSL = (0, 0, 169).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkGreen">
      <summary>
            Standard '<b>Dark Green</b>' color. Values: RGB = 0x006400, RGB = (0, 100, 0), HSL = (85, 255, 50).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkKhaki">
      <summary>
            Standard '<b>Dark Khaki</b>' color. Values: RGB = 0xBDB76B, RGB = (189, 183, 107), HSL = (39, 98, 148).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkMagenta">
      <summary>
            Standard '<b>Dark Magenta</b>' color. Values: RGB = 0x8B008B, RGB = (139, 0, 139), HSL = (213, 255, 70).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkOliveGreen">
      <summary>
            Standard '<b>Dark Olive Green</b>' color. Values: RGB = 0x556B2F, RGB = (85, 107, 47), HSL = (58, 99, 77).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkOrange">
      <summary>
            Standard '<b>Dark Orange</b>' color. Values: RGB = 0xFF8C00, RGB = (255, 140, 0), HSL = (23, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkOrchid">
      <summary>
            Standard '<b>Dark Orchid</b>' color. Values: RGB = 0x9932CC, RGB = (153, 50, 204), HSL = (198, 155, 127).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkRed">
      <summary>
            Standard '<b>Dark Red</b>' color. Values: RGB = 0x8B0000, RGB = (139, 0, 0), HSL = (0, 255, 70).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkSalmon">
      <summary>
            Standard '<b>Dark Salmon</b>' color. Values: RGB = 0xE9967A, RGB = (233, 150, 122), HSL = (11, 183, 178).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkSeaGreen">
      <summary>
            Standard '<b>Dark Sea Green</b>' color. Values: RGB = 0x8FBC8F, RGB = (143, 188, 143), HSL = (85, 64, 166).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkSlateBlue">
      <summary>
            Standard '<b>Dark Slate Blue</b>' color. Values: RGB = 0x483D8B, RGB = (72, 61, 139), HSL = (176, 99, 100).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkSlateGray">
      <summary>
            Standard '<b>Dark Slate Gray</b>' color. Values: RGB = 0x2F4F4F, RGB = (47, 79, 79), HSL = (128, 65, 63).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkTurquoise">
      <summary>
            Standard '<b>Dark Turquoise</b>' color. Values: RGB = 0x00CED1, RGB = (0, 206, 209), HSL = (128, 255, 105).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DarkViolet">
      <summary>
            Standard '<b>Dark Violet</b>' color. Values: RGB = 0x9400D3, RGB = (148, 0, 211), HSL = (200, 255, 106).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DeepPink">
      <summary>
            Standard '<b>Deep Pink</b>' color. Values: RGB = 0xFF1493, RGB = (255, 20, 147), HSL = (232, 255, 138).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DeepSkyBlue">
      <summary>
            Standard '<b>Deep Sky Blue</b>' color. Values: RGB = 0x00BFFF, RGB = (0, 191, 255), HSL = (138, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DimGray">
      <summary>
            Standard '<b>Dim Gray</b>' color. Values: RGB = 0x696969, RGB = (105, 105, 105), HSL = (0, 0, 105).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.DodgerBlue">
      <summary>
            Standard '<b>Dodger Blue</b>' color. Values: RGB = 0x1E90FF, RGB = (30, 144, 255), HSL = (148, 255, 143).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Firebrick">
      <summary>
            Standard '<b>Firebrick</b>' color. Values: RGB = 0xB22222, RGB = (178, 34, 34), HSL = (0, 173, 106).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.FloralWhite">
      <summary>
            Standard '<b>Floral White</b>' color. Values: RGB = 0xFFFAF0, RGB = (255, 250, 240), HSL = (28, 255, 248).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ForestGreen">
      <summary>
            Standard '<b>Forest Green</b>' color. Values: RGB = 0x228B22, RGB = (34, 139, 34), HSL = (85, 155, 86).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Gainsboro">
      <summary>
            Standard '<b>Gainsboro</b>' color. Values: RGB = 0xDCDCDC, RGB = (220, 220, 220), HSL = (0, 0, 220).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.GhostWhite">
      <summary>
            Standard '<b>Ghost White</b>' color. Values: RGB = 0xF8F8FF, RGB = (248, 248, 255), HSL = (170, 255, 252).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Gold">
      <summary>
            Standard '<b>Gold</b>' color. Values: RGB = 0xFFD700, RGB = (255, 215, 0), HSL = (36, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Goldenrod">
      <summary>
            Standard '<b>Goldenrod</b>' color. Values: RGB = 0xDAA520, RGB = (218, 165, 32), HSL = (30, 190, 125).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Gray">
      <summary>
            Standard '<b>Gray</b>' color. Values: RGB = 0x808080, RGB = (128, 128, 128), HSL = (0, 0, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Green">
      <summary>
            Standard '<b>Green</b>' color. Values: RGB = 0x008000, RGB = (0, 128, 0), HSL = (85, 255, 64).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.GreenYellow">
      <summary>
            Standard '<b>Green Yellow</b>' color. Values: RGB = 0xADFF2F, RGB = (173, 255, 47), HSL = (59, 255, 151).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Honeydew">
      <summary>
            Standard '<b>Honeydew</b>' color. Values: RGB = 0xF0FFF0, RGB = (240, 255, 240), HSL = (85, 255, 248).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.HotPink">
      <summary>
            Standard '<b>Hot Pink</b>' color. Values: RGB = 0xFF69B4, RGB = (255, 105, 180), HSL = (234, 255, 180).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.IndianRed">
      <summary>
            Standard '<b>Indian Red</b>' color. Values: RGB = 0xCD5C5C, RGB = (205, 92, 92), HSL = (0, 135, 149).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Indigo">
      <summary>
            Standard '<b>Indigo</b>' color. Values: RGB = 0x4B0082, RGB = (75, 0, 130), HSL = (195, 255, 65).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Ivory">
      <summary>
            Standard '<b>Ivory</b>' color. Values: RGB = 0xFFFFF0, RGB = (255, 255, 240), HSL = (43, 255, 248).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Khaki">
      <summary>
            Standard '<b>Khaki</b>' color. Values: RGB = 0xF0E68C, RGB = (240, 230, 140), HSL = (38, 196, 190).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Lavender">
      <summary>
            Standard '<b>Lavender</b>' color. Values: RGB = 0xE6E6FA, RGB = (230, 230, 250), HSL = (170, 170, 240).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LavenderBlush">
      <summary>
            Standard '<b>Lavender Blush</b>' color. Values: RGB = 0xFFF0F5, RGB = (255, 240, 245), HSL = (241, 255, 248).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LawnGreen">
      <summary>
            Standard '<b>Lawn Green</b>' color. Values: RGB = 0x7CFC00, RGB = (124, 252, 0), HSL = (64, 255, 126).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LemonChiffon">
      <summary>
            Standard '<b>Lemon Chiffon</b>' color. Values: RGB = 0xFFFACD, RGB = (255, 250, 205), HSL = (38, 255, 230).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LightBlue">
      <summary>
            Standard '<b>Light Blue</b>' color. Values: RGB = 0xADD8E6, RGB = (173, 216, 230), HSL = (138, 136, 202).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LightCoral">
      <summary>
            Standard '<b>Light Coral</b>' color. Values: RGB = 0xF08080, RGB = (240, 128, 128), HSL = (0, 201, 184).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LightCyan">
      <summary>
            Standard '<b>Light Cyan</b>' color. Values: RGB = 0xE0FFFF, RGB = (224, 255, 255), HSL = (128, 255, 240).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LightGoldenrodYellow">
      <summary>
            Standard '<b>Light Goldenrod Yellow</b>' color. Values: RGB = 0xFAFAD2, RGB = (250, 250, 210), HSL = (43, 204, 230).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LightGray">
      <summary>
            Standard '<b>Light Gray</b>' color. Values: RGB = 0xD3D3D3, RGB = (211, 211, 211), HSL = (0, 0, 211).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LightGreen">
      <summary>
            Standard '<b>Light Green</b>' color. Values: RGB = 0x90EE90, RGB = (144, 238, 144), HSL = (85, 187, 191).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LightPink">
      <summary>
            Standard '<b>Light Pink</b>' color. Values: RGB = 0xFFB6C1, RGB = (255, 182, 193), HSL = (249, 255, 219).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LightSalmon">
      <summary>
            Standard '<b>Light Salmon</b>' color. Values: RGB = 0xFFA07A, RGB = (255, 160, 122), HSL = (12, 255, 189).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LightSeaGreen">
      <summary>
            Standard '<b>Light Sea Green</b>' color. Values: RGB = 0x20B2AA, RGB = (32, 178, 170), HSL = (125, 177, 105).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LightSkyBlue">
      <summary>
            Standard '<b>Light Sky Blue</b>' color. Values: RGB = 0x87CEFA, RGB = (135, 206, 250), HSL = (144, 235, 193).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LightSlateGray">
      <summary>
            Standard '<b>Light Slate Gray</b>' color. Values: RGB = 0x778899, RGB = (119, 136, 153), HSL = (149, 36, 136).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LightSteelBlue">
      <summary>
            Standard '<b>Light Steel Blue</b>' color. Values: RGB = 0xB0C4DE, RGB = (176, 196, 222), HSL = (152, 105, 199).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LightYellow">
      <summary>
            Standard '<b>Light Yellow</b>' color. Values: RGB = 0xFFFFE0, RGB = (255, 255, 224), HSL = (43, 255, 240).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Lime">
      <summary>
            Standard '<b>Lime</b>' color. Values: RGB = 0x00FF00, RGB = (0, 255, 0), HSL = (85, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.LimeGreen">
      <summary>
            Standard '<b>Lime Green</b>' color. Values: RGB = 0x32CD32, RGB = (50, 205, 50), HSL = (85, 155, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Linen">
      <summary>
            Standard '<b>Linen</b>' color. Values: RGB = 0xFAF0E6, RGB = (250, 240, 230), HSL = (21, 170, 240).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Magenta">
      <summary>
            Standard '<b>Magenta</b>' color. Values: RGB = 0xFF00FF, RGB = (255, 0, 255), HSL = (213, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Maroon">
      <summary>
            Standard '<b>Maroon</b>' color. Values: RGB = 0x800000, RGB = (128, 0, 0), HSL = (0, 255, 64).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.MediumAquamarine">
      <summary>
            Standard '<b>Medium Aquamarine</b>' color. Values: RGB = 0x66CDAA, RGB = (102, 205, 170), HSL = (113, 129, 154).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.MediumBlue">
      <summary>
            Standard '<b>Medium Blue</b>' color. Values: RGB = 0x0000CD, RGB = (0, 0, 205), HSL = (170, 255, 103).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.MediumOrchid">
      <summary>
            Standard '<b>Medium Orchid</b>' color. Values: RGB = 0xBA55D3, RGB = (186, 85, 211), HSL = (204, 150, 148).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.MediumPurple">
      <summary>
            Standard '<b>Medium Purple</b>' color. Values: RGB = 0x9370DB, RGB = (147, 112, 219), HSL = (184, 152, 165).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.MediumSeaGreen">
      <summary>
            Standard '<b>Medium Sea Green</b>' color. Values: RGB = 0x3CB371, RGB = (60, 179, 113), HSL = (104, 127, 120).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.MediumSlateBlue">
      <summary>
            Standard '<b>Medium Slate Blue</b>' color. Values: RGB = 0x7B68EE, RGB = (123, 104, 238), HSL = (176, 203, 171).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.MediumSpringGreen">
      <summary>
            Standard '<b>Medium Spring Green</b>' color. Values: RGB = 0x00FA9A, RGB = (0, 250, 154), HSL = (111, 255, 125).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.MediumTurquoise">
      <summary>
            Standard '<b>Medium Turquoise</b>' color. Values: RGB = 0x48D1CC, RGB = (72, 209, 204), HSL = (126, 153, 141).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.MediumVioletRed">
      <summary>
            Standard '<b>Medium Violet Red</b>' color. Values: RGB = 0xC71585, RGB = (199, 21, 133), HSL = (228, 206, 110).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.MidnightBlue">
      <summary>
            Standard '<b>Midnight Blue</b>' color. Values: RGB = 0x191970, RGB = (25, 25, 112), HSL = (170, 162, 69).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.MintCream">
      <summary>
            Standard '<b>Mint Cream</b>' color. Values: RGB = 0xF5FFFA, RGB = (245, 255, 250), HSL = (106, 255, 250).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.MistyRose">
      <summary>
            Standard '<b>Misty Rose</b>' color. Values: RGB = 0xFFE4E1, RGB = (255, 228, 225), HSL = (4, 255, 240).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Moccasin">
      <summary>
            Standard '<b>Moccasin</b>' color. Values: RGB = 0xFFE4B5, RGB = (255, 228, 181), HSL = (27, 255, 218).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.NavajoWhite">
      <summary>
            Standard '<b>Navajo White</b>' color. Values: RGB = 0xFFDEAD, RGB = (255, 222, 173), HSL = (25, 255, 214).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Navy">
      <summary>
            Standard '<b>Navy</b>' color. Values: RGB = 0x000080, RGB = (0, 0, 128), HSL = (170, 255, 64).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.OldLace">
      <summary>
            Standard '<b>Old Lace</b>' color. Values: RGB = 0xFDF5E6, RGB = (253, 245, 230), HSL = (28, 217, 242).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Olive">
      <summary>
            Standard '<b>Olive</b>' color. Values: RGB = 0x808000, RGB = (128, 128, 0), HSL = (43, 255, 64).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.OliveDrab">
      <summary>
            Standard '<b>Olive Drab</b>' color. Values: RGB = 0x6B8E23, RGB = (107, 142, 35), HSL = (56, 154, 89).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Orange">
      <summary>
            Standard '<b>Orange</b>' color. Values: RGB = 0xFFA500, RGB = (255, 165, 0), HSL = (28, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.OrangeRed">
      <summary>
            Standard '<b>Orange Red</b>' color. Values: RGB = 0xFF4500, RGB = (255, 69, 0), HSL = (12, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Orchid">
      <summary>
            Standard '<b>Orchid</b>' color. Values: RGB = 0xDA70D6, RGB = (218, 112, 214), HSL = (214, 150, 165).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.PaleGoldenrod">
      <summary>
            Standard '<b>Pale Goldenrod</b>' color. Values: RGB = 0xEEE8AA, RGB = (238, 232, 170), HSL = (39, 170, 204).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.PaleGreen">
      <summary>
            Standard '<b>Pale Green</b>' color. Values: RGB = 0x98FB98, RGB = (152, 251, 152), HSL = (85, 236, 202).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.PaleTurquoise">
      <summary>
            Standard '<b>Pale Turquoise</b>' color. Values: RGB = 0xAFEEEE, RGB = (175, 238, 238), HSL = (128, 166, 207).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.PaleVioletRed">
      <summary>
            Standard '<b>Pale Violet Red</b>' color. Values: RGB = 0xDB7093, RGB = (219, 112, 147), HSL = (241, 152, 165).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.PapayaWhip">
      <summary>
            Standard '<b>Papaya Whip</b>' color. Values: RGB = 0xFFEFD5, RGB = (255, 239, 213), HSL = (26, 255, 234).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.PeachPuff">
      <summary>
            Standard '<b>Peach Puff</b>' color. Values: RGB = 0xFFDAB9, RGB = (255, 218, 185), HSL = (20, 255, 220).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Peru">
      <summary>
            Standard '<b>Peru</b>' color. Values: RGB = 0xCD853F, RGB = (205, 133, 63), HSL = (21, 150, 134).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Pink">
      <summary>
            Standard '<b>Pink</b>' color. Values: RGB = 0xFFC0CB, RGB = (255, 192, 203), HSL = (248, 255, 224).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Plum">
      <summary>
            Standard '<b>Plum</b>' color. Values: RGB = 0xDDA0DD, RGB = (221, 160, 221), HSL = (213, 121, 191).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.PowderBlue">
      <summary>
            Standard '<b>Powder Blue</b>' color. Values: RGB = 0xB0E0E6, RGB = (176, 224, 230), HSL = (132, 132, 203).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Purple">
      <summary>
            Standard '<b>Purple</b>' color. Values: RGB = 0x800080, RGB = (128, 0, 128), HSL = (213, 255, 64).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Red">
      <summary>
            Standard '<b>Red</b>' color. Values: RGB = 0xFF0000, RGB = (255, 0, 0), HSL = (0, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.RosyBrown">
      <summary>
            Standard '<b>Rosy Brown</b>' color. Values: RGB = 0xBC8F8F, RGB = (188, 143, 143), HSL = (0, 64, 166).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.RoyalBlue">
      <summary>
            Standard '<b>Royal Blue</b>' color. Values: RGB = 0x4169E1, RGB = (65, 105, 225), HSL = (159, 185, 145).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SaddleBrown">
      <summary>
            Standard '<b>Saddle Brown</b>' color. Values: RGB = 0x8B4513, RGB = (139, 69, 19), HSL = (18, 194, 79).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Salmon">
      <summary>
            Standard '<b>Salmon</b>' color. Values: RGB = 0xFA8072, RGB = (250, 128, 114), HSL = (4, 238, 182).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SandyBrown">
      <summary>
            Standard '<b>Sandy Brown</b>' color. Values: RGB = 0xF4A460, RGB = (244, 164, 96), HSL = (20, 222, 170).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SeaGreen">
      <summary>
            Standard '<b>Sea Green</b>' color. Values: RGB = 0x2E8B57, RGB = (46, 139, 87), HSL = (104, 128, 93).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SeaShell">
      <summary>
            Standard '<b>Sea Shell</b>' color. Values: RGB = 0xFFF5EE, RGB = (255, 245, 238), HSL = (18, 255, 247).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Sienna">
      <summary>
            Standard '<b>Sienna</b>' color. Values: RGB = 0xA0522D, RGB = (160, 82, 45), HSL = (14, 143, 103).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Silver">
      <summary>
            Standard '<b>Silver</b>' color. Values: RGB = 0xC0C0C0, RGB = (192, 192, 192), HSL = (0, 0, 192).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SkyBlue">
      <summary>
            Standard '<b>Sky Blue</b>' color. Values: RGB = 0x87CEEB, RGB = (135, 206, 235), HSL = (140, 182, 185).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SlateBlue">
      <summary>
            Standard '<b>Slate Blue</b>' color. Values: RGB = 0x6A5ACD, RGB = (106, 90, 205), HSL = (176, 136, 148).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SlateGray">
      <summary>
            Standard '<b>Slate Gray</b>' color. Values: RGB = 0x708090, RGB = (112, 128, 144), HSL = (149, 32, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Snow">
      <summary>
            Standard '<b>Snow</b>' color. Values: RGB = 0xFFFAFA, RGB = (255, 250, 250), HSL = (0, 255, 253).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SpringGreen">
      <summary>
            Standard '<b>Spring Green</b>' color. Values: RGB = 0x00FF7F, RGB = (0, 255, 127), HSL = (106, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SteelBlue">
      <summary>
            Standard '<b>Steel Blue</b>' color. Values: RGB = 0x4682B4, RGB = (70, 130, 180), HSL = (147, 112, 125).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Tan">
      <summary>
            Standard '<b>Tan</b>' color. Values: RGB = 0xD2B48C, RGB = (210, 180, 140), HSL = (24, 112, 175).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Teal">
      <summary>
            Standard '<b>Teal</b>' color. Values: RGB = 0x008080, RGB = (0, 128, 128), HSL = (128, 255, 64).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Thistle">
      <summary>
            Standard '<b>Thistle</b>' color. Values: RGB = 0xD8BFD8, RGB = (216, 191, 216), HSL = (213, 62, 204).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Tomato">
      <summary>
            Standard '<b>Tomato</b>' color. Values: RGB = 0xFF6347, RGB = (255, 99, 71), HSL = (6, 255, 163).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Turquoise">
      <summary>
            Standard '<b>Turquoise</b>' color. Values: RGB = 0x40E0D0, RGB = (64, 224, 208), HSL = (123, 184, 144).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Violet">
      <summary>
            Standard '<b>Violet</b>' color. Values: RGB = 0xEE82EE, RGB = (238, 130, 238), HSL = (213, 194, 184).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Wheat">
      <summary>
            Standard '<b>Wheat</b>' color. Values: RGB = 0xF5DEB3, RGB = (245, 222, 179), HSL = (28, 196, 212).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.White">
      <summary>
            Standard '<b>White</b>' color. Values: RGB = 0xFFFFFF, RGB = (255, 255, 255), HSL = (0, 0, 255).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.WhiteSmoke">
      <summary>
            Standard '<b>White Smoke</b>' color. Values: RGB = 0xF5F5F5, RGB = (245, 245, 245), HSL = (0, 0, 245).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.Yellow">
      <summary>
            Standard '<b>Yellow</b>' color. Values: RGB = 0xFFFF00, RGB = (255, 255, 0), HSL = (43, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.YellowGreen">
      <summary>
            Standard '<b>Yellow Green</b>' color. Values: RGB = 0x9ACD32, RGB = (154, 205, 50), HSL = (56, 155, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeStyle">
      <summary>
            Theme '<b>Style</b>' color. A color used in theme definitions which means to use the color of the style. Default Office theme values depend on the Office version, in Office 2010: RGB = 0x000000, RGB = (0, 0, 0), HSL = (0, 0, 0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeDark1">
      <summary>
            Theme '<b>Dark 1</b>' color. Main dark color 1. Default Office theme values depend on the Office version, in Office 2010: RGB = 0x000000, RGB = (0, 0, 0), HSL = (0, 0, 0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeLight1">
      <summary>
            Theme '<b>Light 1</b>' color. Main light color 1. Default Office theme values depend on the Office version, in Office 2010: RGB = 0xFFFFFF, RGB = (255, 255, 255), HSL = (0, 0, 255).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeDark2">
      <summary>
            Theme '<b>Dark 2</b>' color. Main dark color 2. Default Office theme values depend on the Office version, in Office 2010: RGB = 0x1F497D, RGB = (31, 73, 125), HSL = (151, 154, 78).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeLight2">
      <summary>
            Theme '<b>Light 2</b>' color. Main light color 2. Default Office theme values depend on the Office version, in Office 2010: RGB = 0xEEECE1, RGB = (238, 236, 225), HSL = (36, 71, 232).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeAccent1">
      <summary>
            Theme '<b>Accent 1</b>' color. Extra theme color 1. Default Office theme values depend on the Office version, in Office 2010: RGB = 0x4F81BD, RGB = (79, 129, 189), HSL = (151, 116, 134).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeAccent2">
      <summary>
            Theme '<b>Accent 2</b>' color. Extra theme color 2. Default Office theme values depend on the Office version, in Office 2010: RGB = 0xC0504D, RGB = (192, 80, 77), HSL = (1, 122, 135).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeAccent3">
      <summary>
            Theme '<b>Accent 3</b>' color. Extra theme color 3. Default Office theme values depend on the Office version, in Office 2010: RGB = 0x9BBB59, RGB = (155, 187, 89), HSL = (56, 107, 138).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeAccent4">
      <summary>
            Theme '<b>Accent 4</b>' color. Extra theme color 4. Default Office theme values depend on the Office version, in Office 2010: RGB = 0x8064A2, RGB = (128, 100, 162), HSL = (189, 64, 131).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeAccent5">
      <summary>
            Theme '<b>Accent 5</b>' color. Extra theme color 5. Default Office theme values depend on the Office version, in Office 2010: RGB = 0x4BACC6, RGB = (75, 172, 198), HSL = (136, 132, 137).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeAccent6">
      <summary>
            Theme '<b>Accent 6</b>' color. Extra theme color 6. Default Office theme values depend on the Office version, in Office 2010: RGB = 0xF79646, RGB = (247, 150, 70), HSL = (19, 234, 159).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeHyperlink">
      <summary>
            Theme '<b>Hyperlink</b>' color. Default Office theme values depend on the Office version, in Office 2010: RGB = 0x0000FF, RGB = (0, 0, 255), HSL = (170, 255, 128).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeFollowedHyperlink">
      <summary>
            Theme '<b>Followed Hyperlink</b>' color. Default Office theme values depend on the Office version, in Office 2010: RGB = 0x800080, RGB = (128, 0, 128), HSL = (213, 255, 64).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeBackground1">
      <summary>
            Theme '<b>Background 1</b>' color. Semantic background color. Default Office theme values depend on the Office version, in Office 2010: RGB = 0xFFFFFF, RGB = (255, 255, 255), HSL = (0, 0, 255).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeText1">
      <summary>
            Theme '<b>Text 1</b>' color. Semantic text color. Default Office theme values depend on the Office version, in Office 2010: RGB = 0x000000, RGB = (0, 0, 0), HSL = (0, 0, 0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeBackground2">
      <summary>
            Theme '<b>Background 2</b>' color. Semantic additional background color. Default Office theme values depend on the Office version, in Office 2010: RGB = 0xEEECE1, RGB = (238, 236, 225), HSL = (36, 71, 232).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.ThemeText2">
      <summary>
            Theme '<b>Text 2</b>' color. Semantic additional text color. Default Office theme values depend on the Office version, in Office 2010: RGB = 0x1F497D, RGB = (31, 73, 125), HSL = (151, 154, 78).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.System3DDark">
      <summary>
            System '<b>3D Dark</b>' color. Specifies a Dark shadow color for three-dimensional display elements. Default Windows system values: RGB = 0x696969, RGB = (105, 105, 105), HSL = (0, 0, 105).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.System3DLight">
      <summary>
            System '<b>3D Light</b>' color. Specifies a Light color for three-dimensional display elements (for edges facing the light source). Default Windows system values: RGB = 0xE3E3E3, RGB = (227, 227, 227), HSL = (0, 0, 227).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemActiveBorder">
      <summary>
            System '<b>Active Border</b>' color. Specifies an Active Window Border Color. Default Windows system values: RGB = 0xB4B4B4, RGB = (180, 180, 180), HSL = (0, 0, 180).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemActiveCaption">
      <summary>
            System '<b>Active Caption</b>' color. Specifies the active window title bar color. In particular the left side color in the color gradient of an active window's title bar if the gradient effect is enabled. Default Windows system values: RGB = 0x99B4D1, RGB = (153, 180, 209), HSL = (150, 96, 181).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemApplicationWorkspace">
      <summary>
            System '<b>Application Workspace</b>' color. Specifies the Background color of multiple document interface (MDI) applications. Default Windows system values: RGB = 0xABABAB, RGB = (171, 171, 171), HSL = (0, 0, 171).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemBackground">
      <summary>
            System '<b>Background</b>' color. Specifies the desktop background color. Default Windows system values: RGB = 0x000000, RGB = (0, 0, 0), HSL = (0, 0, 0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemButtonFace">
      <summary>
            System '<b>Button Face</b>' color. Specifies the face color for three-dimensional display elements and for dialog box backgrounds. Default Windows system values: RGB = 0xF0F0F0, RGB = (240, 240, 240), HSL = (0, 0, 240).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemButtonHighlight">
      <summary>
            System '<b>Button Highlight</b>' color. Specifies the highlight color for three-dimensional display elements (for edges facing the light source). Default Windows system values: RGB = 0xFFFFFF, RGB = (255, 255, 255), HSL = (0, 0, 255).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemButtonShadow">
      <summary>
            System '<b>Button Shadow</b>' color. Specifies the shadow color for three-dimensional display elements (for edges facing away from the light source). Default Windows system values: RGB = 0xA0A0A0, RGB = (160, 160, 160), HSL = (0, 0, 160).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemButtonText">
      <summary>
            System '<b>Button Text</b>' color. Specifies the color of text on push buttons. Default Windows system values: RGB = 0x000000, RGB = (0, 0, 0), HSL = (0, 0, 0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemCaptionText">
      <summary>
            System '<b>Caption Text</b>' color. Specifies the color of text in the caption, size box, and scroll bar arrow box. Default Windows system values: RGB = 0x000000, RGB = (0, 0, 0), HSL = (0, 0, 0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemGradientActiveCaption">
      <summary>
            System '<b>Gradient Active Caption</b>' color. Specifies the right side color in the color gradient of an active window's title bar. Default Windows system values: RGB = 0xB9D1EA, RGB = (185, 209, 234), HSL = (149, 137, 210).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemGradientInactiveCaption">
      <summary>
            System '<b>Gradient Inactive Caption</b>' color. Specifies the right side color in the color gradient of an inactive window's title bar. Default Windows system values: RGB = 0xD7E4F2, RGB = (215, 228, 242), HSL = (150, 130, 228).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemGrayText">
      <summary>
            System '<b>Gray Text</b>' color. Specifies a grayed (disabled) text. This color is set to 0 if the current display driver does not support a solid gray color. Default Windows system values: RGB = 0x6D6D6D, RGB = (109, 109, 109), HSL = (0, 0, 109).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemHighlight">
      <summary>
            System '<b>Highlight</b>' color. Specifies the color of Item(s) selected in a control. Default Windows system values: RGB = 0x3399FF, RGB = (51, 153, 255), HSL = (149, 255, 153).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemHighlightText">
      <summary>
            System '<b>Highlight Text</b>' color. Specifies the text color of item(s) selected in a control. Default Windows system values: RGB = 0xFFFFFF, RGB = (255, 255, 255), HSL = (0, 0, 255).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemHotLight">
      <summary>
            System '<b>Hot Light</b>' color. Specifies the color for a hyperlink or hot-tracked item. Default Windows system values: RGB = 0x0066CC, RGB = (0, 102, 204), HSL = (149, 255, 102).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemInactiveBorder">
      <summary>
            System '<b>Inactive Border</b>' color. Specifies the color of the Inactive window border. Default Windows system values: RGB = 0xF4F7FC, RGB = (244, 247, 252), HSL = (154, 146, 248).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemInactiveCaption">
      <summary>
            System '<b>Inactive Caption</b>' color. Specifies the color of the Inactive window caption. Specifies the left side color in the color gradient of an inactive window's title bar if the gradient effect is enabled. Default Windows system values: RGB = 0xBFCDDB, RGB = (191, 205, 219), HSL = (149, 71, 205).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemInactiveCaptionText">
      <summary>
            System '<b>Inactive Caption Text</b>' color. Specifies the color of text in an inactive caption. Default Windows system values: RGB = 0x434E54, RGB = (67, 78, 84), HSL = (142, 29, 76).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemInfoBack">
      <summary>
            System '<b>Info Back</b>' color. Specifies the background color for tooltip controls. Default Windows system values: RGB = 0xFFFFE1, RGB = (255, 255, 225), HSL = (43, 255, 240).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemInfoText">
      <summary>
            System '<b>Info Text</b>' color. Specifies the text color for tooltip controls. Default Windows system values: RGB = 0x000000, RGB = (0, 0, 0), HSL = (0, 0, 0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemMenu">
      <summary>
            System '<b>Menu</b>' color. Specifies the menu background color. Default Windows system values: RGB = 0xF0F0F0, RGB = (240, 240, 240), HSL = (0, 0, 240).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemMenuBar">
      <summary>
            System '<b>Menu Bar</b>' color. Specifies the background color for the menu bar when menus appear as flat menus. Default Windows system values: RGB = 0xF0F0F0, RGB = (240, 240, 240), HSL = (0, 0, 240).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemMenuHighlight">
      <summary>
            System '<b>Menu Highlight</b>' color. Specifies the color used to highlight menu items when the menu appears as a flat menu. Default Windows system values: RGB = 0x3399FF, RGB = (51, 153, 255), HSL = (149, 255, 153).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemMenuText">
      <summary>
            System '<b>Menu Text</b>' color. Specifies the color of Text in menus. Default Windows system values: RGB = 0x000000, RGB = (0, 0, 0), HSL = (0, 0, 0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemScrollBar">
      <summary>
            System '<b>Scroll Bar</b>' color. Specifies the scroll bar gray area color. Default Windows system values: RGB = 0xC8C8C8, RGB = (200, 200, 200), HSL = (0, 0, 200).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemWindow">
      <summary>
            System '<b>Window</b>' color. Specifies window background color. Default Windows system values: RGB = 0xFFFFFF, RGB = (255, 255, 255), HSL = (0, 0, 255).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemWindowFrame">
      <summary>
            System '<b>Window Frame</b>' color. Specifies the window frame color. Default Windows system values: RGB = 0x646464, RGB = (100, 100, 100), HSL = (0, 0, 100).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingColorName.SystemWindowText">
      <summary>
            System '<b>Window Text</b>' color. Specifies the color of text in windows. Default Windows system values: RGB = 0x000000, RGB = (0, 0, 0), HSL = (0, 0, 0).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle">
      <summary>
            Represents a text underline style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.None">
      <summary>
            Do not underline the text.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Single">
      <summary>
            Underline the text with a single line of normal thickness.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Double">
      <summary>
            Underline the text with two lines of normal thickness.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Heavy">
      <summary>
        <para>Underline the text with a single, thick line.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Single" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Dotted">
      <summary>
            Underline the text with a single, dotted line of normal thickness.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.DottedHeavy">
      <summary>
        <para>Underline the text with a single, thick, dotted line.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Dotted" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Dash">
      <summary>
            Underline the text with a single, dashed line of normal thickness.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.DashHeavy">
      <summary>
        <para>Underline the text with a single, dashed, thick line.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Dash" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.DashLong">
      <summary>
        <para>Underline the text with a single line consisting of long dashes of normal thickness.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Dash" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.DashLongHeavy">
      <summary>
        <para>Underline the text with a single line consisting of long, thick dashes.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Dash" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.DotDash">
      <summary>
            Underline the text with a single line of normal thickness consisting of repeating dots and dashes.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.DotDashHeavy">
      <summary>
        <para>Underline the text with a single, thick line consisting of repeating dots and dashes.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.DotDash" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.DotDotDash">
      <summary>
            Underline the text with a single line of normal thickness consisting of repeating two dots and dashes.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.DotDotDashHeavy">
      <summary>
        <para>Underline the text with a single, thick line consisting of repeating two dots and dashes.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.DotDotDash" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Wavy">
      <summary>
        <para>Underline the text with a single wavy line of normal thickness.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Single" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.WavyHeavy">
      <summary>
        <para>Underline the text with a single, thick wavy line.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Single" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.WavyDouble">
      <summary>
        <para>Underline the text with two wavy lines of normal thickness.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Double" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.Words">
      <summary>
            Underline just the words and not the spaces between them.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.ExcelFormControl">
      <summary>
            Represents a form control.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ExcelFormControl.MacroName">
      <summary>
            Gets the name of the assigned vba macro to this button.
            </summary>
      <value>
            Assigned vba macro to this button.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ExcelFormControl.ThreeDShading">
      <summary>
            Gets or sets whether 3D effect should be enabled on the current form control.
            </summary>
      <value>
        <see langword="true" />, if 3D effect should be enabled on the current form control, <see langword="false" /> otherwise.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControl.SetMacro(GemBox.Spreadsheet.Vba.VbaModule,System.String)">
      <summary>
            Assigns the given macro to this button.
            </summary>
      <param name="vbaModule">The module that contains the method.</param>
      <param name="methodName">Name of the method that will be assigned to this button.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.Drawing.ExcelFormControl">FormControl</see>s in the worksheet.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.FormControls">ExcelWorksheet.FormControls</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddButton(System.String,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new button to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="text">The text displayed on the button.</param>
      <param name="left">The distance of the left edge of the button from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the button from the top edge of the worksheet.</param>
      <param name="width">The button's width.</param>
      <param name="height">The button's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new button added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddButton(System.String,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new button to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="text">The text displayed on the button.</param>
      <param name="positionFrom">The button's position.</param>
      <param name="width">The button's width.</param>
      <param name="height">The button's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new button added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddButton(System.String,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new button to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="text">The text displayed on the button.</param>
      <param name="positionFromCell">The button's position (for example, "A1").</param>
      <param name="width">The button's width.</param>
      <param name="height">The button's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new button added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddButton(System.String,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new button to the worksheet which moves and sizes with cells.
            </summary>
      <param name="text">The text displayed on the button.</param>
      <param name="positionFrom">The button's position (top-left corner).</param>
      <param name="positionTo">The button's end position (bottom-right corner).</param>
      <returns>A new button added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddButton(System.String,System.String,System.String)">
      <summary>
            Adds a new button to the worksheet which moves and sizes with cells.
            </summary>
      <param name="text">The text displayed on the button.</param>
      <param name="positionFromCell">The button's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The button's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new button added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddComboBox(System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new combo box to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="left">The distance of the left edge of the combo box from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the combo box from the top edge of the worksheet.</param>
      <param name="width">The combo box's width.</param>
      <param name="height">The combo box's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new combo box added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddComboBox(GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new combo box to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="positionFrom">The combo box's position.</param>
      <param name="width">The combo box's width.</param>
      <param name="height">The combo box's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new combo box added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddComboBox(System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new combo box to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="positionFromCell">The combo box's position (for example, "A1").</param>
      <param name="width">The combo box's width.</param>
      <param name="height">The combo box's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new combo box added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddCheckBox(System.String,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new checkbox to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="text">The text displayed next to the checkbox.</param>
      <param name="left">The distance of the left edge of the checkbox from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the checkbox from the top edge of the worksheet.</param>
      <param name="width">The width of the checkbox.</param>
      <param name="height">The height of the checkbox.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new checkbox added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddCheckBox(System.String,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new checkbox to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="text">The text displayed next to the checkbox.</param>
      <param name="positionFrom">The position of the checkbox.</param>
      <param name="width">The width of the checkbox.</param>
      <param name="height">The height of the checkbox.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new checkbox added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddCheckBox(System.String,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new checkbox to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="text">The text displayed next to the checkbox.</param>
      <param name="positionFromCell">The position of the checkbox (for example, "A1").</param>
      <param name="width">The width of the checkbox.</param>
      <param name="height">The height of the checkbox.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new checkbox added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddSpinButton(System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new spin button to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="left">The distance of the left edge of the spin button from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the spin button from the top edge of the worksheet.</param>
      <param name="width">The spin button's width.</param>
      <param name="height">The spin button's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new spin button added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddSpinButton(GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new spin button to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="positionFrom">The spin button's position.</param>
      <param name="width">The spin button's width.</param>
      <param name="height">The spin button's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new spin button added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddSpinButton(System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new spin button to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="positionFromCell">The spin button's position (for example, "A1").</param>
      <param name="width">The spin button's width.</param>
      <param name="height">The spin button's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new spin button added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddSpinButton(GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new spin button to the worksheet which moves and sizes with cells.
            </summary>
      <param name="positionFrom">The spin button's position (top-left corner).</param>
      <param name="positionTo">The spin button's end position (bottom-right corner).</param>
      <returns>A new spin button added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddSpinButton(System.String,System.String)">
      <summary>
            Adds a new spin button to the worksheet which moves and sizes with cells.
            </summary>
      <param name="positionFromCell">The spin button's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The spin button's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new spin button added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddOptionButton(System.String,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new option (radio) button to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="text">The text displayed next to the option button.</param>
      <param name="left">The distance of the left edge of the option button from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the option button from the top edge of the worksheet.</param>
      <param name="width">The option button's width.</param>
      <param name="height">The option button's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new option button added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddOptionButton(System.String,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new option (radio) button to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="text">The text displayed next to the option button.</param>
      <param name="positionFrom">The option button's position.</param>
      <param name="width">The option button's width.</param>
      <param name="height">The option button's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new option button added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddOptionButton(System.String,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new option (radio) button to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="text">The text displayed next to the option button.</param>
      <param name="positionFromCell">The option button's position (for example, "A1").</param>
      <param name="width">The option button's width.</param>
      <param name="height">The option button's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new option button added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddGroupBox(System.String,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new group box to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="text">The text displayed on the group box.</param>
      <param name="left">The distance of the left edge of the group box from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the group box from the top edge of the worksheet.</param>
      <param name="width">The group box's width.</param>
      <param name="height">The group box's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new group box added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddGroupBox(System.String,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new group box to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="text">The text displayed on the group box.</param>
      <param name="positionFrom">The group box's position.</param>
      <param name="width">The group box's width.</param>
      <param name="height">The group box's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new group box added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddGroupBox(System.String,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new group box to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="text">The text displayed on the group box.</param>
      <param name="positionFromCell">The group box's position (for example, "A1").</param>
      <param name="width">The group box's width.</param>
      <param name="height">The group box's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new group box added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddLabel(System.String,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new label to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="text">The text displayed on the label.</param>
      <param name="left">The distance of the left edge of the label from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the label from the top edge of the worksheet.</param>
      <param name="width">The label's width.</param>
      <param name="height">The label's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new label added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddLabel(System.String,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new label to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="text">The text displayed on the label.</param>
      <param name="positionFrom">The label's position.</param>
      <param name="width">The label's width.</param>
      <param name="height">The label's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new label added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddLabel(System.String,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new label to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="text">The text displayed on the label.</param>
      <param name="positionFromCell">The label's position (for example, "A1").</param>
      <param name="width">The label's width.</param>
      <param name="height">The label's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new label added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddLabel(System.String,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new label to the worksheet which moves and sizes with cells.
            </summary>
      <param name="text">The text displayed on the label.</param>
      <param name="positionFrom">The label's position (top-left corner).</param>
      <param name="positionTo">The label's end position (bottom-right corner).</param>
      <returns>A new label added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddLabel(System.String,System.String,System.String)">
      <summary>
            Adds a new label to the worksheet which moves and sizes with cells.
            </summary>
      <param name="text">The text displayed on the label.</param>
      <param name="positionFromCell">The label's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The label's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new label added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddScrollBar(System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new scroll bar to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="left">The distance of the left edge of the scroll bar from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the scroll bar from the top edge of the worksheet.</param>
      <param name="width">The scroll bar's width.</param>
      <param name="height">The scroll bar's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new scroll bar added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddScrollBar(GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new scroll bar to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="positionFrom">The scroll bar's position.</param>
      <param name="width">The scroll bar's width.</param>
      <param name="height">The scroll bar's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new scroll bar added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.ExcelFormControlCollection.AddScrollBar(System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new scroll bar to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="positionFromCell">The scroll bar's position (for example, "A1").</param>
      <param name="width">The scroll bar's width.</param>
      <param name="height">The scroll bar's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new scroll bar added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.FillFormat">
      <summary>
            Represents a base class for fills such as solid, gradient, pattern, etc.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.FillFormat.FillType">
      <summary>
            Gets the type of the fill.
            </summary>
      <value>
            The type of the fill.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.FillFormat.SetNone">
      <summary>
            Sets the fill to none, thus making the area transparent.
            </summary>
      <returns>An instance of a <see cref="T:GemBox.Spreadsheet.Drawing.FillFormat" /> type that represents no fill that was set.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.FillFormat.SetSolid(GemBox.Spreadsheet.Drawing.DrawingColor)">
      <summary>
            Sets the fill to the solid fill.
            </summary>
      <param name="color">The color of the solid fill.</param>
      <returns>
            An instance of a <see cref="T:GemBox.Spreadsheet.Drawing.SolidFillFormat" /> type that was set.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.FillFormat.SetPattern(GemBox.Spreadsheet.Drawing.PatternFillType,GemBox.Spreadsheet.Drawing.DrawingColor,GemBox.Spreadsheet.Drawing.DrawingColor)">
      <summary>
            Sets the fill to the pattern fill.
            </summary>
      <param name="patternType">Type of the pattern fill.</param>
      <param name="foregroundColor">Foreground color of the pattern fill.</param>
      <param name="backgroundColor">Background color of the pattern fill.</param>
      <returns>
            An instance of a <see cref="T:GemBox.Spreadsheet.Drawing.PatternFillFormat" /> type that was set.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.FillFormatType">
      <summary>
            Represents the fill type that can be applied to various objects, such as shapes, text characters, table cells and their outlines, borders and underlines.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.FillFormatType.None">
      <summary>
            No fill. The shape is not filled, thus making its interior transparent.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.FillFormatType.Solid">
      <summary>
            Solid color fill. The shape is filled entirely with the specified color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.FillFormatType.Gradient">
      <summary>
            Gradient fill. The shape is filled with the smooth gradual transition of colors at the specified locations that either follows a line or a path.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.FillFormatType.Picture">
      <summary>
            Picture fill. The shape is filled with the picture that can either be tiled (as a texture) or stretched to fill the available area. This fill type is not supported for outlines, borders and underlines.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.FillFormatType.Pattern">
      <summary>
            Pattern fill. The shape is filled with the repeated pattern of the specified foreground and background color.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.FormControlSelectionType">
      <summary>
            Represents the kind of selection used for the <see cref="T:GemBox.Spreadsheet.Drawing.ListBox" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.FormControlSelectionType.Single">
      <summary>
            The element shall only have one selected item.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.FormControlSelectionType.Multi">
      <summary>
            The element can have multiple items selected by clicking on each item.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.FormControlSelectionType.Extend">
      <summary>
            The element can have multiple items selected by holding a control key and clicking on each item.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.GroupBox">
      <summary>
            Represents a Group Box Form Control
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.GroupBox.Text">
      <summary>
            Gets the text content and formatting associated with this <see cref="T:GemBox.Spreadsheet.Drawing.GroupBox" />.
            </summary>
      <value>
            The text content and formatting associated with this <see cref="T:GemBox.Spreadsheet.Drawing.GroupBox" />.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.HorizontalAlignment">
      <summary>
            Represents an enumeration of available horizontal alignments for text.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.HorizontalAlignment.Left">
      <summary>
            Align text to the left margin.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.HorizontalAlignment.Center">
      <summary>
            Align text in the center.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.HorizontalAlignment.Right">
      <summary>
            Align text to the right margin.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.HorizontalAlignment.Justify">
      <summary>
            Align text so that it is justified across the whole line. Short sentences are not justified.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.HorizontalAlignment.Distributed">
      <summary>
        <para>Distributes the text words across an entire text line.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.HorizontalAlignment.Justify" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.HorizontalAlignment.JustifyLow">
      <summary>
        <para>Aligns the text with an adjusted kashida length for Arabic text.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.HorizontalAlignment.Justify" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.HorizontalAlignment.DistributedThai">
      <summary>
        <para>Distributes Thai text specially, because each character is treated as a word.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.HorizontalAlignment.Justify" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.Label">
      <summary>
            Represents a Label Box Form Control
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.Label.Text">
      <summary>
            Gets the text content and formatting associated with this <see cref="T:GemBox.Spreadsheet.Drawing.Label" />.
            </summary>
      <value>
            The text content and formatting associated with this <see cref="T:GemBox.Spreadsheet.Drawing.Label" />.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.Length">
      <summary>
            Represents a length, distance or a coordinate.
            </summary>
      <remarks>
        <para>
          <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> internally stores its value in an <see cref="T:System.Int64" /> field and internally uses EMU (English Metric Unit) as a unit of measurement.</para>
        <para>EMU (English Metric Unit) can evenly divide in both English and Metric units and can avoid rounding errors during the calculation since it defines an integer based, high precision coordinate system (1" = 914 400 EMU, 1 cm = 360 000 EMU, 1 mm = 36 000 EMU, 1 pt = 12 700 EMU).</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.Length.DefaultUnit">
      <summary>
            Gets or sets the default measurement unit that is applied globally every time <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> is converted from/to a <see cref="T:System.Double" /> and to a <see cref="T:System.String" />.
            </summary>
      <value>
            The default measurement unit.
            </value>
      <remarks>
        <para>Initial value is <see cref="F:GemBox.Spreadsheet.LengthUnit.Point" />.</para>
        <para>This property makes code less verbose and, thus, easier to read and maintain because instead of using <see cref="M:GemBox.Spreadsheet.Drawing.Length.From(System.Double,GemBox.Spreadsheet.LengthUnit)" />, <see cref="M:GemBox.Spreadsheet.Drawing.Length.To(GemBox.Spreadsheet.LengthUnit)" /> and <see cref="M:GemBox.Spreadsheet.Drawing.Length.ToString(GemBox.Spreadsheet.LengthUnit)" /> methods, one can use implicit conversions from/to a <see cref="T:System.Double" /> and to a <see cref="T:System.String" />.</para>
        <para>Since default measurement unit is applied globally (like any other <see langword="static" /> member), it is advisable not to set <see cref="P:GemBox.Spreadsheet.Drawing.Length.DefaultUnit" /> property or use implicit conversions from/to a <see cref="T:System.Double" /> and to a <see cref="T:System.String" /> if <b>GemBox.Spreadsheet</b> is used by various application functions that expect different default measurement unit, especially if usage is multi-threaded.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.From(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Converts a length value in a specified measurement unit to a <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance.
            </summary>
      <param name="value">The length value.</param>
      <param name="unit">The measurement unit.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance that is equivalent to a specified input length in a specified measurement unit.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.To(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Converts this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance to a length value in a specified measurement unit.
            </summary>
      <param name="unit">The measurement unit.</param>
      <returns>A length value that is equivalent to this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance in a specified measurement unit.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.ToString(System.String,System.IFormatProvider,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance in a specified format and a measurement unit by using a specified format provider.
            </summary>
      <param name="format">The format.</param>
      <param name="formatProvider">The format provider.</param>
      <param name="unit">The measurement unit.</param>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance in a specified format and a measurement unit by using a specified format provider.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.ToString(System.String,System.IFormatProvider)">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance in a specified format and a <see cref="P:GemBox.Spreadsheet.Drawing.Length.DefaultUnit">default measurement unit</see> by using a specified format provider.
            </summary>
      <param name="format">The format.</param>
      <param name="formatProvider">The format provider.</param>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance in a specified format and a <see cref="P:GemBox.Spreadsheet.Drawing.Length.DefaultUnit">default measurement unit</see> by using a specified format provider.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.ToString(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance in a specified measurement unit.
            </summary>
      <param name="unit">The measurement unit.</param>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance in a specified measurement unit.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance in a <see cref="P:GemBox.Spreadsheet.Drawing.Length.DefaultUnit">default measurement unit</see>.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance in a default measurement unit.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.CompareTo(GemBox.Spreadsheet.Drawing.Length)">
      <summary>
            Compares the value of this instance to a specified <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> value and returns an integer that indicates whether this instance is less than, equal to, or greater than the specified <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> value.
            </summary>
      <param name="other">The object to compare to the current instance.</param>
      <returns>
        <para>A signed number indicating the relative values of this instance and the <paramref name="other" /> parameter.</para>
        <para>If returned value is less than zero, then this instance is less than <paramref name="other" />; else, if it is zero, then this instance is equal to <paramref name="other" />; else (if it is greater than zero) this instance is greater than <paramref name="other" />.</para>
      </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.Equals(GemBox.Spreadsheet.Drawing.Length)">
      <summary>
            Determines whether the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance.
            </summary>
      <param name="other">The other length to compare with this length instance.</param>
      <returns>
        <see langword="true" /> if the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this length instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> and is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.op_Equality(GemBox.Spreadsheet.Drawing.Length,GemBox.Spreadsheet.Drawing.Length)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.Drawing.Length" />s are equal.
            </summary>
      <param name="first">The first length.</param>
      <param name="second">The second length.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> lengths are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.op_Inequality(GemBox.Spreadsheet.Drawing.Length,GemBox.Spreadsheet.Drawing.Length)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.Drawing.Length" />s are not equal.
            </summary>
      <param name="first">The first length.</param>
      <param name="second">The second length.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> lengths are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.op_LessThan(GemBox.Spreadsheet.Drawing.Length,GemBox.Spreadsheet.Drawing.Length)">
      <summary>
            Determines whether <paramref name="first" /> <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> is less than <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.Drawing.Length" />.
            </summary>
      <param name="first">The first length.</param>
      <param name="second">The second length.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> length is less than <paramref name="second" /> length; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.op_GreaterThan(GemBox.Spreadsheet.Drawing.Length,GemBox.Spreadsheet.Drawing.Length)">
      <summary>
            Determines whether <paramref name="first" /> <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> is greater than <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.Drawing.Length" />.
            </summary>
      <param name="first">The first length.</param>
      <param name="second">The second length.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> length is greater than <paramref name="second" /> length; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.op_Implicit(System.Double)~GemBox.Spreadsheet.Drawing.Length">
      <summary>
            Converts a length value in a <see cref="P:GemBox.Spreadsheet.Drawing.Length.DefaultUnit">default measurement unit</see> to a <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance.
            </summary>
      <param name="value">The length value.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance that is equivalent to a specified input length in a <see cref="P:GemBox.Spreadsheet.Drawing.Length.DefaultUnit">default measurement unit</see>.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.op_Implicit(GemBox.Spreadsheet.Drawing.Length)~System.Double">
      <summary>
            Converts a <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance to a length value in a <see cref="P:GemBox.Spreadsheet.Drawing.Length.DefaultUnit">default measurement unit</see>.
            </summary>
      <param name="value">The length value.</param>
      <returns>A length value that is equivalent to a specified input <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance in a <see cref="P:GemBox.Spreadsheet.Drawing.Length.DefaultUnit">default measurement unit</see>.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.op_Explicit(System.Int64)~GemBox.Spreadsheet.Drawing.Length">
      <summary>
            Converts a length value in an EMU (English Metric Unit) measurement unit to a <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance.
            </summary>
      <param name="value">The length value.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance that is equivalent to a specified input length in an EMU (English Metric Unit) measurement unit.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.Length.op_Explicit(GemBox.Spreadsheet.Drawing.Length)~System.Int64">
      <summary>
            Converts a <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance to a length value in an EMU (English Metric Unit) measurement unit.
            </summary>
      <param name="value">The length value.</param>
      <returns>A length value that is equivalent to a specified input <see cref="T:GemBox.Spreadsheet.Drawing.Length" /> instance in an EMU (English Metric Unit) measurement unit.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.LineArrow">
      <summary>
            Represents decorations which can be added to either the head or the tail of a line.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.LineArrow.ArrowType">
      <summary>
            Gets the line end decoration.
            </summary>
      <value>
            The line end decoration.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.LineArrow.Size">
      <summary>
            Gets the line end size in relation to the line width.
            </summary>
      <value>
            The line end size in relation to the line width.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.LineArrow.#ctor(GemBox.Spreadsheet.Drawing.LineArrowType,GemBox.Spreadsheet.Drawing.LineArrowSize)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" /> structure.
            </summary>
      <param name="arrowType">Line end decoration.</param>
      <param name="size">Line end size in relation to the line width.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.LineArrow.Equals(GemBox.Spreadsheet.Drawing.LineArrow)">
      <summary>
            Determines whether the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" /> is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" /> instance.
            </summary>
      <param name="other">The other line arrow to compare with this line arrow instance.</param>
      <returns>
        <see langword="true" /> if the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" /> is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" /> instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.LineArrow.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this line arrow instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" /> and is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.LineArrow.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.LineArrow.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.LineArrow.op_Equality(GemBox.Spreadsheet.Drawing.LineArrow,GemBox.Spreadsheet.Drawing.LineArrow)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" />s are equal.
            </summary>
      <param name="first">The first line arrow.</param>
      <param name="second">The second line arrow.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> line arrows are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.LineArrow.op_Inequality(GemBox.Spreadsheet.Drawing.LineArrow,GemBox.Spreadsheet.Drawing.LineArrow)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.Drawing.LineArrow" />s are not equal.
            </summary>
      <param name="first">The first line arrow.</param>
      <param name="second">The second line arrow.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> line arrows are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.LineArrowSize">
      <summary>
            Represents the width and the length of the line end decoration (e.g., arrowhead) relative to the width of the line itself.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowSize.Size1">
      <summary>
            Small width and small length.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowSize.Size2">
      <summary>
            Small width and medium length.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowSize.Size3">
      <summary>
            Small width and large length.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowSize.Size4">
      <summary>
            Medium width and small length.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowSize.Size5">
      <summary>
            Medium width and medium length.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowSize.Size6">
      <summary>
            Medium width and large length.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowSize.Size7">
      <summary>
            Large width and small length.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowSize.Size8">
      <summary>
            Large width and medium length.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowSize.Size9">
      <summary>
            Large width and large length.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.LineArrowType">
      <summary>
            Represents the shape decoration that appears at the ends of lines.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowType.NoArrow">
      <summary>
            No end.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowType.Arrow">
      <summary>
            Triangle arrow head.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowType.OpenArrow">
      <summary>
            Line arrow head.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowType.StealthArrow">
      <summary>
            Stealth arrow head.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowType.DiamondArrow">
      <summary>
            Diamond.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineArrowType.OvalArrow">
      <summary>
            Oval.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.LineCapType">
      <summary>
            Represents values that specify how to cap the ends of lines.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineCapType.Square">
      <summary>
            Square protrudes by half line width.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineCapType.Round">
      <summary>
            Rounded ends. Semi-circle protrudes by half line width.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineCapType.Flat">
      <summary>
            Line ends at end point.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.LineCompoundType">
      <summary>
            Represents the compound line type that is to be used for lines with text such as underlines.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineCompoundType.Single">
      <summary>
            Single line: one normal width.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineCompoundType.Double">
      <summary>
            Double lines of equal width.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineCompoundType.ThickThin">
      <summary>
            Double lines: one thick, one thin.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineCompoundType.ThinThick">
      <summary>
            Double lines: one thin, one thick.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineCompoundType.Triple">
      <summary>
            Three lines: thin, thick, thin.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.LineDashType">
      <summary>
            Represents the line dash type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineDashType.Solid">
      <summary>
        <para>Solid</para>
        <para>1</para>
        <para>
            1 - line segment of the same length as the line width,
            0 - space of the same length as the line width.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineDashType.Dot">
      <summary>
        <para>Dot</para>
        <para>1000</para>
        <para>
            1 - line segment of the same length as the line width,
            0 - space of the same length as the line width.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineDashType.Dash">
      <summary>
        <para>Dash</para>
        <para>1111000</para>
        <para>
            1 - line segment of the same length as the line width,
            0 - space of the same length as the line width.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineDashType.DashDot">
      <summary>
        <para>Dash Dot</para>
        <para>11110001000</para>
        <para>
            1 - line segment of the same length as the line width,
            0 - space of the same length as the line width.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineDashType.LongDash">
      <summary>
        <para>Long Dash</para>
        <para>11111111000</para>
        <para>
            1 - line segment of the same length as the line width,
            0 - space of the same length as the line width.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineDashType.LongDashDot">
      <summary>
        <para>Long Dash Dot</para>
        <para>111111110001000</para>
        <para>
            1 - line segment of the same length as the line width,
            0 - space of the same length as the line width.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineDashType.LongDashDotDot">
      <summary>
        <para>Long Dash Dot Dot</para>
        <para>1111111100010001000</para>
        <para>
            1 - line segment of the same length as the line width,
            0 - space of the same length as the line width.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineDashType.RoundDot">
      <summary>
        <para>Round Dot</para>
        <para>10</para>
        <para>
            1 - line segment of the same length as the line width,
            0 - space of the same length as the line width.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineDashType.SquareDot">
      <summary>
        <para>Square Dot</para>
        <para>1110</para>
        <para>
            1 - line segment of the same length as the line width,
            0 - space of the same length as the line width.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineDashType.SystemDashDot">
      <summary>
        <para>System Dash Dot</para>
        <para>111010</para>
        <para>
            1 - line segment of the same length as the line width,
            0 - space of the same length as the line width.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineDashType.SystemDashDotDot">
      <summary>
        <para>System Dash Dot Dot</para>
        <para>11101010</para>
        <para>
            1 - line segment of the same length as the line width,
            0 - space of the same length as the line width.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineDashType.Custom">
      <summary>
        <para>Custom</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.LineFormat">
      <summary>
            Represents an outline style that can be applied to a number of different objects such as shapes and text. 
            The line allows for the specifying of many different types of outlines including even line dashes and bevels.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.LineFormat.Fill">
      <summary>
        <para>Gets or sets the fill of the outline.</para>
        <para>Fill types <see cref="F:GemBox.Spreadsheet.Drawing.FillFormatType.Gradient" />, <see cref="F:GemBox.Spreadsheet.Drawing.FillFormatType.Pattern" /> and <see cref="F:GemBox.Spreadsheet.Drawing.FillFormatType.Picture" /> are currently not supported in PDF, XPS and image formats.</para>
      </summary>
      <value>
            The fill of the outline.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.LineFormat.Width">
      <summary>
        <para>Gets or sets the width to be used for the underline stroke.</para>
        <para>Default value is 0.</para>
      </summary>
      <value>
            The width to be used for the underline stroke.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.LineFormat.CapType">
      <summary>
        <para>Gets or sets the ending caps that should be used for this line. 
            This also affects the ends of line segments for dashed lines.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.LineCapType.Square" />.</para>
      </summary>
      <value>
            The ending caps that should be used for this line. 
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.LineFormat.CompoundType">
      <summary>
        <para>Gets or sets the compound line type to be used for the underline stroke.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.LineCompoundType.Single" />.</para>
        <para>This member is currently not supported in PDF, XPS and image formats.</para>
      </summary>
      <value>
            The compound line type to be used for the underline stroke.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.LineFormat.DashType">
      <summary>
        <para>Gets or sets the dashing scheme that should be used for this line.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.LineDashType.Solid" /> (no dashes).</para>
      </summary>
      <value>
            The dashing scheme that should be used for this line.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.LineFormat.JoinType">
      <summary>
        <para>Gets or sets the line join type that indicates how connected lines are joined.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.LineJoinType.Round" />.</para>
      </summary>
      <value>
            The line join type that indicates how connected lines are joined.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.LineFormat.BeginArrow">
      <summary>
        <para>Gets or sets the decorations added to the head of a line.</para>
      </summary>
      <value>
            The decorations added to the head of a line.
            </value>
      <remarks>
            This property is applicable only on shape paths that are not closed.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.LineFormat.EndArrow">
      <summary>
        <para>Gets or sets the decorations added to the tail of a line.</para>
      </summary>
      <value>
            The decorations added to the tail of a line.
            </value>
      <remarks>
            This property is applicable only on shape paths that are not closed.
            </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.LineJoinType">
      <summary>
            Represents values that specify how the adjacent lines are joined.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineJoinType.Round">
      <summary>
            A round joint specifies that lines joined together have a round join.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineJoinType.Bevel">
      <summary>
            A bevel joint specifies that an angle joint is used to connect lines.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.LineJoinType.Miter">
      <summary>
            A miter joint specifies that a line join shall be mitered.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.ListBox">
      <summary>
            Represents a List Box Form Control
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ListBox.InputRange">
      <summary>
            Gets or sets a CellRange which is used as the input range for this list box.
            </summary>
      <value>
            The CellRange which is used as the input range for this list box.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ListBox.CellLink">
      <summary>
            Gets or sets the cell which holds the value of this list box.
            </summary>
      <value>
            The cell which holds the value of this list box.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ListBox.SelectionType">
      <summary>
            Gets or sets the selection type of this list box.
            </summary>
      <value>
            The selection type of this list box.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ListBox.SelectedValues">
      <summary>
            Gets the selected values in the listbox.
            </summary>
      <value>
            Selected values in the listbox.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ListBox.SelectedIndexes">
      <summary>
            Gets or sets the indexes of the selected items in the listbox.
            </summary>
      <value>
            The index of the selected items in the listbox.
            </value>
      <exception cref="T:System.ArgumentException">
            If <see cref="P:GemBox.Spreadsheet.Drawing.ListBox.SelectionType" /> is <see cref="F:GemBox.Spreadsheet.Drawing.FormControlSelectionType.Single" /> and this property is being set with multiple indexes.
            </exception>
      <remarks>
            Similarly to MS Excel, the indexes are 1-based.
            </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.ListBulletType">
      <summary>
            Represents a bullet character used in a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> that is part of a <see cref="F:GemBox.Spreadsheet.Drawing.ListType.Bullet" /> list.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListBulletType.None">
      <summary>
            Bullet character is absent.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListBulletType.FilledRound">
      <summary>
            Filled round bullet.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListBulletType.HollowRound">
      <summary>
            Hollow round bullet.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListBulletType.FilledSquare">
      <summary>
            Filled square bullet.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListBulletType.HollowSquare">
      <summary>
            Hollow square bullet.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListBulletType.Star">
      <summary>
            Star bullet.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListBulletType.Arrow">
      <summary>
            Arrow bullet.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListBulletType.Checkmark">
      <summary>
            Checkmark bullet.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListBulletType.Custom">
      <summary>
            Custom bullet character.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.ListNumberType">
      <summary>
            Represents an automatic numbering scheme used in a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> that is part of a <see cref="F:GemBox.Spreadsheet.Drawing.ListType.Number" /> list.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListNumberType.None">
      <summary>
            Number is absent.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListNumberType.DecimalPlain">
      <summary>
            1 2 3
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListNumberType.DecimalPeriod">
      <summary>
            1. 2. 3.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListNumberType.DecimalRightParenthesis">
      <summary>
            1) 2) 3)
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListNumberType.UpperRomanPeriod">
      <summary>
            I. II. III.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListNumberType.UpperLetterPeriod">
      <summary>
            A. B. C.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListNumberType.LowerLetterRightParenthesis">
      <summary>
            a) b) c)
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListNumberType.LowerLetterPeriod">
      <summary>
            a. b. c.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListNumberType.LowerRomanPeriod">
      <summary>
            i. ii. iii.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListNumberType.DecimalParentheses">
      <summary>
            (1) (2) (3)
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.ListType">
      <summary>
            Represents a list type of a bulleted or numbered <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListType.None">
      <summary>
        <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> is not part of a list and its content is not preceded by any content.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListType.Bullet">
      <summary>
        <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> is part of a list and its content is preceded by a bullet character.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListType.Picture">
      <summary>
        <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> is part of a list and its content is preceded by a picture bullet.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ListType.Number">
      <summary>
        <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> is part of a list and its content is preceded by a automatically generated number.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.OptionButton">
      <summary>
            Represents an Option (Radio) Button Form Control
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.OptionButton.Checked">
      <summary>
            Gets or sets the value indicating whether this option button is checked.
            </summary>
      <value>
            The value indicating whether this option button is checked.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.OptionButton.CellLink">
      <summary>
            Gets or sets the cell which holds the value of this option button.
            </summary>
      <value>
            The cell which holds the value of this option button.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.OptionButton.Text">
      <summary>
            Gets the text content and formatting associated with this <see cref="T:GemBox.Spreadsheet.Drawing.OptionButton" />.
            </summary>
      <value>
            The text content and formatting associated with this <see cref="T:GemBox.Spreadsheet.Drawing.OptionButton" />.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.PatternFillFormat">
      <summary>
            Represents a fill with a repeated pattern of foreground and background color.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.PatternFillFormat.FillType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.Drawing.FillFormatType.Pattern" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Drawing.FillFormatType.Pattern" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.PatternFillFormat.PatternType">
      <summary>
            Gets or sets the type of the fill pattern.
            </summary>
      <value>
            The type of the fill pattern.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.PatternFillFormat.ForegroundColor">
      <summary>
            Gets or sets the foreground color.
            </summary>
      <value>
            The foreground color.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.PatternFillFormat.BackgroundColor">
      <summary>
            Gets or sets the background color.
            </summary>
      <value>
            The background color.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.PatternFillType">
      <summary>
            Represents a type of pattern fill.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.Drawing.PatternFillFormat.FillType" />
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Cross">
      <summary>
            The '<b>Cross</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.DashedDownwardDiagonal">
      <summary>
            The '<b>Dashed downward diagonal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.DashedHorizontal">
      <summary>
            The '<b>Dashed horizontal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.DashedUpwardDiagonal">
      <summary>
            The '<b>Dashed upward diagonal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.DashedVertical">
      <summary>
            The '<b>Dashed vertical</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.DiagonalBrick">
      <summary>
            The '<b>Diagonal brick</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.DiagonalCross">
      <summary>
            The '<b>Diagonal cross</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Divot">
      <summary>
            The '<b>Divot</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.DarkDownwardDiagonal">
      <summary>
            The '<b>Dark downward diagonal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.DarkHorizontal">
      <summary>
            The '<b>Dark horizontal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.DarkUpwardDiagonal">
      <summary>
            The '<b>Dark upward diagonal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.DarkVertical">
      <summary>
            The '<b>Dark vertical</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.DownwardDiagonal">
      <summary>
            The '<b>Downward diagonal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.DottedDiamond">
      <summary>
            The '<b>Dotted diamond</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.DottedGrid">
      <summary>
            The '<b>Dotted grid</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Horizontal">
      <summary>
            The '<b>Horizontal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.HorizontalBrick">
      <summary>
            The '<b>Horizontal brick</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.LargeCheckerBoard">
      <summary>
            The '<b>Large checker board</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.LargeConfetti">
      <summary>
            The '<b>Large confetti</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.LargeGrid">
      <summary>
            The '<b>Large grid</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.LightDownwardDiagonal">
      <summary>
            The '<b>Light downward diagonal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.LightHorizontal">
      <summary>
            The '<b>Light horizontal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.LightUpwardDiagonal">
      <summary>
            The '<b>Light upward diagonal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.LightVertical">
      <summary>
            The '<b>Light vertical</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.NarrowHorizontal">
      <summary>
            The '<b>Narrow horizontal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.NarrowVertical">
      <summary>
            The '<b>Narrow vertical</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.OutlinedDiamond">
      <summary>
            The '<b>Outlined diamond</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Percent10">
      <summary>
            The '<b>10%</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Percent20">
      <summary>
            The '<b>20%</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Percent25">
      <summary>
            The '<b>25%</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Percent30">
      <summary>
            The '<b>30%</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Percent40">
      <summary>
            The '<b>40%</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Percent5">
      <summary>
            The '<b>5%</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Percent50">
      <summary>
            The '<b>50%</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Percent60">
      <summary>
            The '<b>60%</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Percent70">
      <summary>
            The '<b>70%</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Percent75">
      <summary>
            The '<b>75%</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Percent80">
      <summary>
            The '<b>80%</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Percent90">
      <summary>
            The '<b>90%</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Plaid">
      <summary>
            The '<b>Plaid</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Shingle">
      <summary>
            The '<b>Shingle</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.SmallCheckerBoard">
      <summary>
            The '<b>Small checker board</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.SmallConfetti">
      <summary>
            The '<b>Small confetti</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.SmallGrid">
      <summary>
            The '<b>Small grid</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.SolidDiamond">
      <summary>
            The '<b>Solid diamond</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Sphere">
      <summary>
            The '<b>Sphere</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Trellis">
      <summary>
            The '<b>Trellis</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.UpwardDiagonal">
      <summary>
            The '<b>Upward diagonal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Vertical">
      <summary>
            The '<b>Vertical</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Wave">
      <summary>
            The '<b>Wave</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.WideDownwardDiagonal">
      <summary>
            The '<b>Wide downward diagonal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.WideUpwardDiagonal">
      <summary>
            The '<b>Wide upward diagonal</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.Weave">
      <summary>
            The '<b>Weave</b>' fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PatternFillType.ZigZag">
      <summary>
            The '<b>Zig zag</b>' fill pattern.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.PictureCompressionType">
      <summary>
            Specifies the amount of compression that has been used
            for a particular binary large image or picture (blip).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PictureCompressionType.None">
      <summary>
            No compression was used.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PictureCompressionType.Email">
      <summary>
            Compression size suitable for inclusion with email.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PictureCompressionType.HighQualityPrint">
      <summary>
            Compression size suitable for high quality printing.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PictureCompressionType.Print">
      <summary>
            Compression size suitable for printing.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PictureCompressionType.Screen">
      <summary>
            Compression size suitable for viewing on screen.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.PictureContent">
      <summary>
            Represents a picture that has an associated content that is either embedded in or linked to the workbook file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.PictureContent.Content">
      <summary>
            Gets the picture content (picture data encoded in a particular format) that is either embedded in or linked to the workbook file.
            </summary>
      <value>
            The picture content (picture data encoded in a particular format) that is either embedded in or linked to the workbook file.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.PictureContent.CompressionType">
      <summary>
            Gets the type of the compression.
            </summary>
      <value>
            The type of the compression.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.PictureContent.ContentType">
      <summary>
            Gets the type of the picture content.
            </summary>
      <value>
            The type of the picture content.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.PictureContentType">
      <summary>
            Represents a picture file format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PictureContentType.Unknown">
      <summary>
            Unknown picture file format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PictureContentType.Png">
      <summary>
            Portable Network Graphics (<see href="http://www.libpng.org/pub/png/spec/">PNG</see>) file format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PictureContentType.Jpeg">
      <summary>
            Joint Photographic Experts Group (<see href="https://www.w3.org/Graphics/JPEG/">JPEG</see>) file format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PictureContentType.Tiff">
      <summary>
            Tagged Image File Format (<see href="https://www.adobe.io/open/standards/TIFF.html">TIFF</see>).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PictureContentType.Gif">
      <summary>
            Graphics Interchange Format (<see href="https://www.w3.org/Graphics/GIF/spec-gif89a.txt">GIF</see>)
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.PictureContentType.Pict">
      <summary>
            Legacy native graphics format of Apple's 2D graphics library QuickDraw which is a core part of the classic Apple Macintosh operating system.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.ScrollBar">
      <summary>
            Represents a Scroll Bar Form Control
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ScrollBar.MinimumValue">
      <summary>
            Gets or sets the minimum value that can be produced by this scroll bar.
            </summary>
      <value>
            The minimum value that can be produced by this scroll bar.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ScrollBar.MaximumValue">
      <summary>
            Gets or sets the maximum value that can be produced by this scroll bar.
            </summary>
      <value>
            The maximum value that can be produced by this scroll bar.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ScrollBar.IncrementalChange">
      <summary>
            Gets or sets the increment which is added or subtracted when clicking on this scroll bar.
            </summary>
      <value>
            The increment which is added or subtracted when clicking on this scroll bar.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ScrollBar.PageChange">
      <summary>
            Gets or sets the number of lines to move the scroll bar on a page click.
            </summary>
      <value>
            The number of lines to move the scroll bar on a page click.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ScrollBar.CellLink">
      <summary>
            Gets or sets the cell which holds the value of this scroll bar.
            </summary>
      <value>
            The cell which holds the value of this scroll bar.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.ScrollBar.CurrentValue">
      <summary>
            Gets or sets the value of the scroll bar.
            </summary>
      <value>
            The value of the scroll bar.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.ShapeType">
      <summary>
            Represents a shape's geometry type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.None">
      <summary>None.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Line">
      <summary>Line.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ElbowConnector">
      <summary>Elbow Connector.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.CurvedConnector">
      <summary>Curved Connector.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Rectangle">
      <summary>Rectangle.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.RoundedRectangle">
      <summary>Rounded Rectangle.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.SnipSingleCornerRectangle">
      <summary>Snip Single Corner Rectangle.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.SnipSameSideCornerRectangle">
      <summary>Snip Same Side Corner Rectangle.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.SnipDiagonalCornerRectangle">
      <summary>Snip Diagonal Corner Rectangle.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.SnipAndRoundSingleCornerRectangle">
      <summary>Snip and Round Single Corner Rectangle.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.RoundSingleCornerRectangle">
      <summary>Round Single Corner Rectangle.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.RoundSameSideCornerRectangle">
      <summary>Round Same Side Corner Rectangle.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.RoundDiagonalCornerRectangle">
      <summary>Round Diagonal Corner Rectangle.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Oval">
      <summary>Oval.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.IsoscelesTriangle">
      <summary>Isosceles Triangle.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.RightTriangle">
      <summary>Right Triangle.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Parallelogram">
      <summary>Parallelogram.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Trapezoid">
      <summary>Trapezoid.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Diamond">
      <summary>Diamond.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.RegularPentagon">
      <summary>Regular Pentagon.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Hexagon">
      <summary>Hexagon.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Heptagon">
      <summary>Heptagon.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Octagon">
      <summary>Octagon.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Decagon">
      <summary>Decagon.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Dodecagon">
      <summary>Dodecagon.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Pie">
      <summary>Pie.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Chord">
      <summary>Chord.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Teardrop">
      <summary>Teardrop.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Frame">
      <summary>Frame.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.HalfFrame">
      <summary>Half Frame.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LShape">
      <summary>L-Shape.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.DiagonalStripe">
      <summary>Diagonal Stripe.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Cross">
      <summary>Cross.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Plaque">
      <summary>Plaque.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Can">
      <summary>Can.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Cube">
      <summary>Cube.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Bevel">
      <summary>Bevel.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Donut">
      <summary>Donut.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.NoSymbol">
      <summary>"No" Symbol.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.BlockArc">
      <summary>Block Arc.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FoldedCorner">
      <summary>Folded Corner.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.SmileyFace">
      <summary>Smiley Face.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Heart">
      <summary>Heart.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LightningBolt">
      <summary>Lightning Bolt.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Sun">
      <summary>Sun.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Moon">
      <summary>Moon.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Cloud">
      <summary>Cloud.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Arc">
      <summary>Arc.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.DoubleBracket">
      <summary>Double Bracket.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.DoubleBrace">
      <summary>Double Brace.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LeftBracket">
      <summary>Left Bracket.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.RightBracket">
      <summary>Right Bracket.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LeftBrace">
      <summary>Left Brace.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.RightBrace">
      <summary>Right Brace.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.RightArrow">
      <summary>Right Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LeftArrow">
      <summary>Left Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.UpArrow">
      <summary>Up Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.DownArrow">
      <summary>Down Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LeftRightArrow">
      <summary>Left-Right Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.UpDownArrow">
      <summary>Up-Down Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.QuadArrow">
      <summary>Quad Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LeftRightUpArrow">
      <summary>Left-Right-Up Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.BentArrow">
      <summary>Bent Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.UTurnArrow">
      <summary>U-Turn Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LeftUpArrow">
      <summary>Left-Up Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.BentUpArrow">
      <summary>Bent-Up Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.CurvedRightArrow">
      <summary>Curved Right Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.CurvedLeftArrow">
      <summary>Curved Left Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.CurvedUpArrow">
      <summary>Curved Up Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.CurvedDownArrow">
      <summary>Curved Down Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.StripedRightArrow">
      <summary>Striped Right Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.NotchedRightArrow">
      <summary>Notched Right Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Pentagon">
      <summary>Pentagon.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Chevron">
      <summary>Chevron.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.RightArrowCallout">
      <summary>Right Arrow Callout.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.DownArrowCallout">
      <summary>Down Arrow Callout.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LeftArrowCallout">
      <summary>Left Arrow Callout.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.UpArrowCallout">
      <summary>Up Arrow Callout.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LeftRightArrowCallout">
      <summary>Left-Right Arrow Callout.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.QuadArrowCallout">
      <summary>Quad Arrow Callout.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.CircularArrow">
      <summary>Circular Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Plus">
      <summary>Plus.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Minus">
      <summary>Minus.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Multiply">
      <summary>Multiply.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Division">
      <summary>Division.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Equal">
      <summary>Equal.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.NotEqual">
      <summary>Not Equal.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartProcess">
      <summary>Flowchart: Process.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartAlternateProcess">
      <summary>Flowchart: Alternate Process.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartDecision">
      <summary>Flowchart: Decision.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartData">
      <summary>Flowchart: Data.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartPredefinedProcess">
      <summary>Flowchart: Predefined Process.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartInternalStorage">
      <summary>Flowchart: Internal Storage.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartDocument">
      <summary>Flowchart: Document.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartMultidocument">
      <summary>Flowchart: Multidocument.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartTerminator">
      <summary>Flowchart: Terminator.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartPreparation">
      <summary>Flowchart: Preparation.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartManualInput">
      <summary>Flowchart: Manual Input.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartManualOperation">
      <summary>Flowchart: Manual Operation.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartConnector">
      <summary>Flowchart: Connector.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartOffPageConnector">
      <summary>Flowchart: Off-page Connector.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartCard">
      <summary>Flowchart: Card.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartPunchedTape">
      <summary>Flowchart: Punched Tape.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartSummingJunction">
      <summary>Flowchart: Summing Junction.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartOr">
      <summary>Flowchart: Or.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartCollate">
      <summary>Flowchart: Collate.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartSort">
      <summary>Flowchart: Sort.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartExtract">
      <summary>Flowchart: Extract.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartMerge">
      <summary>Flowchart: Merge.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartStoredData">
      <summary>Flowchart: Stored Data.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartDelay">
      <summary>Flowchart: Delay.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartSequentialAccessStorage">
      <summary>Flowchart: Sequential Access Storage.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartMagneticDisk">
      <summary>Flowchart: Magnetic Disk.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartDirectAccessStorage">
      <summary>Flowchart: Direct Access Storage.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartDisplay">
      <summary>Flowchart: Display.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Explosion1">
      <summary>Explosion 1.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Explosion2">
      <summary>Explosion 2.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Star4Point">
      <summary>4-Point Star.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Star5Point">
      <summary>5-Point Star.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Star6Point">
      <summary>6-Point Star.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Star7Point">
      <summary>7-Point Star.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Star8Point">
      <summary>8-Point Star.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Star10Point">
      <summary>10-Point Star.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Star12Point">
      <summary>12-Point Star.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Star16Point">
      <summary>16-Point Star.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Star24Point">
      <summary>24-Point Star.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Star32Point">
      <summary>32-Point Star.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.UpRibbon">
      <summary>Up Ribbon.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.DownRibbon">
      <summary>Down Ribbon.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.CurvedUpRibbon">
      <summary>Curved Up Ribbon.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.CurvedDownRibbon">
      <summary>Curved Down Ribbon.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.VerticalScroll">
      <summary>Vertical Scroll.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.HorizontalScroll">
      <summary>Horizontal Scroll.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Wave">
      <summary>Wave.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.DoubleWave">
      <summary>Double Wave.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.RectangularCallout">
      <summary>Rectangular Callout.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.RoundedRectangularCallout">
      <summary>Rounded Rectangular Callout.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.OvalCallout">
      <summary>Oval Callout.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.CloudCallout">
      <summary>Cloud Callout.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LineCallout1">
      <summary>Line Callout 1.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LineCallout2">
      <summary>Line Callout 2.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LineCallout3">
      <summary>Line Callout 3.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LineCallout1AccentBar">
      <summary>Line Callout 1 (Accent Bar).</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LineCallout2AccentBar">
      <summary>Line Callout 2 (Accent Bar).</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LineCallout3AccentBar">
      <summary>Line Callout 3 (Accent Bar).</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LineCallout1NoBorder">
      <summary>Line Callout 1 (No Border).</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LineCallout2NoBorder">
      <summary>Line Callout 2 (No Border).</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LineCallout3NoBorder">
      <summary>Line Callout 3 (No Border).</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LineCallout1BorderAndAccentBar">
      <summary>Line Callout 1 (Border and Accent Bar).</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LineCallout2BorderAndAccentBar">
      <summary>Line Callout 2 (Border and Accent Bar).</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LineCallout3BorderAndAccentBar">
      <summary>Line Callout 3 (Border and Accent Bar).</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ActionButtonBackOrPrevious">
      <summary>Action Button: Back or Previous.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ActionButtonForwardOrNext">
      <summary>Action Button: Forward or Next.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ActionButtonBeginning">
      <summary>Action Button: Beginning.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ActionButtonEnd">
      <summary>Action Button: End.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ActionButtonHome">
      <summary>Action Button: Home.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ActionButtonInformation">
      <summary>Action Button: Information.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ActionButtonReturn">
      <summary>Action Button: Return.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ActionButtonMovie">
      <summary>Action Button: Movie.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ActionButtonDocument">
      <summary>Action Button: Document.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ActionButtonSound">
      <summary>Action Button: Sound.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ActionButtonHelp">
      <summary>Action Button: Help.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ActionButtonCustom">
      <summary>Action Button: Custom.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.CurvedConnector2">
      <summary>Curved Connector 2.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.CurvedConnector4">
      <summary>Curved Connector 4.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.CurvedConnector5">
      <summary>Curved Connector 5.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ElbowConnector2">
      <summary>Bent Connector 2.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ElbowConnector4">
      <summary>Bent Connector 4.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ElbowConnector5">
      <summary>Bent Connector 5.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LineInverse">
      <summary>
        <para>Line Inverse.</para>
        <para>Not supported. Use <see cref="F:GemBox.Spreadsheet.Drawing.ShapeType.Line" /> with vertical flip instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.StraightConnector">
      <summary>Straight Connector.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ChartPlus">
      <summary>Chart Plus.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ChartStar">
      <summary>Chart Star.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.ChartX">
      <summary>Chart X.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.CornerTabs">
      <summary>Corner Tabs.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Funnel">
      <summary>Funnel.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Gear6">
      <summary>Gear 6.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Gear9">
      <summary>Gear 9.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.NonIsoscelesTrapezoid">
      <summary>Non-Isosceles Trapezoid.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.PieWedge">
      <summary>Pie Wedge.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.PlaqueTabs">
      <summary>Plaque Tabs.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.SquareTabs">
      <summary>Square Tabs.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LeftCircularArrow">
      <summary>Left Circular Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LeftRightCircularArrow">
      <summary>Left-Right Circular Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.SwooshArrow">
      <summary>Swoosh Arrow.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.UpDownArrowCallout">
      <summary>Up-Down Arrow Callout.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.FlowchartOfflineStorage">
      <summary>Flowchart: Off-line Storage.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.LeftRightRibbon">
      <summary>Left-Right Ribbon.</summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.ShapeType.Custom">
      <summary>Custom.</summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.SolidFillFormat">
      <summary>
            Represents a fill containing of a single color spread uniformly across the entire area.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.SolidFillFormat.FillType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.Drawing.FillFormatType.Solid" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Drawing.FillFormatType.Solid" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.SolidFillFormat.Color">
      <summary>
            Gets or sets the color.
            </summary>
      <value>
            The color.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.SpinButton">
      <summary>
            Represents a Spin Button Form Control
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.SpinButton.MinimumValue">
      <summary>
            Gets or sets the minimum value that can be produced by this spin button.
            </summary>
      <value>
            The minimum value that can be produced by this spin button.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.SpinButton.MaximumValue">
      <summary>
            Gets or sets the maximum value that can be produced by this spin button.
            </summary>
      <value>
            The maximum value that can be produced by this spin button.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.SpinButton.IncrementalChange">
      <summary>
            Gets or sets the increment which is added or subtracted when clicking on this spin button.
            </summary>
      <value>
            The increment which is added or subtracted when clicking on this spin button.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.SpinButton.CellLink">
      <summary>
            Gets or sets the cell which holds the value of this spin button.
            </summary>
      <value>
            The cell which holds the value of this spin button.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.SpinButton.CurrentValue">
      <summary>
            Gets or sets the value of the spin button.
            </summary>
      <value>
            The value of the spin button.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.StrikethroughType">
      <summary>
            Represents a text strikethrough type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.StrikethroughType.None">
      <summary>
            No strikethrough is applied to the text.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.StrikethroughType.Single">
      <summary>
            A single strikethrough is applied to the text.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.StrikethroughType.Double">
      <summary>
            A double strikethrough is applied to the text.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextAutoFit">
      <summary>
            Represents an enumeration of available text fitting options.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextAutoFit.None">
      <summary>
            Text within the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> should not be auto-fit to the bounding box.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextAutoFit.ShrinkTextOnOverflow">
      <summary>
        <para>Text within the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> should be auto-fit to the bounding box by reducing the font size of each <see cref="T:GemBox.Spreadsheet.Drawing.TextRun" /> and line spacing of each <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> in the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" />.</para>
        <para>This value is currently partially supported in PDF, XPS and image formats.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextAutoFit.ResizeShapeToFitText">
      <summary>
        <see cref="T:GemBox.Spreadsheet.ExcelShape" /> should be auto-fit to fully contain the text described within it.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextBox">
      <summary>
            Represents a text content and formatting associated with an object such as a <see cref="T:GemBox.Spreadsheet.ExcelShape" />.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.ExcelShape.Text" />
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBox.Format">
      <summary>
            Gets or sets the text box formatting.
            </summary>
      <value>
            The text box formatting.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBox.Paragraphs">
      <summary>
            Gets the paragraphs contained in this text box.
            </summary>
      <value>
            The paragraphs contained in this text box.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextBox.ToString">
      <summary>
            Returns a concatenation of all paragraph's elements text. 
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextBoxFormat">
      <summary>
            Represents a set of formatting properties that can be applied to a <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.VerticalAlignment">
      <summary>
        <para>Gets or sets the vertical alignment of the text within an object such as a <see cref="T:GemBox.Spreadsheet.ExcelShape" />.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Top" />.</para>
      </summary>
      <value>
            The vertical alignment of the text within an object such as a <see cref="T:GemBox.Spreadsheet.ExcelShape" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.Centered">
      <summary>
        <para>Gets or sets a value indicating the centering of the text box.</para>
        <para>The way it works fundamentally is to determine the smallest possible "bounds box" for the text and then to center that "bounds box" accordingly.
            This is different than <see cref="P:GemBox.Spreadsheet.Drawing.TextParagraphFormat.Alignment" />, which aligns the text within the "bounds box" for the text.</para>
        <para>This property is compatible with all of the different kinds of <see cref="T:GemBox.Spreadsheet.Drawing.VerticalAlignment" />.</para>
        <para>Default value is <see langword="false" />.</para>
        <para>This member is currently not supported in PDF, XPS and image formats.</para>
      </summary>
      <value>
        <see langword="true" /> if the text box is horizontally centered; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.TextDirection">
      <summary>
        <para>Gets or sets the text direction.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.TextDirection.Horizontal" />.</para>
      </summary>
      <value>
            The text direction.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.AutoFit">
      <summary>
        <para>Gets or sets the text auto-fitting setting.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.TextAutoFit.None" />.</para>
      </summary>
      <value>
            The text auto-fitting setting.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.AutoFitShrinkTextFontScale">
      <summary>
        <para>Gets or sets the percentage of the original font size to which each <see cref="T:GemBox.Spreadsheet.Drawing.TextRun" /> in the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> is scaled when <see cref="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.AutoFit" /> is <see cref="F:GemBox.Spreadsheet.Drawing.TextAutoFit.ShrinkTextOnOverflow" />.</para>
        <para>Default value is 1 if <see cref="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.AutoFit" /> is <see cref="F:GemBox.Spreadsheet.Drawing.TextAutoFit.ShrinkTextOnOverflow" />; otherwise, <see cref="F:System.Double.NaN" />.</para>
      </summary>
      <value>
            The percentage of the original font size to which each <see cref="T:GemBox.Spreadsheet.Drawing.TextRun" /> in the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> is scaled when <see cref="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.AutoFit" /> is <see cref="F:GemBox.Spreadsheet.Drawing.TextAutoFit.ShrinkTextOnOverflow" />.
            </value>
      <exception cref="T:System.InvalidOperationException">Property <see cref="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.AutoFitShrinkTextFontScale" /> can be set only if property <see cref="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.AutoFit" /> is <see cref="F:GemBox.Spreadsheet.Drawing.TextAutoFit.ShrinkTextOnOverflow" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between 0 and 1.</exception>
      <remarks>
            In order to auto-fit text within a bounding box it is sometimes necessary to decrease the font size by a certain percentage.
            Using this property the font within a text box can be scaled based on the value provided.
            A value of 1 scales the text to 100%, while a value of 0.01 scales the text to 1%.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.AutoFitShrinkTextLineSpaceReduction">
      <summary>
        <para>Gets or sets the percentage amount by which the line spacing of each <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> in the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> is reduced when <see cref="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.AutoFit" /> is <see cref="F:GemBox.Spreadsheet.Drawing.TextAutoFit.ShrinkTextOnOverflow" />.</para>
        <para>This property applies only to paragraphs with percentage line spacing.</para>
        <para>Default value is 0 if <see cref="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.AutoFit" /> is <see cref="F:GemBox.Spreadsheet.Drawing.TextAutoFit.ShrinkTextOnOverflow" />; otherwise, <see cref="F:System.Double.NaN" />.</para>
      </summary>
      <value>
            The percentage amount by which the line spacing of each <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> in the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> is reduced when <see cref="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.AutoFit" /> is <see cref="F:GemBox.Spreadsheet.Drawing.TextAutoFit.ShrinkTextOnOverflow" />.
            </value>
      <exception cref="T:System.InvalidOperationException">Property <see cref="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.AutoFitShrinkTextLineSpaceReduction" /> can be set only if property <see cref="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.AutoFit" /> is <see cref="F:GemBox.Spreadsheet.Drawing.TextAutoFit.ShrinkTextOnOverflow" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between 0 and 1.</exception>
      <remarks>
            The reduction is applied by subtracting it from the original line spacing value.
            Using this property the vertical spacing between the lines of text can be scaled by a percent amount.
            A value of 1 reduces the line spacing by 100%, while a value of 0.01 reduces the line spacing by one percent.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.InternalMarginLeft">
      <summary>
        <para>Gets or sets the left internal margin of the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> bounding rectangle within a <see cref="T:GemBox.Spreadsheet.ExcelShape" />.</para>
        <para>Default value is 0.1 inches.</para>
      </summary>
      <value>
            The left internal margin of the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> bounding rectangle within a <see cref="T:GemBox.Spreadsheet.ExcelShape" />.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is less than zero.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.InternalMarginTop">
      <summary>
        <para>Gets or sets the top internal margin of the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> bounding rectangle within a <see cref="T:GemBox.Spreadsheet.ExcelShape" />.</para>
        <para>Default value is 0.05 inches.</para>
      </summary>
      <value>
            The top internal margin of the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> bounding rectangle within a <see cref="T:GemBox.Spreadsheet.ExcelShape" />.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is less than zero.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.InternalMarginRight">
      <summary>
        <para>Gets or sets the right internal margin of the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> bounding rectangle within a <see cref="T:GemBox.Spreadsheet.ExcelShape" />.</para>
        <para>Default value is 0.1 inches.</para>
      </summary>
      <value>
            The right internal margin of the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> bounding rectangle within a <see cref="T:GemBox.Spreadsheet.ExcelShape" />.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is less than zero.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.InternalMarginBottom">
      <summary>
        <para>Gets or sets the bottom internal margin of the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> bounding rectangle within a <see cref="T:GemBox.Spreadsheet.ExcelShape" />.</para>
        <para>Default value is 0.05 inches.</para>
      </summary>
      <value>
            The bottom internal margin of the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> bounding rectangle within a <see cref="T:GemBox.Spreadsheet.ExcelShape" />.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is less than zero.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.WrapText">
      <summary>
        <para>Gets or sets a value indicating whether to wrap text in shape.</para>
        <para>Default value is <see langword="true" />.</para>
      </summary>
      <value>
        <see langword="true" /> if words are wrapped within the bounding rectangle; otherwise, <see langword="false" /> if words spill out without paying attention to the bounding rectangle boundaries.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.ColumnNumber">
      <summary>
        <para>Gets or sets the number of columns of text in the bounding rectangle.</para>
        <para>Default value is 1.</para>
        <para>This member is currently not supported in PDF, XPS and image formats.</para>
      </summary>
      <value>
            The number of columns of text in the bounding rectangle.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is less than 1.</exception>
      <remarks>
            When applied to a <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> this property takes the width of the bounding box for the text and divides it by the number of columns specified.
            These columns are then treated as overflow containers in that when the previous column has been filled with text the next column acts as the repository for additional text.
            When all columns have been filled and text still remains then the overflow properties set for this <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" /> are used and the text is reflowed to make room for additional text.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.ColumnSpacing">
      <summary>
        <para>Gets or sets the space between text columns when there is more than 1 column present in the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" />.</para>
        <para>Default value is 0.</para>
        <para>This member is currently not supported in PDF, XPS and image formats.</para>
      </summary>
      <value>
            The space between text columns when there is more than 1 column present in the <see cref="T:GemBox.Spreadsheet.Drawing.TextBox" />.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is less than zero.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.Rotation">
      <summary>
            Specifies the rotation that is being applied to the text within the bounding box. If it not
            specified, the rotation of the accompanying shape is used. If it is specified, then this is
            applied independently from the shape. 
            </summary>
      <value>The rotation of the text.</value>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextDirection">
      <summary>
            Represents an enumeration of available text directions.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextDirection.Horizontal">
      <summary>
            Horizontal text.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextDirection.Rotate90">
      <summary>
            Text is vertical orientation (each line is 90 degrees rotated clockwise, so it goes from top to bottom; each next line is to the left from the previous one).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextDirection.Rotate270">
      <summary>
            Text is vertical orientation (each line is 270 degrees rotated clockwise, so it goes from bottom to top; each next line is to the right from the previous one).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextDirection.Stacked">
      <summary>
        <para>Text is vertical (one letter on top of another).</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.TextDirection.Rotate90" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextDirection.StackedRightToLeft">
      <summary>
        <para>Text is vertical (one letter on top of another) as for <see cref="F:GemBox.Spreadsheet.Drawing.TextDirection.Stacked" /> but should be shown from right to left rather than left to right.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.TextDirection.Rotate90" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextDirection.Rotate90EastAsian">
      <summary>
        <para>A special version of <see cref="F:GemBox.Spreadsheet.Drawing.TextDirection.Rotate90" />, where some fonts are displayed as if rotated by 90 degrees while some fonts (mostly East Asian) are displayed vertical.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.TextDirection.Rotate90" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextDirection.Rotate90Mongolian">
      <summary>
        <para>A special version of <see cref="F:GemBox.Spreadsheet.Drawing.TextDirection.Rotate90" />, where some fonts are displayed as if rotated by 90 degrees while some fonts (mostly East Asian) are displayed vertical.
            The difference between this and the <see cref="F:GemBox.Spreadsheet.Drawing.TextDirection.Rotate90EastAsian" /> is the text flows top down then LEFT RIGHT, instead of RIGHT LEFT.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.TextDirection.Rotate90" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextElement">
      <summary>
            Represents a base class for text elements such as runs, fields, line breaks and unknown text elements.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextElement.Format">
      <summary>
            Gets or sets the text formatting options.
            </summary>
      <value>
            The text formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextElement.ElementType">
      <summary>
            Gets the type of the text element.
            </summary>
      <value>
            The type of the text element.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextElement.Parent">
      <summary>
            Gets the parent text paragraph or <see langword="null" /> if text element was deleted.
            </summary>
      <value>
            The parent text paragraph or <see langword="null" /> if text element was deleted.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextElementCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" />s.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.Drawing.TextParagraph.Elements" />
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextElementCollection.AddRun(System.String)">
      <summary>
            Adds a new run of text to the paragraph.
            </summary>
      <param name="text">The text.</param>
      <returns>The run of text added to the paragraph.</returns>
      <exception cref="T:System.ArgumentException">
            Parameter <paramref name="text" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />, or it contains character '\v', '\r' or '\n'.
            Character '\v' represents a line break and a <see cref="T:GemBox.Spreadsheet.Drawing.TextLineBreak" /> instance should be added instead. Characters '\r' and '\n' represent a paragraph break and a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> instance should be added instead.
            </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextElementCollection.AddLineBreak">
      <summary>
            Adds a new line break to the paragraph.
            </summary>
      <returns>The line break added to the paragraph.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextElementCollection.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" /> at the specified index.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or <paramref name="index" /> is equal to or greater than <see cref="P:GemBox.Spreadsheet.Drawing.TextElementCollection.Count" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextElementCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" />s contained in the collection.
            </summary>
      <value>
            The number of <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" />s contained in the collection.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextElementCollection.Remove(GemBox.Spreadsheet.Drawing.TextElement)">
      <summary>
            Removes the first occurrence of a specific <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" /> from the collection.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" /> to remove from the collection.</param>
      <returns>
        <see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the original collection.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextElementCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" /> at the specified index of the collection.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" /> to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or <paramref name="index" /> is equal to or greater than <see cref="P:GemBox.Spreadsheet.Drawing.TextElementCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextElementCollection.Contains(GemBox.Spreadsheet.Drawing.TextElement)">
      <summary>
            Determines whether a <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" /> is in the collection.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" /> to locate in the collection.</param>
      <returns>
        <see langword="true" /> if <paramref name="item" /> is found in the collection; otherwise, <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextElementCollection.IndexOf(GemBox.Spreadsheet.Drawing.TextElement)">
      <summary>
            Searches for the specified <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" /> and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" /> to locate in the collection.</param>
      <returns>
            The zero-based index of the first occurrence of <paramref name="item" /> within the entire collection, if found; otherwise, -1.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextElementCollection.Clear">
      <summary>
            Removes all <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" />s from the collection.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextElementCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.Drawing.TextElementCollection" />.
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextElementType">
      <summary>
            Represents a text element type enumeration.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextElementType.Run">
      <summary>
        <see cref="T:GemBox.Spreadsheet.Drawing.TextRun" /> element.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextElementType.LineBreak">
      <summary>
        <see cref="T:GemBox.Spreadsheet.Drawing.TextLineBreak" /> element.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextElementType.Field">
      <summary>
        <see cref="T:GemBox.Spreadsheet.Drawing.TextField" /> element.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextField">
      <summary>
            Represents a text field which contains generated text that the application should update periodically.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextField.ElementType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.Drawing.TextElementType.Field" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Drawing.TextElementType.Field" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextField.Text">
      <summary>
            Gets or sets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextField.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.TextField" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.TextField" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextFormat">
      <summary>
            Represents a group of text formatting options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.Font">
      <summary>
            Gets or sets the font to be used on characters within the text.
            </summary>
      <value>
            The font to be used on characters within the text.
            </value>
      <exception cref="T:System.ArgumentException">Value is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.Bold">
      <summary>
        <para>Gets or sets a value indicating whether the text is formatted as bold.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> if the text is formatted as bold; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.Italic">
      <summary>
        <para>Gets or sets a value indicating whether the text is formatted as italic.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> if the text is formatted as italic; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.Size">
      <summary>
            Gets or sets the text size.
            </summary>
      <value>
            The text size.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between 1 pt and 4000 pt (inclusive).</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.UnderlineStyle">
      <summary>
        <para>Gets or sets the text underline style.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.DrawingUnderlineStyle.None" />.</para>
      </summary>
      <value>
            The text underline style.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.Strikethrough">
      <summary>
        <para>Gets or sets the text strikethrough.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.StrikethroughType.None" />.</para>
      </summary>
      <value>
            The text strikethrough.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.Offset">
      <summary>
        <para>Gets or sets the offset for both the superscript and subscript fonts. Positive value indicates superscript and negative value indicates subscript.
            The size is specified using a percentage where 0.01 is equal to 1 percent of the font size and 1 is equal to 100 percent font of the font size.</para>
        <para>Default value is 0.</para>
        <para>This member is currently partially supported in PDF, XPS and image formats. All positive values are exported in the same superscript position and all negative values are exported in the same subscript position.</para>
      </summary>
      <value>
            The offset for both the superscript and subscript fonts.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between -1 and 1 (inclusive).</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.Caps">
      <summary>
        <para>Gets or sets the capitalization that is to be applied to the text.
            This is a render-only modification and does not affect the actual characters stored in the text.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.CapsType.None" />.</para>
      </summary>
      <value>
            The capitalization that is to be applied to the text.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.EqualizeCharacterHeight">
      <summary>
        <para>Gets or sets the normalization of height that is to be applied to the text.
            This is a render-only modification and does not affect the actual characters stored in the text.</para>
        <para>Default value is <see langword="false" />.</para>
        <para>This member is currently not supported in PDF, XPS and image formats.</para>
      </summary>
      <value>
        <see langword="true" /> if character heights are equalized; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.Spacing">
      <summary>
        <para>Gets or sets the spacing between characters within the text.
            Positive value indicates expanded (loose) spacing and negative value indicates condensed (tight) spacing.</para>
        <para>Default value is 0.</para>
        <para>This member is currently not supported in PDF, XPS and image formats.</para>
      </summary>
      <value>
            The spacing between characters within the text.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between -4000 pt and 4000 pt (inclusive).</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.Kerning">
      <summary>
        <para>Gets or sets the minimum font size at which character kerning occurs.</para>
        <para>This member is currently not supported in PDF, XPS and image formats.</para>
      </summary>
      <value>
            The minimum font size at which character kerning occurs.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between 0 and 4000 pt (inclusive).</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.Fill">
      <summary>
            Gets or sets the fill.
            </summary>
      <value>
            The fill.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.Outline">
      <summary>
            Gets or sets the outline.
            </summary>
      <value>
            The outline.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextFormat.UnderlineFill">
      <summary>
            Gets or sets the underline fill.
            </summary>
      <value>
            The underline fill.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextLineBreak">
      <summary>
            Represents a vertical line break.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextLineBreak.ElementType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.Drawing.TextElementType.LineBreak" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Drawing.TextElementType.LineBreak" /> value.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextLineBreak.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.TextLineBreak" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.TextLineBreak" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextListFormat">
      <summary>
            Represents a set of formatting properties related to bulleted or numbered lists that can be applied to a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextListFormat.ListType">
      <summary>
        <para>Gets the type of the list.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.ListType.None" />.</para>
        <para>Use members <see cref="P:GemBox.Spreadsheet.Drawing.TextListFormat.NumberType" />, <see cref="P:GemBox.Spreadsheet.Drawing.TextListFormat.BulletType" />, <see cref="P:GemBox.Spreadsheet.Drawing.TextListFormat.BulletCharacter" /> or <see cref="M:GemBox.Spreadsheet.Drawing.TextListFormat.SetBulletPicture(System.IO.Stream,GemBox.Spreadsheet.Drawing.PictureContentType)" /> to set list type.</para>
      </summary>
      <value>
            The type of the list.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextListFormat.Level">
      <summary>
        <para>Gets or sets the list indent level.</para>
        <para>Default value is 0.</para>
      </summary>
      <value>
            The list indent level.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between 0 and 8 (inclusive).</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextListFormat.NumberType">
      <summary>
        <para>Gets or sets the numbering scheme of the numbered list.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.ListNumberType.None" />.</para>
        <para>This allows specifying formats other than strictly numbers.
            For instance, a set of bullets can be represented by a series of Roman numerals instead of the standard 1,2,3, etc. number set.</para>
      </summary>
      <value>
            The numbering scheme of the numbered list.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextListFormat.NumberStartAt">
      <summary>
        <para>Gets or sets the number that starts a given sequence of a numbered list.</para>
        <para>Default value is 1 if <see cref="P:GemBox.Spreadsheet.Drawing.TextListFormat.ListType" /> is <see cref="F:GemBox.Spreadsheet.Drawing.ListType.Number" />; otherwise, -1.</para>
        <para>When the numbering is alphabetical, the number should map to the appropriate letter.
            For instance 1 maps to 'a', 2 to 'b' and so on.
            If the numbers are larger than 26, then multiple letters should be used.
            For instance 27 should be represented as 'aa' and similarly 53 should be 'aaa'.</para>
      </summary>
      <value>
            The number that starts a given sequence of a numbered list.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between 1 and 32767 (inclusive).</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextListFormat.BulletType">
      <summary>
        <para>Gets or sets the bullet scheme of the bulleted list.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.ListBulletType.None" />.</para>
        <para>This allows specifying character and font of predefined list bullets.</para>
      </summary>
      <value>
            The bullet scheme of the bulleted list.
            </value>
      <exception cref="T:System.ArgumentException">Value <see cref="F:GemBox.Spreadsheet.Drawing.ListBulletType.Custom" /> is not supported. Set <see cref="P:GemBox.Spreadsheet.Drawing.TextListFormat.BulletCharacter" /> property instead.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextListFormat.BulletCharacter">
      <summary>
        <para>Gets or sets the character to be used in place of the standard bullet point.</para>
        <para>Default value is <see cref="F:System.String.Empty" />.</para>
      </summary>
      <value>
            The character to be used in place of the standard bullet point.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextListFormat.BulletPicture">
      <summary>
        <para>Gets or sets the picture to be applied to a set of bullets.</para>
        <para>Default value is <see langword="null" />.</para>
      </summary>
      <value>
            The picture to be applied to a set of bullets.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextListFormat.Color">
      <summary>
            Gets or sets the color to be used on bullet characters within a given <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </summary>
      <value>
            The color to be used on bullet characters within a given <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextListFormat.Size">
      <summary>
            Gets or sets the absolute size to be used on bullet characters within a given <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </summary>
      <value>
            The absolute size to be used on bullet characters within a given <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between 1 pt and 4000 pt (inclusive).</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextListFormat.RelativeSize">
      <summary>
            Gets or sets the size in percentage of the surrounding text to be used on bullet characters within a given <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </summary>
      <value>
            The size in percentage of the surrounding text to be used on bullet characters within a given <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between 25% and 400% (inclusive).</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextListFormat.Font">
      <summary>
            Gets or sets the font to be used on bullet characters within a given <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </summary>
      <value>
            The font to be used on bullet characters within a given <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </value>
      <exception cref="T:System.ArgumentException">Value is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextListFormat.SetBulletPicture(System.IO.Stream,GemBox.Spreadsheet.Drawing.PictureContentType)">
      <summary>
            Sets the bullet picture.
            </summary>
      <param name="stream">The picture stream.</param>
      <param name="contentType">Content type of the picture stream.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="contentType" /> is <see cref="F:GemBox.Spreadsheet.Drawing.PictureContentType.Unknown" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextListFormat.SetBulletPicture(System.IO.Stream,System.String)">
      <summary>
            Sets the bullet picture.
            </summary>
      <param name="stream">The picture stream.</param>
      <param name="contentType">Content type (MIME type) of the picture stream.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="contentType" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextParagraph">
      <summary>
            Represents a paragraph of text.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextParagraph.Elements">
      <summary>
            Gets the paragraph text elements.
            </summary>
      <value>
            The paragraph text elements.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextParagraph.Format">
      <summary>
            Gets or sets the paragraph's formatting options.
            </summary>
      <value>
            The paragraph's formatting options.
            </value>
      <remarks>
        <para>This property always returns a new instance of a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraphFormat" /> that points to data associated with this paragraph.
            This reduces memory footprint since simpler internal structures can be used to hold the data and execution time increase is negligible since Garbage Collector has a very good performance for a short-lived (Generation 0) objects.</para>
        <para>When setting a value, instance of a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraphFormat" /> won't actually be stored in this paragraph, but the data to which the instance points to will be copied. This enables easy copying of complex properties from one text element to another.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextParagraph.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextParagraphCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />s.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.Drawing.TextBox.Paragraphs" />
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextParagraphCollection.Item(System.Int32)">
      <summary>
            Gets  the <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> at the specified index.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or <paramref name="index" /> is equal to or greater than <see cref="P:GemBox.Spreadsheet.Drawing.TextParagraphCollection.Count" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextParagraphCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />s contained in the collection.
            </summary>
      <value>
            The number of <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />s contained in the collection.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextParagraphCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraphCollection" />.
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the collection.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextParagraphCollection.Add">
      <summary>
            Adds a new paragraph to the text box.
            </summary>
      <returns>The paragraph added to the text box.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextParagraphCollection.Remove(GemBox.Spreadsheet.Drawing.TextParagraph)">
      <summary>
            Removes the first occurrence of a specific <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> from the collection.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> to remove from the collection.</param>
      <returns>
        <see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the original collection.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextParagraphCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> at the specified index of the collection.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or <paramref name="index" /> is equal to or greater than <see cref="P:GemBox.Spreadsheet.Drawing.TextParagraphCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextParagraphCollection.Contains(GemBox.Spreadsheet.Drawing.TextParagraph)">
      <summary>
            Determines whether a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> is in the collection.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> to locate in the collection.</param>
      <returns>
        <see langword="true" /> if <paramref name="item" /> is found in the collection; otherwise, <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextParagraphCollection.IndexOf(GemBox.Spreadsheet.Drawing.TextParagraph)">
      <summary>
            Searches for the specified <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" /> to locate in the collection.</param>
      <returns>
            The zero-based index of the first occurrence of <paramref name="item" /> within the entire collection, if found; otherwise, -1.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextParagraphCollection.Clear">
      <summary>
            Removes all <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />s from the collection.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextParagraphFormat">
      <summary>
            Represents a set of formatting properties that can be applied to a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextParagraphFormat.Alignment">
      <summary>
        <para>Gets or sets the alignment that is to be applied to the paragraph.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.Drawing.HorizontalAlignment.Left" />.</para>
      </summary>
      <value>
            The alignment that is to be applied to the paragraph.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextParagraphFormat.IndentationBeforeText">
      <summary>
        <para>Gets or sets the indentation before text of the <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.</para>
        <para>This is specified in addition to the <see cref="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.InternalMarginLeft" /> and applies only to this <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            That is the <see cref="P:GemBox.Spreadsheet.Drawing.TextBoxFormat.InternalMarginLeft" /> and the <see cref="P:GemBox.Spreadsheet.Drawing.TextParagraphFormat.IndentationBeforeText" /> are additive with respect to the text position.</para>
        <para>Default value is 0.</para>
      </summary>
      <value>
            The indentation before text of the <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between 0 and 142.24 cm.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextParagraphFormat.IndentationSpecial">
      <summary>
        <para>Gets or sets the special indentation that is applied to the first line of text in the <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.</para>
        <para>Positive value specifies <i>First line</i> indentation, negative values specifies <i>Hanging</i> indentation and value of zero is considered to be at the same location as <see cref="P:GemBox.Spreadsheet.Drawing.TextParagraphFormat.IndentationBeforeText" /> property.</para>
        <para>Default value is 0.</para>
      </summary>
      <value>
            The special indentation that is applied to the first line of text in the <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between -142.24 cm and 142.24 cm.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextParagraphFormat.SpacingBefore">
      <summary>
        <para>Gets or sets the amount of vertical white space that is present before a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />. This space is specified in either percentage or absolute value via <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> structure.</para>
        <para>Default value is equal to <see cref="F:GemBox.Spreadsheet.Drawing.TextSpacing.None" />.</para>
        <para>Percentage based value is currently not supported in PDF, XPS and image formats and 0 point value is exported instead.</para>
      </summary>
      <value>
            The amount of vertical white space that is present before a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextParagraphFormat.SpacingAfter">
      <summary>
        <para>Gets or sets the amount of vertical white space that is present after a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />. This space is specified in either percentage or absolute value via <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> structure.</para>
        <para>Default value is equal to <see cref="F:GemBox.Spreadsheet.Drawing.TextSpacing.None" />.</para>
        <para>Percentage based value is currently not supported in PDF, XPS and image formats and 0 point value is exported instead.</para>
      </summary>
      <value>
            The amount of vertical white space that is present after a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextParagraphFormat.SpacingLine">
      <summary>
        <para>Gets or sets the vertical line spacing that is to be used within a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />. This can be specified in two different ways, percentage spacing and absolute spacing via <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> structure.</para>
        <para>Default value is equal to <see cref="F:GemBox.Spreadsheet.Drawing.TextSpacing.Single" />.</para>
      </summary>
      <value>
            The vertical line spacing that is to be used within a <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextParagraphFormat.RightToLeft">
      <summary>
            When true, this is a right-to-left paragraph.
            </summary>
      <value>
        <see langword="true" /> if this is right-to-left paragraph; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextParagraphFormat.List">
      <summary>
            Gets the paragraph's list (bulleted or numbered) formatting options.
            </summary>
      <value>
            The paragraph's list (bulleted or numbered) formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextParagraphFormat.Character">
      <summary>
        <para>Gets or sets the default character formatting options for all <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" />s within a containing <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.</para>
        <para>These options are used when child <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" /> doesn't have a specific character formatting options from <see cref="P:GemBox.Spreadsheet.Drawing.TextElement.Format" /> specified. </para>
      </summary>
      <value>
            The default character formatting options for all <see cref="T:GemBox.Spreadsheet.Drawing.TextElement" />s within a containing <see cref="T:GemBox.Spreadsheet.Drawing.TextParagraph" />.
            </value>
      <remarks>
        <para>This property always returns a new instance of a <see cref="T:GemBox.Spreadsheet.Drawing.TextFormat" /> that points to data associated with this paragraph formatting.
            This reduces memory footprint since simpler internal structures can be used to hold the data and execution time increase is negligible since Garbage Collector has a very good performance for a short-lived (Generation 0) objects.</para>
      </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextRun">
      <summary>
            Represents a run of text.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextRun.ElementType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.Drawing.TextElementType.Run" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.Drawing.TextElementType.Run" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextRun.Text">
      <summary>
            Gets or sets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextRun.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.TextRun" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.TextRun" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.TextSpacing">
      <summary>
            Represents inter-paragraph and inter-line spacing specified either in percentages of the text size or as an absolute value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextSpacing.None">
      <summary>
            Text spacing is absent (zero).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextSpacing.Single">
      <summary>
            Text spacing that is equivalent to 100% of the text size.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextSpacing.OnePointFiveLines">
      <summary>
            Text spacing that is equivalent to 150% of the text size.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.TextSpacing.Double">
      <summary>
            Text spacing that is equivalent to 200% of the text size.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextSpacing.Exactly(GemBox.Spreadsheet.Drawing.Length)">
      <summary>
            Creates a text spacing instance from the specified absolute value.
            </summary>
      <param name="value">The absolute value of the text spacing.</param>
      <returns>A text spacing instance that represents the specified absolute text spacing.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument is not between 0 and 55.88 cm.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextSpacing.Multiple(System.Double)">
      <summary>
        <para>Creates a text spacing instance from the specified percentage value.</para>
        <para>
            If <paramref name="percent" /> parameter is equal to 1, then returned text spacing is equal to <see cref="F:GemBox.Spreadsheet.Drawing.TextSpacing.Single" />.
            If <paramref name="percent" /> parameter is equal to 1.5, then returned text spacing is equal to <see cref="F:GemBox.Spreadsheet.Drawing.TextSpacing.OnePointFiveLines" />.
            If <paramref name="percent" /> parameter is equal to 2, then returned text spacing is equal to <see cref="F:GemBox.Spreadsheet.Drawing.TextSpacing.Double" />.
            </para>
      </summary>
      <param name="percent">The percentage value of the text spacing.</param>
      <returns>A text spacing instance that represents the specified percentage text spacing.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument is not between 0 and 10 (exclusive).</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextSpacing.Value">
      <summary>
            Gets the text spacing value.
            </summary>
      <value>
            The text spacing value.
            </value>
      <exception cref="T:System.InvalidOperationException">Text spacing is specified in percentages.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextSpacing.Percent">
      <summary>
            Gets the text spacing percentage.
            </summary>
      <value>
            The text spacing percentage.
            </value>
      <exception cref="T:System.InvalidOperationException">Text spacing is not specified in percentages.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Drawing.TextSpacing.IsPercent">
      <summary>
            Gets a value indicating whether this text spacing is specified in percentages.
            </summary>
      <value>
        <see langword="true" /> if this text spacing is specified in percentages; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextSpacing.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextSpacing.Equals(GemBox.Spreadsheet.Drawing.TextSpacing)">
      <summary>
            Determines whether the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> instance.
            </summary>
      <param name="other">The other text spacing to compare with this text spacing instance.</param>
      <returns>
        <see langword="true" /> if the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextSpacing.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this text spacing instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> and is equal to this <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextSpacing.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextSpacing.op_Equality(GemBox.Spreadsheet.Drawing.TextSpacing,GemBox.Spreadsheet.Drawing.TextSpacing)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" />s are equal.
            </summary>
      <param name="first">The first text spacing.</param>
      <param name="second">The second text spacing.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> text spacings are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Drawing.TextSpacing.op_Inequality(GemBox.Spreadsheet.Drawing.TextSpacing,GemBox.Spreadsheet.Drawing.TextSpacing)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.Drawing.TextSpacing" />s are not equal.
            </summary>
      <param name="first">The first text spacing.</param>
      <param name="second">The second text spacing.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> text spacings are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Drawing.VerticalAlignment">
      <summary>
            Represents an enumeration of available vertical alignments for text.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Top">
      <summary>
            Align the text to the top of the bounding rectangle.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Middle">
      <summary>
            Align the text to the middle of the bounding rectangle.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Bottom">
      <summary>
            Align the text to the bottom of the bounding rectangle.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Justify">
      <summary>
        <para>Anchor the text so that it is justified vertically.</para>
        <para>When text is horizontal, this spaces out the actual lines of text and is almost always identical in behavior to <see cref="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Distributed" /> (special case: if only 1 line, then aligned to <see cref="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Top" />).</para>
        <para>When text is vertical, then it justifies the letters vertically. This is different than <see cref="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Distributed" />, because in some cases such as very little text in a line, it does not justify.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Middle" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Distributed">
      <summary>
        <para>Align the text so that it is distributed vertically.</para>
        <para>When text is horizontal, this spaces out the actual lines of text and is almost always identical in behavior to <see cref="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Justify" /> (special case: if only 1 line, then aligned to <see cref="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Middle" />).</para>
        <para>When text is vertical, then it distributes the letters vertically. This is different than <see cref="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Justify" />, because it always forces distribution of the words, even if there are only one or two words in a line.</para>
        <para>This value is currently not supported in PDF, XPS and image formats and <see cref="F:GemBox.Spreadsheet.Drawing.VerticalAlignment.Middle" /> value is exported instead.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DynamicFilter">
      <summary>
            Represents a dynamic filter criteria that can change, either with the data itself (e.g., "above average") or with the current system date (e.g., show values for "today"). 
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-autofilter/112">Excel AutoFiltering example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.DynamicFilter.DynamicFilterType">
      <summary>
            Gets or sets the dynamic filter type.
            </summary>
      <value>
            The dynamic filter type.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.DynamicFilter.FilterType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.FilterType.Dynamic" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.FilterType.Dynamic" /> value.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.DynamicFilter.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.DynamicFilterType">
      <summary>
            Represents a dynamic filter type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Null">
      <summary>
            Common filter type not available.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.AboveAverage">
      <summary>
            Shows values that are above average.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.BelowAverage">
      <summary>
            Shows values that are below average.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.LastWeek">
      <summary>
            Shows last week's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.LastMonth">
      <summary>
            Shows last month's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.LastQuarter">
      <summary>
            Shows last quarter's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.LastYear">
      <summary>
            Shows last year's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.ThisWeek">
      <summary>
            Shows this week's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.ThisMonth">
      <summary>
            Shows this month's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.ThisQuarter">
      <summary>
            Shows this quarter's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.ThisYear">
      <summary>
            Shows this year's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.NextWeek">
      <summary>
            Shows next week's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.NextMonth">
      <summary>
            Shows next month's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.NextQuarter">
      <summary>
            Shows next quarter's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.NextYear">
      <summary>
            Shows next year's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Yesterday">
      <summary>
            Shows yesterday's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Today">
      <summary>
            Shows today's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Tomorrow">
      <summary>
            Shows tomorrow's dates.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.YearToDate">
      <summary>
            Shows the dates between the beginning of the year and today, inclusive.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Month1">
      <summary>
            Shows the dates that are in January, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Month2">
      <summary>
            Shows the dates that are in February, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Month3">
      <summary>
            Shows the dates that are in March, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Month4">
      <summary>
            Shows the dates that are in April, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Month5">
      <summary>
            Shows the dates that are in May, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Month6">
      <summary>
            Shows the dates that are in June, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Month7">
      <summary>
            Shows the dates that are in July, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Month8">
      <summary>
            Shows the dates that are in August, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Month9">
      <summary>
            Shows the dates that are in September, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Month10">
      <summary>
            Shows the dates that are in October, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Month11">
      <summary>
            Shows the dates that are in November, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Month12">
      <summary>
            Shows the dates that are in December, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Quarter1">
      <summary>
            Shows the dates that are in the 1st quarter, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Quarter2">
      <summary>
            Shows the dates that are in the 2nd quarter, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Quarter3">
      <summary>
            Shows the dates that are in the 3rd quarter, regardless of year.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DynamicFilterType.Quarter4">
      <summary>
            Shows the dates that are in the 4th quarter, regardless of year.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelCell">
      <summary>
            Excel cell provides access to a single worksheet cell or to a merged range if the cell is merged.
            </summary>
      <remarks>
        <para>Merged range is created by using <see cref="P:GemBox.Spreadsheet.CellRange.Merged">CellRange.Merged</see> property. 
            See the property documentation for more information on merging.</para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellRange.Merged">CellRange.Merged</seealso>
      <seealso cref="P:GemBox.Spreadsheet.ExcelCell.MergedRange" />
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Worksheet">
      <summary>
            Gets the parent worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Row">
      <summary>
            Gets row of the cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Column">
      <summary>
            Gets column of the cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Value">
      <summary>
            Gets or sets value of this cell or of merged range if this cell is merged.
            </summary>
      <remarks>
        <para>Exception is thrown if value for the set is not of supported type (See 
            <see cref="M:GemBox.Spreadsheet.ExcelFile.SupportsType(System.Type)">ExcelFile.SupportsType</see> for details).</para>
        <para>Note that the fact some type is supported doesn't mean it is written to Excel file in the native format. As
            Microsoft Excel has just few basic types, the object of supported type will be converted to a similar excel type. 
            If similar excel type doesn't exist, value is written as a string value.</para>
        <para>If the value of this property is of <see cref="T:System.DateTime" /> type and 
            <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> number format is not set, ISO date/time 
            format will be used as <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat">CellStyle.NumberFormat</see> 
            value.</para>
      </remarks>
      <exception cref="T:System.NotSupportedException">Value is not supported.</exception>
      <seealso cref="P:GemBox.Spreadsheet.CellRange.Merged">CellRange.Merged</seealso>
      <seealso cref="P:GemBox.Spreadsheet.ExcelCell.MergedRange" />
      <seealso cref="M:GemBox.Spreadsheet.ExcelFile.SupportsType(System.Type)">ExcelFile.SupportsType</seealso>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat">CellStyle.NumberFormat</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.ValueType">
      <summary>
            Gets the cell value type.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.BoolValue">
      <summary>
            Gets the boolean value of this cell or of merged range if this cell is merged.
            </summary>
      <returns>The boolean value.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.IntValue">
      <summary>
            Gets the integer value of this cell or of merged range if this cell is merged.
            </summary>
      <returns>The integer value.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.DoubleValue">
      <summary>
            Gets the double value of this cell or of merged range if this cell is merged.
            </summary>
      <returns>The double value.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.DateTimeValue">
      <summary>
            Gets the DateTime value of this cell or of merged range if this cell is merged.
            </summary>
      <returns>The DateTime value.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.StringValue">
      <summary>
            Gets the string value of this cell or of merged range if this cell is merged.
            </summary>
      <returns>The string value.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Comment">
      <summary>
            Gets or sets cell comment.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Hyperlink">
      <summary>
            Gets or sets cell hyperlink.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Formula">
      <summary>
            Gets or sets cell formula string.
            </summary>
      <remarks>
        <para>In XLSX files, reading and writing of all formulas are supported.</para>
        <para>In XLS files, reading and writing of all common and most of the advanced formulas are supported.</para>
        <para>In XLSB files, reading and writing of all common and most of the advanced formulas are supported.</para>
        <para>In ODS files, reading and writing of all formulas are supported, however, OpenOffice formulas don't have the same syntax as Excel formulas.</para>
        <para>In CSV files, reading of all formulas is supported.</para>
        <para>
            When adding formulas in new versions of Excel, it often automatically interprets formulas as dynamic array formulas.
            You can consider using the <see cref="M:GemBox.Spreadsheet.ExcelCell.SetDynamicArrayFormula(System.String)" /> method to set the formula instead of using this property.
            </para>
        <para>For more information on formulas, consult Microsoft Excel documentation.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.FormulaR1C1">
      <summary>
            Gets or sets a formula string in R1C1 notation.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetArrayFormula(System.String,System.Int32,System.Int32)">
      <summary>
            Sets the array formula (also known as CSE formula) to the range of cells.
            </summary>
      <param name="formula">The array formula.</param>
      <param name="rowCount">The number of rows that should be populated with the result of the array formula.</param>
      <param name="columnCount">The number of columns that should be populated with the result of the array formula.</param>
      <seealso href="https://support.microsoft.com/en-us/office/guidelines-and-examples-of-array-formulas-7d94a64e-3ff3-4686-9372-ecfd5caa57c7" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetDynamicArrayFormula(System.String)">
      <summary>
            Sets the dynamic array formula. Dynamic array formulas spill the result of the formula to neighbouring cells
            and are recommended as a replacement for array formulas in newer versions of MS Excel.
            </summary>
      <param name="formula">The dynamic array formula.</param>
      <remarks>
            Dynamic array formulas are fully supported only in Excel 365, Excel 2021, and newer versions.
            Dynamic array formulas opened in Excel 2019 or older will be shown as legacy array formulas (also known as CSE formulas).
            </remarks>
      <seealso href="https://support.microsoft.com/en-us/office/dynamic-array-formulas-and-spilled-array-behavior-205c6b06-03ba-4151-89a1-87a7eb36e531" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.FormulaType">
      <summary>
            Gets the type of formula stored in this cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.FormulaRange">
      <summary>
            Gets the range of cells that are affected by the formula stored in this cell.
            </summary>
      <remarks>
        <p>This property is only relevant for array formulas and dynamic array formulas.</p>
        <p>When the formula of this cell was set using the <see cref="M:GemBox.Spreadsheet.ExcelCell.SetDynamicArrayFormula(System.String)" /> method,
            this property returns correct range only after the cell was calculated.</p>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.Calculate">
      <summary>
            Calculates formula for this excel cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.MergedRange">
      <summary>
            Returns associated merged range if the cell is merged; otherwise, <see langword="null" />.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.CellRange.Merged">CellRange.Merged</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.GetFormattedValue">
      <summary>
            Converts <see cref="P:GemBox.Spreadsheet.ExcelCell.Value">cell value</see> of this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance to string representation using <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat">number format</see> 
            that is specified on this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance.
            </summary>
      <returns>Formatted <see cref="P:GemBox.Spreadsheet.ExcelCell.Value">cell value.</see></returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetValue(System.Boolean)">
      <summary>
            Sets the boolean value to this cell or to merged range if this cell is merged.
            </summary>
      <param name="value">The boolean value.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetValue(System.Int32)">
      <summary>
            Sets the integer value to this cell or to merged range if this cell is merged.
            </summary>
      <param name="value">The integer value.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetValue(System.Double)">
      <summary>
            Sets the double value to this cell or to merged range if this cell is merged.
            </summary>
      <param name="value">The double value.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetValue(System.DateTime)">
      <summary>
            Sets the DateTime value to this cell or to merged range if this cell is merged.
            </summary>
      <param name="value">The DateTime value.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetValue(System.String)">
      <summary>
            Sets the string value to this cell or to merged range if this cell is merged.
            </summary>
      <param name="value">The string value.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetValue(System.String,GemBox.Spreadsheet.HtmlLoadOptions)">
      <summary>
            Loads the specified HTML text as the value of this <see cref="T:GemBox.Spreadsheet.ExcelCell" />.
            </summary>
      <param name="html">The HTML text which should be loaded as the value of this <see cref="T:GemBox.Spreadsheet.ExcelCell" />.</param>
      <param name="options">The options used to define settings for load operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.Insert(GemBox.Spreadsheet.InsertShiftDirection)">
      <summary>
            Inserts a cell by shifting cells in the specified direction.
            </summary>
      <param name="direction">The shift direction.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.Remove(GemBox.Spreadsheet.RemoveShiftDirection)">
      <summary>
            Removes a cell by shifting cells in the specified direction.
            </summary>
      <param name="direction">The shift direction.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and is equal to this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.op_Equality(GemBox.Spreadsheet.ExcelCell,GemBox.Spreadsheet.ExcelCell)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelCell" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ExcelCell" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ExcelCell" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelCell" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.op_Inequality(GemBox.Spreadsheet.ExcelCell,GemBox.Spreadsheet.ExcelCell)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelCell" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ExcelCell" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ExcelCell" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelCell" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.ConvertExcelNumberToDateTime(System.Double,System.Boolean)">
      <summary>
            Converts Excel floating-point number to <see cref="T:System.DateTime" /> structure.
            </summary>
      <remarks>
        <para>
            Excel file format doesn't have a separate data type for date and time. 
            <see cref="T:System.DateTime" /> value is stored as IEEE number encoded in a special way. When reading Excel 
            file, <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat">CellStyle.NumberFormat</see> is examined and if it matches 
            some of date/time number formats cell value is interpreted as <see cref="T:System.DateTime" />.
            </para>
        <para>
            However, if some non-standard date/time number format is used, cell value will not be recognized 
            as <see cref="T:System.DateTime" /> but as ordinary number. In such cases (when you know that specific cell 
            holds <see cref="T:System.DateTime" /> value but you get a number when reading Excel file) use this method 
            to convert IEEE number to <see cref="T:System.DateTime" /> structure.
            </para>
      </remarks>
      <param name="num">Excel floating-point number.</param>
      <param name="use1904DateSystem">True to use 1904 date system.</param>
      <returns>Converted DateTime structure.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.ConvertDateTimeToExcelNumber(System.DateTime,System.Boolean)">
      <summary>
            Converts <see cref="T:System.DateTime" /> structure to Excel floating-point number.
            </summary>
      <param name="date">DateTime structure.</param>
      <param name="use1904DateSystem">True to use 1904 date system.</param>
      <returns>Converted Excel floating-point number.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.GetCurrentRegion">
      <summary>
            Selects a worksheet region to which the cell belongs to. 
            </summary>
      <returns>The worksheet region to which the cell belongs to.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.HasComment">
      <summary>
            If cell has comment returns true, else returns false.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.HasHyperlink">
      <summary>
            If cell has hyperlink returns true, else returns false.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelCellCollection">
      <summary>
            Collection of excel cells (<see cref="T:GemBox.Spreadsheet.ExcelCell" />).
            </summary>
      <seealso cref="T:GemBox.Spreadsheet.ExcelCell" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellCollection.Item(System.Int32)">
      <summary>
            Gets the cell with the specified index.
            </summary>
      <param name="index">The zero-based index of the cell.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellCollection.Count">
      <summary>
            Gets the number of currently allocated elements (dynamically changes when worksheet is modified -- read remarks).
            </summary>
      <remarks>
            The cells are internally allocated in rows and not in columns. In other words, when you load CSV/XLS/XLSX or 
            access some cells via worksheet.Cells property new rows and cells can be allocated but the column count 
            will stay the same. To find last used column in the worksheet, use 
            <see cref="M:GemBox.Spreadsheet.ExcelWorksheet.GetUsedCellRange">ExcelWorksheet.GetUsedCellRange</see> method.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCellCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellCollection.GetEnumeratorCore">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs">
      <summary>
            Arguments for <see cref="E:GemBox.Spreadsheet.ExtractToDataTableOptions.ExcelCellToDataTableCellConverting" /> event.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable">
      <summary>
            Gets the destination <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" /></summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTableColumnIndex">
      <summary>
            Gets the destination column index in <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTableColumnType">
      <summary>
            Gets the destination column type in <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTableValue">
      <summary>
            Gets or sets the value which will be inserted into destination <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" /> cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.IsDataTableValueValid">
      <summary>
            Gets a value indication whether current <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTableValue" /> can be converted into <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" /> cell.
            </summary>
      <remarks>
            If this value is false, you need to set an appropriate <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTableValue" /> before exiting event handler or
            <see cref="T:GemBox.Spreadsheet.SpreadsheetException" /> will be thrown.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelCell">
      <summary>
            Gets the source <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelCell" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.Action">
      <summary>
            Gets or sets the action which will be executed after event, see <see cref="T:GemBox.Spreadsheet.ExtractDataEventAction" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelCell" /> and <see cref="P:GemBox.Spreadsheet.ExcelCell.Worksheet" /> properties instead.</para>
        <para>Gets the source <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet" />.</para>
      </summary>
      <value>
            The source <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelRowIndex">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelCell" />, <see cref="P:GemBox.Spreadsheet.ExcelCell.Row" /> and <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Index" /> properties instead.</para>
        <para>Gets the source row index in <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet" />.</para>
      </summary>
      <value>
            The source row index in <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelColumnIndex">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelCell" />, <see cref="P:GemBox.Spreadsheet.ExcelCell.Column" /> and <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Index" /> properties instead.</para>
        <para>Gets the source column index in <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet" />.</para>
      </summary>
      <value>
            The source column index in <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelCellValue">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelCell" /> and <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> properties instead.</para>
        <para>Gets the source value from <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet" />.</para>
      </summary>
      <value>
            The source value from <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet" />.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelColumn">
      <summary>
            Excel column contains column options and cell range with column cells.
            </summary>
      <remarks>
        <para>Note that the cells are internally allocated in rows and not in columns. ExcelColumn objects are created 
            only if they have non-standard width or style, or they are accessed directly. So, while ExcelRowCollection.Count 
            shows number of rows occupied with data, ExcelColumnCollection.Count does not say which Column is the 
            last one occupied with data!</para>
        <para>If you want to read all data in a sheet, use 
            <see cref="P:GemBox.Spreadsheet.ExcelRow.AllocatedCells">ExcelRow.AllocatedCells</see> property.</para>
        <para>If you want to find last column occupied with data, use 
            <see cref="M:GemBox.Spreadsheet.ExcelWorksheet.CalculateMaxUsedColumns" /> method.</para>
      </remarks>
      <seealso cref="T:GemBox.Spreadsheet.ExcelRow" />
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumn.Width">
      <summary>
            Gets or sets the column width.
            </summary>
      <value>
            The column width.
            </value>
      <remarks>
            Value is a numerator (before a slash) of a fraction in a formula for an <see href="https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.column">Open XML column width</see>.
            </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.DefaultColumnWidth" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.CreateCells">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFit">
      <summary>
            Automatically fits column width to the minimum size required for all data in the column to be visible.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFit(System.Double)">
      <summary>
            Automatically fits column width to the minimum size required for all data in the column to be visible.
            </summary>
      <remarks>
            Scaling factor is used to adjust the width of the column. Resulting column width is equal to CalculatedWidth * scaling. Default scaling is 1.
            </remarks>
      <param name="scaling">Scaling factor.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFit(System.Double,GemBox.Spreadsheet.ExcelRow,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Automatically fits column width by checking only the cells in the column that are specified by row range.
            </summary>
      <remarks>
            Scaling factor is used to adjust the width of the column. Resulting column width is equal to CalculatedWidth * scaling. Default scaling is 1.
            </remarks>
      <param name="scaling">Scaling factor.</param>
      <param name="firstRow">First row.</param>
      <param name="lastRow">Last row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.GetWidth(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the width of column in arbitrary length unit.
            </summary>
      <param name="lengthUnit">The length unit in which to return column width.</param>
      <returns>The width of column in arbitrary length unit.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.SetWidth(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the width of column in arbitrary length unit.
            </summary>
      <param name="value">Column width value.</param>
      <param name="lengthUnit">The length unit in which <paramref name="value" /> is specified.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFitAdvanced(System.Single)">
      <summary>
            Automatically fits column width to the minimum size required for all data in the column to be visible.
            </summary>
      <remarks>
        <para>Auto-fit column width is a MS Excel feature and not a file format feature. Autofit method uses methods from System.Drawing to determine the real data width.</para>
        <para>Scaling factor is used to adjust the width of the column. Resulting column width is equal to CalculatedWidth * scaling. Default scaling is 1.</para>
      </remarks>
      <param name="scaling">Scaling factor.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFitAdvanced(System.Single,GemBox.Spreadsheet.ExcelRow,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Automatically fits column width by checking only the cells in the column that are specified by row range.
            </summary>
      <remarks>
        <para>Auto-fit column width is a MS Excel feature and not a file format feature. Autofit method uses methods from System.Drawing to determine the real data width.</para>
        <para>Scaling factor is used to adjust the width of the column. Resulting column width is equal to CalculatedWidth * scaling. Default scaling is 1.</para>
      </remarks>
      <param name="scaling">Scaling factor.</param>
      <param name="firstRow">First row.</param>
      <param name="lastRow">Last row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.Delete">
      <summary>
            Deletes this column from the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.InsertCopy(System.Int32,GemBox.Spreadsheet.ExcelColumn)">
      <summary>
            Inserts specified number of copied columns before the current column.
            </summary>
      <param name="columnCount">Number of columns to insert.</param>
      <param name="sourceColumn">Source column to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.InsertEmpty(System.Int32)">
      <summary>
            Inserts specified number of empty columns before the current column.
            </summary>
      <param name="columnCount">Number of columns to insert.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelColumnCollection">
      <summary>
            Collection of excel columns (<see cref="T:GemBox.Spreadsheet.ExcelColumn" />).
            </summary>
      <remarks>
        <para>Note that the cells are internally allocated in rows and not in columns. ExcelColumn objects are created 
            only if they have non-standard width or style, or they are accessed directly. So, while ExcelRowCollection.Count 
            shows number of rows occupied with data, ExcelColumnCollection.Count does not say which Column is the 
            last one occupied with data!</para>
        <para>If you want to read all data in a sheet, use 
            <see cref="P:GemBox.Spreadsheet.ExcelRow.AllocatedCells">ExcelRow.AllocatedCells</see> property.</para>
        <para>If you want to find last column occupied with data, use 
            <see cref="M:GemBox.Spreadsheet.ExcelWorksheet.CalculateMaxUsedColumns" /> method.</para>
      </remarks>
      <seealso cref="T:GemBox.Spreadsheet.ExcelColumn" />
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnCollection.Item(System.Int32)">
      <summary>
            Gets the column with the specified index.
            </summary>
      <param name="index">The zero-based index of the column.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.Remove(System.Int32)">
      <summary>
            Removes the column with the specified index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.Remove(System.Int32,System.Int32)">
      <summary>
            Removes specified number of columns starting at the specified index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <param name="columnCount">Number of columns to remove.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.InsertEmpty(System.Int32)">
      <summary>
            Inserts empty column at the specified index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.InsertEmpty(System.Int32,System.Int32)">
      <summary>
            Inserts specified number of empty columns at the specified index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <param name="columnCount">Number of columns to insert.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.InsertCopy(System.Int32,GemBox.Spreadsheet.ExcelColumn)">
      <summary>
            Inserts copied column at the specified index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <param name="sourceColumn">Source column to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.InsertCopy(System.Int32,System.Int32,GemBox.Spreadsheet.ExcelColumn)">
      <summary>
            Inserts specified number of copied columns at the specified index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <param name="columnCount">Number of columns to insert.</param>
      <param name="sourceColumn">Source column to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.AdjustArraySize(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.ParseName(System.String)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.FixMergedRegionsIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.FixNamedRegionsIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.FixFormulaReferencesIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.FixPageBreaksIndexes(System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.FixTableIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.FixDataValidationIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.FixConditionalFormatRuleIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnCollection.GetEnumerableCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.DeleteInternalCore(System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.ColumnNameToIndex(System.String)">
      <summary>
            Converts column name ("A", "B", ...) to column index (0, 1, ...).
            </summary>
      <param name="name">Column name.</param>
      <returns>Column index for the specified name.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.ColumnIndexToName(System.Int32)">
      <summary>
            Converts column index (0, 1, ...) to column name ("A", "B", ...).
            </summary>
      <param name="columnIndex">Column index.</param>
      <returns>Column name for the specified index.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelColumnRowBase">
      <summary>
            Base class for the excel column and row classes.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnRowBase.#ctor(GemBox.Spreadsheet.ExcelWorksheet,System.Int32)">
      <summary>
            Internal.
            </summary>
      <param name="parent">
      </param>
      <param name="index">
      </param>
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells">
      <summary>
            Gets cell range with column / row cells.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
      <seealso cref="P:GemBox.Spreadsheet.ExcelRow.AllocatedCells" />
      <seealso cref="T:GemBox.Spreadsheet.ExcelCell" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Index">
      <summary>
            Gets the row / column zero-based index which represents its position in a worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Name">
      <summary>
            Gets the name of <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.
            </summary>
      <remarks>
            A row name includes row number. For example, the name of row 0 is "1".
            A column name includes column letter. For example, the name of column 0 is "A".
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style">
      <summary>
            Gets or sets the cell formatting of cells in this column / row.
            </summary>
      <value>
            The cell formatting of cells in this column / row.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Collapsed">
      <summary>
            Gets or sets whether object is collapsed in outlining.
            </summary>
      <remarks>
        <para>When you use outline grouping and you want outline group to be collapsed, you need to set three properties:</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.OutlineLevel" /> property needs to be set to correct outline level.</para>
        <para>If group is collapsed, for all rows in the collapsed group <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Hidden" /> property 
            needs to be set to <see langword="true" />.</para>
        <para>If group is collapsed, for the row where collapsed (plus) sign is located 
            <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Collapsed" /> property needs to be set to <see langword="true" />.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.OutlineLevel" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.OutlineLevel">
      <summary>
            Gets or sets outline level.
            </summary>
      <remarks>
        <para>Exception is thrown if value is out of 0 to 7 range.</para>
        <para>Using this property you can create hierarchical groups. Range of consecutive objects (rows or columns) 
            with the same value of outline level belongs to the same group. Default value is zero, which prevents grouping.</para>
        <para>When you use outline grouping and you want outline group to be collapsed, you need to set three properties:</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.OutlineLevel" /> property needs to be set to correct outline level.</para>
        <para>If group is collapsed, for all rows in the collapsed group <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Hidden" /> property 
            needs to be set to <see langword="true" />.</para>
        <para>If group is collapsed, for the row where collapsed (plus) sign is located 
            <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Collapsed" /> property needs to be set to <see langword="true" />.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Collapsed" />
      <exception cref="T:System.ArgumentOutOfRangeException">Value is out of 0 to 7 range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Hidden">
      <summary>
            Gets or sets whether excel object is hidden.
            </summary>
      <remarks>
        <para>When you use outline grouping and you want outline group to be collapsed, you need to set three properties:</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.OutlineLevel" /> property needs to be set to correct outline level.</para>
        <para>If group is collapsed, for all rows in the collapsed group <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Hidden" /> property 
            needs to be set to <see langword="true" />.</para>
        <para>If group is collapsed, for the row where collapsed (plus) sign is located 
            <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Collapsed" /> property needs to be set to <see langword="true" />.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnRowBase.CreateCells">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnRowBase.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnRowBase.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> and is equal to this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnRowBase.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnRowBase.op_Equality(GemBox.Spreadsheet.ExcelColumnRowBase,GemBox.Spreadsheet.ExcelColumnRowBase)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnRowBase.op_Inequality(GemBox.Spreadsheet.ExcelColumnRowBase,GemBox.Spreadsheet.ExcelColumnRowBase)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.IsStyleDefault">
      <summary>
            Returns <see langword="true" /> if style is default; otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelComment">
      <summary>
            Represents a comment object used by <see cref="P:GemBox.Spreadsheet.ExcelCell.Comment" /> in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.Exists">
      <summary>
            If comment exists returns true, otherwise returns false.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.Text">
      <summary>
            Gets the comment text assigned to excel cell
            </summary>
      <value>The comment text assigned to excel cell.</value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.Author">
      <summary>
            Gets or sets comment author.
            </summary>
      <value>Comment author.</value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.IsVisible">
      <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
      <value>
        <see langword="true" /> if this instance is visible; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.TopLeftCell">
      <summary>
            Gets or sets the top left anchor cell for the comment shape.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.BottomRightCell">
      <summary>
            Gets or sets the bottom right anchor cell for the comment shape.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.ParentCell">
      <summary>
            Gets the comment parent cell.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelComment.GetCharacters(System.Int32)">
      <summary>
            Returns a <see cref="T:GemBox.Spreadsheet.FormattedCharacterRange" /> object that represents a range of characters within the comment text.
            The range starts at a specified character position.
            Supported in XLSX, XLSB and XLS.
            </summary>
      <param name="startIndex">The zero-based starting character position.</param>
      <returns>New <see cref="T:GemBox.Spreadsheet.FormattedCharacterRange" /> object.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument <paramref name="startIndex" /> is less than zero or is equal to or greater than 32767.</exception>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/excel-cell-comments/208">ExcelCell Comments example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelComment.GetCharacters(System.Int32,System.Int32)">
      <summary>
            Returns a <see cref="T:GemBox.Spreadsheet.FormattedCharacterRange" /> object that represents a range of characters within the comment text.
            The range starts at a specified character position and has a specified length.
            Supported in XLSX, XLSB and XLS.
            </summary>
      <param name="startIndex">The zero-based starting character position.</param>
      <param name="length">The number of characters.</param>
      <returns>New <see cref="T:GemBox.Spreadsheet.FormattedCharacterRange" /> object.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument <paramref name="startIndex" /> is less than zero or is equal to or greater than 32767.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument <paramref name="length" /> is equal to or less than zero or is greater than 32767.</exception>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/excel-cell-comments/208">ExcelCell Comments example</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelComment.AutoFit">
      <summary>
            Automatically fits the comment width and height to the minimum size required for all data in the comment to be visible.
            </summary>
      <remarks>
        <para>When the comment has multiple lines, the width is autofitted to the longest line and the height is autofitted to
            make all lines visible. If the comment has a single line of text the height and width are autofitted in an approximately 2:1 ratio.</para>
        <para>The calculated width and height is stored internally and the <see cref="P:GemBox.Spreadsheet.ExcelComment.BottomRightCell" /> property is set to null.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelComment.AutoFit(System.Double)">
      <summary>
            Automatically fits the comment width and height to the minimum size required for all data in the comment to be visible.
            </summary>
      <param name="scaling">Scaling factor.</param>
      <remarks>
        <para>Scaling factor is used to adjust the width and height of the comment. The resulting size is equal to CalculatedSize * scaling. The default scaling is 1.</para>
        <para>When the comment has multiple lines, the width is autofitted to the longest line and the height is autofitted to
            make all lines visible. If the comment has a single line of text the height and width are autofitted in an approximately 2:1 ratio.</para>
        <para>The calculated width and height is stored internally and the <see cref="P:GemBox.Spreadsheet.ExcelComment.BottomRightCell" /> property is set to null.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelComment.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.ExcelComment" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.ExcelComment" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.ExcelComment" /> and is equal to this <see cref="T:GemBox.Spreadsheet.ExcelComment" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelComment.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.ExcelComment" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.ExcelComment" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelComment.op_Equality(GemBox.Spreadsheet.ExcelComment,GemBox.Spreadsheet.ExcelComment)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelComment" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ExcelComment" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ExcelComment" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelComment" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelComment.op_Inequality(GemBox.Spreadsheet.ExcelComment,GemBox.Spreadsheet.ExcelComment)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelComment" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ExcelComment" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ExcelComment" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelComment" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelCommentCollection">
      <summary>
            Collection of comments (<see cref="T:GemBox.Spreadsheet.ExcelComment" />).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCommentCollection.Item(System.Int32)">
      <summary>
            Gets the comment at the specified index.
            </summary>
      <param name="index">The zero-based index of the comment.</param>
      <returns>The comment at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument <paramref name="index" /> is out of range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCommentCollection.Count">
      <summary>
            Gets the number of comments contained in the collection. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCommentCollection.Clear">
      <summary>
            Removes all comments. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCommentCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the comment at the specified index.
            </summary>
      <param name="index">The zero-based index of the comment to remove.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCommentCollection.Remove(GemBox.Spreadsheet.ExcelComment)">
      <summary>
            Removes the first occurrence of a specific <see cref="T:GemBox.Spreadsheet.ExcelComment" /> from the collection.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.ExcelComment" /> to remove from the collection.</param>
      <returns>
        <see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the original collection.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCommentCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCommentCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelDrawing">
      <summary>
            Represents a base class for all drawings (pictures, charts, etc.) in the worksheet.
            </summary>
      <seealso cref="T:GemBox.Spreadsheet.ExcelPicture" />
      <seealso cref="T:GemBox.Spreadsheet.ExcelShape" />
      <seealso cref="T:GemBox.Spreadsheet.Charts.ExcelChart" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawing.Position">
      <summary>
            Gets the position of this drawing (picture, chart, etc.) in the worksheet.
            </summary>
      <value>
            The position of this drawing (picture, chart, etc.) in the worksheet.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawing.Metadata">
      <summary>
            Gets the metadata (non-visual properties) of this <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> instance.
            </summary>
      <value>
            The metadata (non-visual properties) of this <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> instance.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawing.Worksheet">
      <summary>
            Gets the parent worksheet.
            </summary>
      <value>
            The parent worksheet.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawing.Hyperlink">
      <summary>
            Gets or sets the hyperlink on this drawing (picture, chart, etc.).
            </summary>
      <value>
            The hyperlink on this drawing (picture, chart, etc.).
            </value>
      <remarks>Supported only in XLSX and XLSB.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawing.Format">
      <summary>
            Formats this drawing (picture, chart, etc.) to its default size so it can be exported to PDF, XPS, image or be printed.
            </summary>
      <returns>Formatted drawing (picture, chart, etc.) which can be exported to PDF, XPS, image or be printed.</returns>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Drawing cannot be formatted because it doesn't belong to any worksheet.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawing.Format(System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Formats this drawing (picture, chart, etc.) to specified size so it can be exported to PDF, XPS, image or be printed.
            </summary>
      <param name="width">The formatted drawing width.</param>
      <param name="height">The formatted drawing height.</param>
      <param name="unit">The formatted drawing width / height length unit.</param>
      <returns>Formatted drawing (picture, chart, etc.) which can be exported to PDF, XPS, image or be printed.</returns>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Drawing cannot be formatted because it doesn't belong to any worksheet.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawing.HasHyperlink">
      <summary>
            Gets a value indicating whether this drawing (picture, chart, etc.) has hyperlink.
            </summary>
      <value>
        <see langword="true" /> if this drawing (picture, chart, etc.) has hyperlink; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelDrawingCollection`1">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.ExcelDrawing">drawings</see> (pictures, charts, etc.) in the worksheet.
            </summary>
      <typeparam name="T">An <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> derived type.</typeparam>
      <see cref="T:GemBox.Spreadsheet.ExcelPictureCollection" />
      <see cref="T:GemBox.Spreadsheet.Charts.ExcelChartCollection" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.Pictures">ExcelWorksheet.Pictures</seealso>
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.Charts">ExcelWorksheet.Charts</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.#ctor(GemBox.Spreadsheet.ExcelWorksheet,GemBox.Spreadsheet.ExcelDrawingCollection{`0})">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingCollection`1.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:GemBox.Spreadsheet.ExcelDrawingCollection`1" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingCollection`1.Item(System.Int32)">
      <summary>
            Gets the element at the specified index.
            </summary>
      <value>
            The element at the specified index.
            </value>
      <param name="index">The zero-based index of the element to get.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.Add(`0,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.Add(`0,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.Add(`0,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.Add(`0,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.Add(`0,System.String,System.String)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.AddCopy(`0)">
      <summary>
            Adds a copy of the drawing (picture, chart, etc.) to the worksheet.
            </summary>
      <param name="item">The drawing (picture, chart, etc.) which will be copied to the worksheet.</param>
      <returns>A copy of the drawing (picture, chart, etc.) added to the worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.Move(System.Int32,System.Int32)">
      <summary>
        <para>Moves the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> at the specified index to a new location in the collection thus affecting its Z-index.</para>
        <para>Drawings at the lower location in the collection have a lower Z-index and are drawn before drawings at the higher location in the collection.</para>
      </summary>
      <param name="oldIndex">The zero-based index specifying the location of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.Remove(`0)">
      <summary>
            Removes the first occurrence of a specific object from the <see cref="T:GemBox.Spreadsheet.ExcelDrawingCollection`1" />.
            </summary>
      <param name="item">The object to remove from the <see cref="T:GemBox.Spreadsheet.ExcelDrawingCollection`1" />.</param>
      <returns>
        <c>true</c> if item is successfully removed; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.RemoveAt(System.Int32)">
      <summary>
            Removes the element at the specified index of the <see cref="T:GemBox.Spreadsheet.ExcelDrawingCollection`1" />.
            </summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.Clear">
      <summary>
            Removes all elements from the <see cref="T:GemBox.Spreadsheet.ExcelDrawingCollection`1" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.ExcelDrawingCollection`1" /></summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelDrawingCollection`1" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.Contains(`0)">
      <summary>
            Determines whether an element is in the <see cref="T:GemBox.Spreadsheet.ExcelDrawingCollection`1" />.
            </summary>
      <param name="item">The object to locate in the <see cref="T:GemBox.Spreadsheet.ExcelDrawingCollection`1" />.</param>
      <returns>
        <c>true</c> if item is found; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.IndexOf(`0)">
      <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:GemBox.Spreadsheet.ExcelDrawingCollection`1" />.
            </summary>
      <param name="item">The object to locate in the <see cref="T:GemBox.Spreadsheet.ExcelDrawingCollection`1" />.</param>
      <returns>The zero-based index of the first occurrence of item within the entire <see cref="T:GemBox.Spreadsheet.ExcelDrawingCollection`1" />, if found; otherwise, -1.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelDrawingMetadata">
      <summary>
            Represents a set of non-visual properties which shall be applied to the parent <see cref="T:GemBox.Spreadsheet.ExcelDrawing" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingMetadata.Id">
      <summary>
            Gets a unique identifier for the current drawing within the worksheet.
            </summary>
      <value>
            A unique identifier for the current drawing within the worksheet.
            </value>
      <remarks>
            This ID may be used to assist in uniquely identifying this drawing so that it can be referred to by other parts of the workbook.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingMetadata.Name">
      <summary>
            Gets or sets the name for the current drawing.
            </summary>
      <value>
            The name for the current drawing.
            </value>
      <exception cref="T:System.ArgumentException">Drawing's name cannot be empty.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingMetadata.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelDrawingMetadata" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelDrawingMetadata" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelDrawingPosition">
      <summary>
            Represents a class which holds information about position and size of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode">
      <summary>
            Gets or sets the positioning mode of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
      <value>
            The positioning mode of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.From">
      <summary>
            Gets or sets the anchor cell which the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) spans from.
            </summary>
      <value>
            The anchor cell which the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) spans from.
            </value>
      <remarks>
        <para>If <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> is <see cref="F:GemBox.Spreadsheet.PositioningMode.FreeFloating" />, then:</para>
        <list type="bullet">
          <item>
            <description>getter returns new instance of <see cref="T:GemBox.Spreadsheet.AnchorCell" /> for every request and changing that instance won't affect on the position of the drawing (picture, chart, etc.).</description>
          </item>
          <item>
            <description>setter will internally set <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Left" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Top" /> properties, which are calculated by using <see cref="P:GemBox.Spreadsheet.ExcelColumn.Width">width</see>s and <see cref="P:GemBox.Spreadsheet.ExcelRow.Height">height</see>s of columns and rows in the worksheet.</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.To">
      <summary>
            Gets or sets the anchor cell which the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) spans to.
            </summary>
      <value>
            The anchor cell which the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) spans to.
            </value>
      <remarks>
        <para>If <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> is <see cref="F:GemBox.Spreadsheet.PositioningMode.FreeFloating" /> or <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />, then:</para>
        <list type="bullet">
          <item>
            <description>getter returns new instance of <see cref="T:GemBox.Spreadsheet.AnchorCell" /> for every request and changing that instance won't affect on the position of the drawing (picture, chart, etc.).</description>
          </item>
          <item>
            <description>setter will internally set <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Width" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Height" /> properties, which are calculated by using <see cref="P:GemBox.Spreadsheet.ExcelColumn.Width">width</see>s and <see cref="P:GemBox.Spreadsheet.ExcelRow.Height">height</see>s of columns and rows in the worksheet.</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.Left">
      <summary>
            Gets or sets the distance (in points) of the left edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the left edge of the worksheet.
            </summary>
      <value>
            The distance (in points) of the left edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the left edge of the worksheet.
            </value>
      <remarks>
        <para>If <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> is <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" /> or <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />, then:</para>
        <list type="bullet">
          <item>
            <description>getter calculates the distance from the left edge of the worksheet for every request by using <see cref="P:GemBox.Spreadsheet.ExcelColumn.Width">width</see>s of columns in the worksheet.</description>
          </item>
          <item>
            <description>setter will internally set <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.From" /> property.</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.Top">
      <summary>
            Gets or sets the distance (in points) of the top edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the top edge of the worksheet.
            </summary>
      <value>
            The distance (in points) of the top edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the top edge of the worksheet.
            </value>
      <remarks>
        <para>If <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> is <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" /> or <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />, then:</para>
        <list type="bullet">
          <item>
            <description>getter calculates the distance from the top edge of the worksheet for every request by using <see cref="P:GemBox.Spreadsheet.ExcelRow.Height">height</see>s of rows in the worksheet.</description>
          </item>
          <item>
            <description>setter will internally set <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.From" /> property.</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.Width">
      <summary>
            Gets or sets the width (in points) of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
      <value>
            The width (in points) of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </value>
      <remarks>
        <para>If <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> is <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />, then:</para>
        <list type="bullet">
          <item>
            <description>getter calculates the width for every request by using <see cref="P:GemBox.Spreadsheet.ExcelColumn.Width">width</see>s of columns in the worksheet.</description>
          </item>
          <item>
            <description>setter will internally set <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.To" /> property.</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.Height">
      <summary>
            Gets or sets the height (in points) of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
      <value>
            The height (in points) of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </value>
      <remarks>
        <para>If <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> is <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />, then:</para>
        <list type="bullet">
          <item>
            <description>getter calculates the height for every request by using <see cref="P:GemBox.Spreadsheet.ExcelRow.Height">height</see>s of rows in the worksheet.</description>
          </item>
          <item>
            <description>setter will internally set <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.To" /> property.</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetLeft(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the distance of the left edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the left edge of the worksheet.
            </summary>
      <param name="unit">The length unit of the returned value.</param>
      <returns>The distance of the left edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the left edge of the worksheet.</returns>
      <inheritdoc cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Left" select="remarks" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetTop(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the distance of the top edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the top edge of the worksheet.
            </summary>
      <param name="unit">The length unit of the returned value.</param>
      <returns>The distance of the top edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the top edge of the worksheet.</returns>
      <inheritdoc cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Top" select="remarks" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetWidth(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the width of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
      <param name="unit">The length unit of the returned value.</param>
      <returns>The width of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).</returns>
      <inheritdoc cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Width" select="remarks" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetHeight(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the height of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
      <param name="unit">The length unit of the returned value.</param>
      <returns>The height of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).</returns>
      <inheritdoc cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Height" select="remarks" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.SetLeft(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the distance of the left edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the left edge of the worksheet.
            </summary>
      <param name="value">The value.</param>
      <param name="unit">The length unit of the <paramref name="value" /> parameter.</param>
      <inheritdoc cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Left" select="remarks" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.SetTop(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the distance of the top edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the top edge of the worksheet.
            </summary>
      <param name="value">The value.</param>
      <param name="unit">The length unit of the <paramref name="value" /> parameter.</param>
      <inheritdoc cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Top" select="remarks" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.SetWidth(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the width of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
      <param name="value">The value.</param>
      <param name="unit">The length unit of the <paramref name="value" /> parameter.</param>
      <inheritdoc cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Width" select="remarks" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.SetHeight(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the height of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
      <param name="value">The value.</param>
      <param name="unit">The length unit of the <paramref name="value" /> parameter.</param>
      <inheritdoc cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Height" select="remarks" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelDrawingPosition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelDrawingPosition" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelEmbeddedObject">
      <summary>
            Represents a read-only embedded object in the worksheet.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.EmbeddedObjects">ExcelWorksheet.EmbeddedObjects</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelEmbeddedObject.Data">
      <summary>
            Gets the embedded object data.
            </summary>
      <value>
            The embedded object data.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelEmbeddedObject.ContentType">
      <summary>
            Gets the content type of the embedded object data.
            </summary>
      <value>
            The content type of the embedded object data.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelEmbeddedObject.Position">
      <summary>
            Gets the position of this embedded object in the worksheet.
            </summary>
      <value>
            The position of this embedded object in the worksheet.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelEmbeddedObject.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelEmbeddedObject" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelEmbeddedObject" /> instance.
            </returns>
      <remarks>
            This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).
            </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelEmbeddedObjectCollection">
      <summary>
            Represents a read-only collection of <see cref="T:GemBox.Spreadsheet.ExcelEmbeddedObject">embedded object</see>s in the worksheet.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.EmbeddedObjects">ExcelWorksheet.EmbeddedObjects</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelEmbeddedObjectCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.ExcelEmbeddedObject" />s contained in the <see cref="T:GemBox.Spreadsheet.ExcelEmbeddedObjectCollection" />.
            </summary>
      <value>
            The number of <see cref="T:GemBox.Spreadsheet.ExcelEmbeddedObject" />s contained in the <see cref="T:GemBox.Spreadsheet.ExcelEmbeddedObjectCollection" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelEmbeddedObjectCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.ExcelEmbeddedObject" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.ExcelEmbeddedObject" /> at the specified index.
            </value>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.ExcelEmbeddedObject" /> to get.</param>
      <returns>
            The <see cref="T:GemBox.Spreadsheet.ExcelEmbeddedObject" /> at the specified index.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelEmbeddedObjectCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.ExcelEmbeddedObjectCollection" />.
            </summary>
      <returns>
            An enumerator that can be used to iterate through the <see cref="T:GemBox.Spreadsheet.ExcelEmbeddedObjectCollection" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelFile">
      <summary>
            Excel file contains one or more worksheets (<see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />)
            and workbook related properties and methods.
            </summary>
      <seealso cref="T:GemBox.Spreadsheet.ExcelWorksheet" />
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.MaximumDigitWidth">
      <summary>
        <para>Gets or sets the maximum digit width of the numbers 0, 1, 2, ..., 9 as rendered in the <see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /> style's font.</para>
        <para>The <see cref="P:GemBox.Spreadsheet.ExcelFile.MaximumDigitWidth" /> is critically important for getting and setting <see href="https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.column">column widths</see>.</para>
        <para>You should set the <see cref="P:GemBox.Spreadsheet.ExcelFile.MaximumDigitWidth" /> to zero, so it gets automatically reinitialized upon next retreival, if any of the following is changed:</para>
        <list type="bullet">
          <item>
            <description>The <see cref="P:GemBox.Spreadsheet.FontSettings.FontsBaseUri" />.</description>
          </item>
          <item>
            <description>The <see cref="P:GemBox.Spreadsheet.ExcelViewOptions.Dpi" />.</description>
          </item>
          <item>
            <description>The <see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /> style's font.</description>
          </item>
        </list>
        <para>The automatically initialized value might differ from MS Excel's value (usually by 1 pixel). In that case you can override the automatically initialized value by manually setting a value.</para>
      </summary>
      <value>
            The maximum digit width of the numbers 0, 1, 2, ..., 9 as rendered in the <see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /> style's font.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is less than zero.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.AutomaticFormulaUpdate">
      <summary>
            Gets or sets a value indicating whether the formula address references are automatically updated.
            </summary>
      <remarks>
        <para>
            If you use address references in a formula, those references will be automatically updated if you insert or delete 
            rows or columns and those changes affect the address reference in some way.
            </para>
        <para>
            If this property is <see langword="false" />, formula address references will not update automatically.
            This should be used only for performance reasons when working on large files.
            </para>
        <para>Default value of this property is <see langword="true" />.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.ProtectionSettings">
      <summary>
            Gets workbook protection properties. 
            Supported in XLSX only.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.#ctor">
      <summary>
            Initializes an empty (no worksheets) instance of the ExcelFile class.
            </summary>
      <remarks>
        <para>To add new worksheets to a blank file use <see cref="P:GemBox.Spreadsheet.ExcelFile.Worksheets">
            Worksheets</see> property, <see cref="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Add(System.String)" /> or <see cref="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Add(GemBox.Spreadsheet.SheetType,System.String)" /> methods.</para>
        <para>To load / read a spreadsheet from a file or a stream, use static <see cref="M:GemBox.Spreadsheet.ExcelFile.Load(System.String)" /> methods.</para>
        <para>To save / write a spreadsheet to a file or a stream use <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)" /> methods.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.Worksheets">
      <summary>
            Collection of all worksheets (<see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />) in a workbook. 
            </summary>
      <seealso cref="T:GemBox.Spreadsheet.ExcelWorksheet" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.VbaProject">
      <summary>
        <para>Represents the <see cref="T:GemBox.Spreadsheet.Vba.VbaProject" /> contained in the <see cref="T:GemBox.Spreadsheet.ExcelFile" />.</para>
        <para>If the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> does not have <see cref="T:GemBox.Spreadsheet.Vba.VbaProject" /> contained, it will be created on accessing this property.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.CodeName">
      <summary>
        <para>Gets or sets the name of the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> that is bound to this <see cref="T:GemBox.Spreadsheet.ExcelFile" />.</para>
      </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SupportsType(System.Type)">
      <summary>
            Gets a value indicating whether the objects of specified type can be assigned 
            to <see cref="P:GemBox.Spreadsheet.ExcelCell.Value">ExcelCell.Value</see> property.
            </summary>
      <param name="type">Queried type.</param>
      <remarks>
            Currently supported types are:
            <list type="bullet"><item><description>System.DBNull</description></item><item><description>System.Byte</description></item><item><description>System.SByte</description></item><item><description>System.Int16</description></item><item><description>System.UInt16</description></item><item><description>System.Int64</description></item><item><description>System.UInt64</description></item><item><description>System.UInt32</description></item><item><description>System.Int32</description></item><item><description>System.Single</description></item><item><description>System.Double</description></item><item><description>System.Boolean</description></item><item><description>System.Char</description></item><item><description>System.Text.StringBuilder</description></item><item><description>System.Decimal</description></item><item><description>System.DateTime</description></item><item><description>System.String</description></item></list></remarks>
      <returns>
        <see langword="true" /> if the specified type is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.Protected">
      <summary>
            Gets or sets the workbook protection flag.
            </summary>
      <remarks>
            This property is simply written to Excel file and has no effect on the behavior of this library.
            For more information on workbook protection, consult Microsoft Excel documentation.
            </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.Protected">ExcelWorksheet.Protected</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.GroupMethodsAffectedCellsLimit">
      <summary>
            Maximum number of affected cells in group set methods.
            </summary>
      <remarks>
            If user tries to modify all cells in a group which has more cells than specified limit, exception
            will be thrown. This property was introduced to prevent users from accidentally modifying millions
            of cells which results in a long delay, a large memory allocation and a big resulting file. You can 
            set this limit to value which suits your needs (minimum is 5).
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.Use1904DateSystem">
      <summary>
            Gets or sets whether 1904 date system is used.
            </summary>
      <remarks>
            Default value for this property is <see langword="false" />.
            For more information on 1904 date system, consult Microsoft Excel documentation.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DocumentProperties">
      <summary>
            Gets <see cref="P:GemBox.Spreadsheet.ExcelFile.DocumentProperties" /> of this <see cref="T:GemBox.Spreadsheet.ExcelFile" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DefinedNames">
      <summary>
            Gets the collection of defined names that are not directly related with one cell range.
            Supported only in XLSX, XLSB, XLS and XML.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.PivotCaches">
      <summary>
        <para>Gets the collection of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />s defined in this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance.</para>
        <para>Currently supported in XLSX only.</para>
      </summary>
      <value>
            The collection of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />s defined in this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance.
            </value>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.Styles">
      <summary>
            Gets the collection of workbook (master) <see cref="T:GemBox.Spreadsheet.Style" />s defined for this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance.
            </summary>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Clone">
      <summary>
            Makes a deep clone of this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance.
            </summary>
      <returns>A deep clone of this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.AutoDetectCsvSeparator(System.IO.Stream)">
      <summary>
            Autodetects CSV separator. If there's no separators in the input stream returns (char)0. 
            </summary>
      <remarks>
            This method counts the number of occurrences of the most common separators (',', ';', '\t')
            and returns one that has occurred the most times in first 5 rows. 
            </remarks>
      <param name="stream">Input Stream.</param>
      <returns>Char that is CSV separator. If there's no separators in the input StreamReader returns (char)0, 
            and if there are two with equal number of occurrence, returns first of them.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.AutoDetectCsvSeparator(System.IO.StreamReader,System.Int32,System.Char[])">
      <summary>
            Autodetects CSV separator. If there's no separators in the input stream returns (char)0. 
            </summary>
      <remarks>
            This method counts the number of occurrences of chars that are specified in the 
            array possibleSeparators, and returns one that has occurred the most times in first rowsToTest rows of StreamReader sr. 
            </remarks>
      <param name="sr">Input StreamReader.</param>
      <param name="rowsToTest">Number of rows to test.</param>
      <param name="possibleSeparators">Chars that can be CSV separators.</param>
      <returns>Char that is CSV separator. If there's no separators in the input StreamReader returns (char)0, 
            and if there are two with equal number of occurrence, returns first of them.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.CalculationOptions">
      <summary>
            Gets the calculation engine options.
            </summary>
      <value>
            The calculation engine options.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Calculate">
      <summary>
            Calculates formula for every excel cell in all worksheets.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Load(System.String)">
      <summary>
            Loads a spreadsheet from a file with the specified path.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <returns>A loaded spreadsheet.</returns>
      <remarks>
            File extension that is extracted from the <paramref name="path" /> is used to create the appropriate <see cref="T:GemBox.Spreadsheet.LoadOptions" />
            derived class instance that is then passed to the <see cref="M:GemBox.Spreadsheet.ExcelFile.Load(System.String,GemBox.Spreadsheet.LoadOptions)" /> method.
            <para>Following file extensions are supported:</para><list type="bullet"><item><description>Microsoft Excel: .xlsx, xlsm, .xltx, .xltm, .xls, .xlt, .xlsb</description></item><item><description>OpenDocument Spreadsheet: .ods, .ots</description></item><item><description>Character Separated Values: .csv, .tsv</description></item><item><description>HyperText Markup Language: .htm, .html, .mht, .mhtml</description></item><item><description>Extensible Markup Language: .xml (XML Spreadsheet 2003 / SpreadsheetML)</description></item></list></remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Load(System.String,GemBox.Spreadsheet.LoadOptions)">
      <summary>
            Loads a spreadsheet from a file with the specified path.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <param name="options">The loading options which can be used to define settings for load operation.</param>
      <returns>A loaded spreadsheet.</returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Load(System.IO.Stream)">
      <summary>
            Loads a spreadsheet from the specified stream. This method tries to dynamically determine the file format.
            If you know the file format, it is more reliable and faster to use <see cref="M:GemBox.Spreadsheet.ExcelFile.Load(System.IO.Stream,GemBox.Spreadsheet.LoadOptions)" /> method.
            </summary>
      <param name="stream">The stream from which to load a spreadsheet.</param>
      <returns>A loaded spreadsheet.</returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Load(System.IO.Stream,GemBox.Spreadsheet.LoadOptions)">
      <summary>
            Loads a spreadsheet from the specified stream.
            </summary>
      <param name="stream">The stream from which to load a spreadsheet.</param>
      <param name="options">The loading options which can be used to define settings for load operation.</param>
      <returns>A loaded spreadsheet.</returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Load(System.IO.TextReader,GemBox.Spreadsheet.CsvLoadOptions)">
      <summary>
            Loads a spreadsheet from CSV data using the specified reader.
            </summary>
      <param name="reader">The reader which is used to load a spreadsheet.</param>
      <param name="options">The CSV loading options which can be used to define settings for load operation.</param>
      <returns>A loaded spreadsheet.</returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)">
      <summary>
            Saves the spreadsheet to a file with the specified path.
            </summary>
      <param name="path">The path to which to save the spreadsheet.</param>
      <exception cref="T:System.ArgumentException">If file extension is not specified or not supported. If file extension is not recognized, use <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> method overload instead.</exception>
      <exception cref="T:System.PlatformNotSupportedException">File extension is not supported on the current platform.</exception>
      <remarks>
            File extension that is extracted from the <paramref name="path" /> is used to create the appropriate <see cref="T:GemBox.Spreadsheet.SaveOptions" />
            derived class instance that is then passed to the <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> method.
            <para>Following file extensions are supported:</para><list type="bullet"><item><description>Microsoft Excel: .xlsx, xlsm, .xltx, .xltm, .xls, .xlt, .xlsb</description></item><item><description>OpenDocument Spreadsheet: .ods, .ots</description></item><item><description>Character Separated Values: .csv, .tsv</description></item><item><description>HyperText Markup Language: .htm, .html, .mht, .mhtml</description></item><item><description>Portable Document Format: .pdf</description></item><item><description>XML Paper Specification: .xps</description></item><item><description>Image: .bmp, .gif, .jpg, .jpeg, .png, .tif, .tiff, .wdp</description></item></list></remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the spreadsheet to a file with the specified path.
            </summary>
      <param name="path">The path to which to save the spreadsheet.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.IO.Stream,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the spreadsheet to the specified stream.
            </summary>
      <param name="stream">The stream to which to save the spreadsheet.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.IO.TextWriter,GemBox.Spreadsheet.CsvSaveOptions)">
      <summary>
            Save the spreadsheet to CSV format using the specified writer.
            </summary>
      <param name="writer">The writer which is used to save the spreadsheet.</param>
      <param name="options">The CSV saving options which can be used to define settings for save operation.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.Xml.XmlWriter,GemBox.Spreadsheet.HtmlSaveOptions)">
      <summary>
            Save the spreadsheet to HTML format using the specified writer.
            </summary>
      <param name="writer">The writer which is used to save the spreadsheet.</param>
      <param name="options">The HTML saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.Object,System.String)">
      <summary>
            Saves the spreadsheet to a System.Web.HttpResponse or System.Web.HttpResponseBase output stream or a System.Net.Http.HttpResponseMessage and sets appropriate HTTP response headers (Content-Type and Content-Disposition). Use this method in ASP.NET application to send the spreadsheet to a client browser. File format is resolved from <paramref name="fileName" /> extension. See remarks why <paramref name="httpResponse" /> parameter is of type <see cref="T:System.Object" />.
            </summary>
      <param name="httpResponse">System.Web.HttpResponse object that can be retrieved through the Response property of the System.Web.HttpApplication, System.Web.HttpContext, System.Web.UI.Page or System.Web.UI.UserControl classes or System.Web.HttpResponseBase object or System.Net.Http.HttpResponseMessage object.</param>
      <param name="fileName">File name that will be presented in client browser when downloading a file.</param>
      <exception cref="T:System.ArgumentException">If file extension is not specified or not supported. If file extension is not recognized, use <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.Object,System.String,GemBox.Spreadsheet.SaveOptions)" /> method overload instead.</exception>
      <remarks>
        <note type="note">
      Supported only if updating the whole page with a postback and not if doing partial-page updates (when you use <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.updatepanel">UpdatePanel</see> controls to update selected regions of a page).
    </note>
        <para>
      This method accepts <see cref="T:System.Object" /> rather than <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponse">HttpResponse</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponsebase">HttpResponseBase</see> or <see href="https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpresponsemessage">HttpResponseMessage</see> because otherwise <b>GemBox.Document</b> assembly would have a dependency on <b>System.Web</b> or <b>System.Net.Http</b> assemblies and could not be used in applications which target <i>Client Profile .NET Framework</i>.
    </para>
        <para>
          <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponse">HttpResponse</see> can be retrieved through the <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.page.response">Response</see> property of the <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpapplication">HttpApplication</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpcontext">HttpContext</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.page">Page</see> or <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.usercontrol">UserControl</see> classes.
    </para>
        <para>For supported file extensions, see remarks for <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)" /> method.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/asp-net-excel-export-gridview/5101">Export Excel file with ASP.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.Object,System.String,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the spreadsheet to a System.Web.HttpResponse or System.Web.HttpResponseBase output stream or a System.Net.Http.HttpResponseMessage and sets appropriate HTTP response headers (Content-Type and Content-Disposition). Use this method in ASP.NET application to send the spreadsheet to a client browser. File format is defined with <paramref name="options" /> parameter. See remarks why <paramref name="httpResponse" /> parameter is of type <see cref="T:System.Object" />.
            </summary>
      <param name="httpResponse">System.Web.HttpResponse object that can be retrieved through the Response property of the System.Web.HttpApplication, System.Web.HttpContext, System.Web.UI.Page or System.Web.UI.UserControl classes or System.Web.HttpResponseBase object or System.Net.Http.HttpResponseMessage object.</param>
      <param name="fileName">File name that will be presented in client browser when downloading a file.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
      <remarks>
        <note type="note">
      Supported only if updating the whole page with a postback and not if doing partial-page updates (when you use <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.updatepanel">UpdatePanel</see> controls to update selected regions of a page).
    </note>
        <para>
      This method accepts <see cref="T:System.Object" /> rather than <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponse">HttpResponse</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponsebase">HttpResponseBase</see> or <see href="https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpresponsemessage">HttpResponseMessage</see> because otherwise <b>GemBox.Document</b> assembly would have a dependency on <b>System.Web</b> or <b>System.Net.Http</b> assemblies and could not be used in applications which target <i>Client Profile .NET Framework</i>.
    </para>
        <para>
          <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponse">HttpResponse</see> can be retrieved through the <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.page.response">Response</see> property of the <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpapplication">HttpApplication</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpcontext">HttpContext</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.page">Page</see> or <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.usercontrol">UserControl</see> classes.
    </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/asp-net-excel-export-gridview/5101">Export Excel file with ASP.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.ConvertToXpsDocument(GemBox.Spreadsheet.XpsSaveOptions)">
      <summary>
            Converts this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance to an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> instance.
            </summary>
      <param name="options">The options used when converting to XML Paper Specification (XPS) document.</param>
      <returns>A New <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> instance created from this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance.</returns>
      <seealso cref="T:GemBox.Spreadsheet.XpsSaveOptions" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.ConvertToImageSource(GemBox.Spreadsheet.ImageSaveOptions)">
      <summary>
            Converts single page specified in <paramref name="options" /> of this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance to an <see cref="T:System.Windows.Media.ImageSource" /> instance.
            </summary>
      <param name="options">The options used when converting a single spreadsheet's page to an image.</param>
      <returns>A new <see cref="T:System.Windows.Media.ImageSource" /> instance created from a single spreadsheet's page specified in <paramref name="options" />.</returns>
      <seealso cref="T:GemBox.Spreadsheet.ImageSaveOptions" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Print">
      <summary>
            Prints the document to the default printer.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-print-excel/451">Print Excel in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Print(System.String)">
      <summary>
            Prints the document to the specified printer.
            </summary>
      <param name="printerName">Printer name.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-print-excel/451">Print Excel in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Print(System.String,GemBox.Spreadsheet.PrintOptions)">
      <summary>
            Prints the document to the specified printer according to specified options.
            </summary>
      <param name="printerName">Printer name.</param>
      <param name="options">Print options.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-print-excel/451">Print Excel in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.GetPaginator">
      <summary>
            Gets the workbook paginator.
            </summary>
      <returns>
            The workbook paginator.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.GetPaginator(GemBox.Spreadsheet.PaginatorOptions)">
      <summary>
            Gets the workbook paginator based on the specified <paramref name="options" />.
            </summary>
      <param name="options">The paginator options used to specify which parts of the workbook to paginate.</param>
      <returns>
            The workbook paginator.
            </returns>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxColumns">
      <summary>
            Maximum number of columns in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <remarks>
            If you read/write XLS files, you are also limited by
            <see cref="F:GemBox.Spreadsheet.ExcelFile.MaxXlsColumns">ExcelFile.MaxXlsColumns</see>.
            </remarks>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxRows">
      <summary>
            Maximum number of rows in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <remarks>
            If you read/write XLS files, you are also limited by
            <see cref="F:GemBox.Spreadsheet.ExcelFile.MaxXlsRows">ExcelFile.MaxXlsRows</see>.
            </remarks>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxXlsCellStyles">
      <summary>
            Maximum number of user-defined cell styles in XLS (BIFF8) file.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxXlsColors">
      <summary>
            Maximum number of colors in XLS (BIFF8) file.
            </summary>
      <remarks>
            This number includes 8 default colors:
            <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color.black">Color.Black</see>, 
            <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color.white">Color.White</see>,
            <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color.red">Color.Red</see>, 
            <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color.green">Color.Green</see>,
            <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color.blue">Color.Blue</see>, 
            <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color.yellow">Color.Yellow</see>,
            <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color.magenta">Color.Magenta</see> and
            <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color.cyan">Color.Cyan</see>.
            </remarks>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxXlsColumns">
      <summary>
            Maximum number of columns in XLS (BIFF8) file.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxXlsRows">
      <summary>
            Maximum number of rows in XLS (BIFF8) file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.CsvAllowNewlineInQuotes">
      <summary>
            Gets or sets whether SaveCsv() methods will allow newline in quotes.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="true" />.</para>
        <para>If this property is <see langword="true" />, newline in quoted value will be threated as part of that value. 
            If this property is <see langword="false" />, newline in quoted value will be threated as the beginning of the new row.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.CsvAlwaysQuoteValues">
      <summary>
            Gets or sets whether SaveCsv() methods will always put values in quotes.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="true" />.</para>
        <para>All values (including numbers) in CSV files are stored as text. If this property is
            <see langword="true" />, any of <see cref="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.String,System.Char)" /> 
            overloads will always put values in quotes. If this property is <see langword="false" />, only values that
            contain special characters (quotes or CSV separator) will be quoted.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.CsvParseNumbersDuringLoad">
      <summary>
            Gets or sets whether LoadCsv() methods will try to convert text values to numbers.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="true" />.</para>
        <para>All values (including numbers) in CSV files are stored as text. By default, 
            any of <see cref="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.String,System.Char)" /> 
            overloads will try to parse text values as numbers and if successful
            cell will be filled with <see cref="T:System.Double" /> value. If
            you don't want such behavior (for example, you want IDs like "00935" to remain
            strings), set this property to <see langword="false" />.</para>
      </remarks>
    </member>
    <member name="E:GemBox.Spreadsheet.ExcelFile.IoWarning">
      <summary>
            Fired for unexpected situations when reading or writing XLS / CSV files.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.ExcelFile.LimitNear">
      <summary>
            Occurs when the size of XLS / CSV file in reading / writing is near <b>GemBox.Spreadsheet</b> free limit.
            </summary>
      <remarks>
        <para>This event is fired when 80% of maximum row count per worksheet is reached (150 * 0.8 = 120 rows) or when 5 worksheets are used.</para>
        <para>This event is not fired if <see cref="E:GemBox.Spreadsheet.ExcelFile.LimitReached" /> event is fired.</para>
        <para>You can use this event to detect when your application is close to <b>GemBox.Spreadsheet</b> free limit. 
            For example, you can write number of used rows to a log file or send a notification e-mail.</para>
      </remarks>
      <seealso cref="E:GemBox.Spreadsheet.ExcelFile.LimitReached" />
    </member>
    <member name="E:GemBox.Spreadsheet.ExcelFile.LimitReached">
      <summary>
            Occurs when the size of XLS / CSV file in reading / writing is above <b>GemBox.Spreadsheet</b> free limit.
            </summary>
      <remarks>
        <para>This event is fired when maximum row count per worksheet is reached (150 rows) or when more than 5 worksheets are used.</para>
        <para>You can use this event to notify a user of your application that data is only partially read / written.</para>
      </remarks>
      <seealso cref="E:GemBox.Spreadsheet.ExcelFile.LimitNear" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DefaultFontName">
      <summary>
            Gets or sets name of the default font used in the workbook.
            </summary>
      <remarks>
            Default value for this property is "Calibri".
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DefaultFontSize">
      <summary>
            Gets or sets default font size.
            </summary>
      <remarks>
        <para>Unit is twip (1/20th of a point).</para>
        <para>Default value of this property is 220.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DelayFormulaParse">
      <summary>
            Delays formula parsing until one of SaveXls methods is called.
            </summary>
      <remarks>
        <para>Old XLS format requires all formulas to be parsed and saved to XLS files as special
            tokens in RPN (Reverse Polish notation). GemBox.Spreadsheet only knows how to parse limited
            set of formulas listed at <see cref="P:GemBox.Spreadsheet.ExcelCell.Formula">ExcelCell.Formula</see>
            page. Only listed formulas can be saved to XLS file.</para>
        <para>New XLSX (Open XML) format stores formulas as strings and leaves formula parsing to applications
            that read XLSX documents. Therefore, ALL formulas are supported when writing/reading XLSX files.</para>
        <para>If this property is true, each set of <see cref="P:GemBox.Spreadsheet.ExcelCell.Formula">
            ExcelCell.Formula</see> property will just store formula string. When one of
            <see cref="M:GemBox.Spreadsheet.ExcelFile.SaveXls(System.String)">ExcelFile.SaveXls</see> methods is called
            formulas are parsed and exception is thrown if formula is not supported or in bad format.
            When XLSX is saved, formulas are not parsed, they are just saved as strings.
            If the formula is in bad format, MS Excel or other application will report an error in formula.
            </para>
        <para>If this property is false, formula string is parsed every time you set
            <see cref="P:GemBox.Spreadsheet.ExcelCell.Formula">ExcelCell.Formula</see> property. You will
            limit formulas to the ones supported by GemBox.Spreadsheet parser and the exception will be
            thrown immediately if the formula is not supported or in bad format.</para>
        <para>Default value of this property is <see langword="true" />.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.RowColumnResolutionMethod">
      <summary>
            Gets or sets the <see cref="T:GemBox.Spreadsheet.CellStyle" /> resolution method.
            </summary>
      <remarks>
        <para>
            Because of limitations of Microsoft Excel file format, every cell must be written to file with resolved <see cref="T:GemBox.Spreadsheet.CellStyle" />.
            In the case where a cell doesn't have specific property set on its <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> and 
            that property is set on both row and column that contain that cell, 
            a cell will inherit property value from row or column <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" />, depending on the resolution method.
            </para>
        <para>Default value for this property is <see cref="F:GemBox.Spreadsheet.RowColumnResolutionMethod.RowOverColumn" />.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.ClosePreservedXlsx">
      <summary>
            Closes preserved XLSX file handle if needed 
            (<see cref="F:GemBox.Spreadsheet.XlsxOptions.PreserveKeepOpen">XlsxOptions.PreserveKeepOpen</see> was
            used with <see cref="M:GemBox.Spreadsheet.ExcelFile.LoadXlsx(System.String,GemBox.Spreadsheet.XlsxOptions)">
            ExcelFile.LoadXlsx(string,XlsxOptions)</see> method). <b>(.NET 3.0 and greater only)</b></summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.IO.Stream,GemBox.Spreadsheet.CsvType)">
      <overloads>Loads the existing CSV file or stream.</overloads>
      <summary>
            Loads the existing stream with specified CSV format.
            </summary>
      <param name="stream">Input stream.</param>
      <param name="csvType">CSV type.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.IO.Stream,System.Char)">
      <summary>
            Loads the existing stream, using specified character as a delimiter.
            </summary>
      <param name="stream">Input stream.</param>
      <param name="separator">Separator used for delimiting data values.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.IO.StreamReader,GemBox.Spreadsheet.CsvType)">
      <summary>
            Loads all data using specified StreamReader and CSV Type.
            </summary>
      <remarks>
            Use this overload if you want to use a StreamReader with non-default encoding. 
            </remarks>
      <param name="reader">Stream reader.</param>
      <param name="csvType">CSV type.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.IO.StreamReader,System.Char)">
      <summary>
            Loads all data using specified StreamReader and character delimiter.
            </summary>
      <remarks>
            Use this overload if you want to use a StreamReader with non-default encoding. 
            </remarks>
      <param name="reader">Stream reader.</param>
      <param name="separator">Separator used for delimiting data values.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.String,GemBox.Spreadsheet.CsvType)">
      <summary>
            Loads the existing file with specified CSV format.
            </summary>
      <param name="path">Existing CSV file name (opened for reading).</param>
      <param name="csvType">CSV type.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.String,System.Char)">
      <summary>
            Loads the existing file, using specified character as a delimiter.
            </summary>
      <param name="path">File name.</param>
      <param name="separator">Separator used for delimiting data values.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadOds(System.IO.Stream,GemBox.Spreadsheet.OdsOptions)">
      <summary>
            Loads the existing ODS file from the input stream.
            </summary>
      <param name="stream">Input stream (opened for reading).</param>
      <param name="odsOptions">ODS options.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadOds(System.String,GemBox.Spreadsheet.OdsOptions)">
      <overloads>Loads the existing ODS file.</overloads>
      <summary>
            Loads the existing ODS file.
            </summary>
      <param name="path">Existing ODS file name.</param>
      <param name="odsOptions">ODS options.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadOdsFromDirectory(System.String,GemBox.Spreadsheet.OdsOptions)">
      <summary>
            Loads all parts of ODS file as separate files from input directory.
            </summary>
      <param name="path">Path of input directory.</param>
      <param name="odsOptions">ODS options.</param>
      <remarks>
            You need to use external ZIP library to extract all parts from ODS file.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadFromDirectory(System.String,GemBox.Spreadsheet.OdsLoadOptions)">
      <summary>
            Loads all parts of ODS file as separate files from input directory.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <param name="options">The ODS loading options which can be used to define settings for load operation.</param>
      <returns>A loaded ODS spreadsheet.</returns>
      <remarks>
            You need to use external ZIP library to extract all parts from ODS file.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXls(System.IO.Stream)">
      <summary>
            Loads the existing XLS file from the input stream (preserving MS Excel records).
            </summary>
      <param name="stream">Input stream.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXls(System.IO.Stream,GemBox.Spreadsheet.Xls.XlsOptions)">
      <summary>
            Loads the existing XLS file from the input stream (optionally preserving MS Excel records).
            </summary>
      <remarks>
        <para>If the only purpose of loading the file is to read data values and formatting using 
            GemBox.Spreadsheet API, you should use <paramref name="xlsOptions" /> set to <see cref="F:GemBox.Spreadsheet.Xls.XlsOptions.None">XlsOptions.None</see>
            as this will speed up the loading process.</para>
        <para>If you load the existing file to use it as template for a new file, you can choose
            whether you want to preserve specific MS Excel records not recognized by GemBox.Spreadsheet API.</para>
      </remarks>
      <param name="stream">Input stream.</param>
      <param name="xlsOptions">XLS options.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXls(System.String)">
      <overloads>Loads the existing XLS file or stream.</overloads>
      <summary>
            Loads the existing XLS file (preserving MS Excel records).
            </summary>
      <param name="path">Existing XLS file name (opened for reading).</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXls(System.String,GemBox.Spreadsheet.Xls.XlsOptions)">
      <summary>
            Loads the existing XLS file (optionally preserving MS Excel records).
            </summary>
      <remarks>
        <para>If the only purpose of loading the file is to read data values and formatting using 
            GemBox.Spreadsheet API, you should use <paramref name="xlsOptions" /> set to <see cref="F:GemBox.Spreadsheet.Xls.XlsOptions.None">XlsOptions.None</see>
            as this will speed up the loading process.</para>
        <para>If you load the existing file to use it as template for a new file, you can choose
            whether you want to preserve specific MS Excel records not recognized by GemBox.Spreadsheet API.</para>
      </remarks>
      <param name="path">Existing XLS file name (opened for reading).</param>
      <param name="xlsOptions">XLS options.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXlsx(System.IO.Stream,GemBox.Spreadsheet.XlsxOptions)">
      <summary>
            Loads the existing XLSX file from the input stream. <b>(.NET 3.0 and greater only)</b></summary>
      <remarks>
        <para>
          <b>This method throws <see cref="T:System.NotImplementedException" /> in GemBox.Spreadsheet builds which target .NET Framework 2.0 or lower.</b>
        </para>
      </remarks>
      <param name="stream">Input stream.</param>
      <param name="xlsxOptions">XLSX options.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXlsx(System.String,GemBox.Spreadsheet.XlsxOptions)">
      <overloads>Loads the existing XLSX file or stream. <b>(.NET 3.0 and greater only)</b></overloads>
      <summary>
            Loads the existing XLSX file. <b>(.NET 3.0 and greater only)</b></summary>
      <remarks>
        <para>
          <b>This method throws <see cref="T:System.NotImplementedException" /> in GemBox.Spreadsheet builds which target .NET Framework 2.0 or lower.</b>
        </para>
      </remarks>
      <param name="path">Existing XLSX file name (opened for reading).</param>
      <param name="xlsxOptions">XLSX options.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXlsxFromDirectory(System.String,GemBox.Spreadsheet.XlsxOptions)">
      <summary>
            Loads all parts of XLSX file as separate files from input directory.
            </summary>
      <param name="path">Path of input directory.</param>
      <param name="xlsxOptions">XLS options.</param>
      <remarks>
            You need to use external ZIP library to extract all parts from XLSX file.
            XlsxOptions.PreserveMakeCopy option does not work with LoadXlsxFromDirectory method.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadFromDirectory(System.String,GemBox.Spreadsheet.XlsxLoadOptions)">
      <summary>
            Loads all parts of XLSX file as separate files from input directory.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <param name="options">The XLSX loading options which can be used to define settings for load operation.</param>
      <returns>A loaded XLSX spreadsheet.</returns>
      <remarks>
            You need to use external ZIP library to extract all parts from XLSX file.
            XlsxOptions.PreserveMakeCopy option does not work with this method.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.IO.Stream,GemBox.Spreadsheet.CsvType)">
      <overloads>Saves all data to a new file or stream in CSV format.</overloads>
      <summary>
            Saves all data to a stream in a specified CSV format.
            </summary>
      <param name="stream">Output stream.</param>
      <param name="csvType">CSV type.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.IO.Stream,System.Char)">
      <summary>
            Saves all data to a stream, using specified character as a delimiter.
            </summary>
      <param name="stream">Output stream.</param>
      <param name="separator">Separator used for delimiting data values.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.IO.TextWriter,GemBox.Spreadsheet.CsvType)">
      <summary>
            Saves all data using specified TextWriter and CSV Type.
            </summary>
      <remarks>
            Use this overload if you want to use a TextWriter with non-default encoding. 
            Note that .NET Framework adds byte order mark (BOM) to files with non-default 
            encoding. MS Excel and other programs may fail to recognize CSV files with 
            non-default encoding.
            </remarks>
      <param name="writer">Text writer.</param>
      <param name="csvType">CSV type.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.IO.TextWriter,System.Char)">
      <summary>
            Saves all data using specified TextWriter and character delimiter.
            </summary>
      <remarks>
            Use this overload if you want to use a TextWriter with non-default encoding. 
            Note that .NET Framework adds byte order mark (BOM) to files with non-default 
            encoding. MS Excel and other programs may fail to recognize CSV files with 
            non-default encoding.
            </remarks>
      <param name="writer">Text writer.</param>
      <param name="separator">Separator used for delimiting data values.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.String,GemBox.Spreadsheet.CsvType)">
      <summary>
            Saves all data to a new file in a specified CSV format.
            </summary>
      <param name="path">File name.</param>
      <param name="csvType">CSV type.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.String,System.Char)">
      <summary>
            Saves all data to a new file, using specified character as a delimiter.
            </summary>
      <param name="path">File name.</param>
      <param name="separator">Separator used for delimiting data values.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveOds(System.IO.Stream)">
      <summary>
            Saves all data to an output stream in ODF format.
            </summary>
      <param name="stream">Output stream.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveOds(System.String)">
      <overloads>Saves all data to a new file in ODF format.</overloads>
      <summary>
            Saves all data to a new file in ODF format.
            </summary>
      <param name="path">File name.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveOdsToDirectory(System.String)">
      <summary>
            Saves all parts of ODS file as separate files to output directory.
            </summary>
      <remarks>
        <para>You need to use external ZIP library to package all created files to ODS file.</para>
        <note type="note">
            When using external ZIP library to package all created files to ODS file, only the contents of the directory should be zipped and not the directory itself.
            </note>
      </remarks>
      <param name="path">Path of output directory.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveToDirectory(System.String,GemBox.Spreadsheet.OdsSaveOptions)">
      <summary>
            Saves all parts of ODS file as separate files to output directory.
            </summary>
      <param name="path">Path of output directory.</param>
      <param name="options">Advanced save options.</param>
      <remarks>
        <para>You need to use external ZIP library to package all created files to ODS file.</para>
        <note type="note">
            When using external ZIP library to package all created files to ODS file, only the contents of the directory should be zipped and not the directory itself.
            </note>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveToHttpResponse(System.Object,System.String,System.Object[])">
      <summary>
            Saves the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to a System.Web.HttpResponse output stream and sets appropriate HTTP response headers. Use this method in ASP.NET application to send the document to a client browser. File format is resolved from <paramref name="options" /> parameter or <paramref name="fileName" /> parameter file extension as described in remarks. See remarks why <paramref name="httpResponse" /> parameter is of type <see cref="T:System.Object" />.
            </summary>
      <param name="httpResponse">HttpResponse object that can be retrieved through the Response property of the System.Web.HttpApplication, System.Web.HttpContext, System.Web.UI.Page or System.Web.UI.UserControl classes.</param>
      <param name="fileName">File name that will be presented in client browser when downloading a file.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
      <remarks>
        <para>This method accepts <see cref="T:System.Object" /> rather than <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponse">HttpResponse</see> because otherwise <b>GemBox.Spreadsheet</b> assembly would have a dependency on <b>System.Web</b> assembly and could not be used in applications which target <i>Client Profile .NET Framework</i>.</para>
        <para>
          <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponse">HttpResponse</see> can be retrieved through the <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.page.response">Response</see> property of the <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpapplication">HttpApplication</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpcontext">HttpContext</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.page">Page</see> or <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.usercontrol">UserControl</see> classes.</para>
        <para>File format in which <see cref="T:GemBox.Spreadsheet.ExcelFile" /> will be saved depends on the type of the first item in <paramref name="options" /> array as follows:</para>
        <list type="bullet">
          <item>
            <description>if <paramref name="options" /> array first item is of type <see cref="T:GemBox.Spreadsheet.XlsxSaveOptions" />, <see cref="T:GemBox.Spreadsheet.ExcelFile" /> will be saved in Microsoft Excel 2007 format,</description>
          </item>
          <item>
            <description>otherwise if <paramref name="options" /> array first item is of type <see cref="T:GemBox.Spreadsheet.CsvType" /> or <see cref="T:System.Char" />, <see cref="T:GemBox.Spreadsheet.ExcelFile" /> will be saved in Character separated value format,</description>
          </item>
          <item>
            <description>otherwise if <paramref name="options" /> array first item is of type <see cref="T:GemBox.Spreadsheet.HtmlSaveOptions" />, <see cref="T:GemBox.Spreadsheet.ExcelFile" /> will be saved in HyperText Markup Language format,</description>
          </item>
          <item>
            <description>otherwise, file format in which <see cref="T:GemBox.Spreadsheet.ExcelFile" /> is saved is resolved based on <paramref name="fileName" /> parameter file extension.</description>
          </item>
        </list>
        <para>Following file extensions are supported:</para>
        <list type="bullet">
          <item>
            <description>Microsoft Excel 2007 formats: .xlsx, .xlsm, .xltm, .xltx</description>
          </item>
          <item>
            <description>Microsoft Excel 97-2003 formats: .xls, .xlt</description>
          </item>
          <item>
            <description>Character separated value formats: .csv, .tsv</description>
          </item>
          <item>
            <description>OpenDocument Spreadsheet formats: .ods, .ots</description>
          </item>
          <item>
            <description>HyperText Markup Language formats: .htm, .html</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXls(System.IO.Stream)">
      <summary>
            Saves all data to an output stream in XLS format.
            </summary>
      <param name="stream">Output stream.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXls(System.String)">
      <overloads>Saves all data to a file or stream in XLS format.</overloads>
      <summary>
            Saves all data to a new file in XLS format.
            </summary>
      <param name="path">File name.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsx(System.IO.Stream)">
      <summary>
            Saves all data to an output stream in XLSX format. <b>(.NET 3.0 and greater only)</b></summary>
      <remarks>
        <para>
          <b>This method throws <see cref="T:System.NotImplementedException" /> in GemBox.Spreadsheet builds which target .NET Framework 2.0 or lower.</b>
        </para>
      </remarks>
      <param name="stream">Output stream.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsx(System.IO.Stream,GemBox.Spreadsheet.XlsxSaveOptions)">
      <summary>
            Saves all data to an output stream in XLSX format. <b>(.NET 3.0 and greater only)</b></summary>
      <remarks>
        <para>
          <b>This method throws <see cref="T:System.NotImplementedException" /> in GemBox.Spreadsheet builds which target .NET Framework 2.0 or lower.</b>
        </para>
      </remarks>
      <param name="stream">Output stream.</param>
      <param name="options">Advanced save options.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsx(System.String)">
      <overloads>Saves all data to a file or stream in XLSX format. <b>(.NET 3.0 and greater only)</b></overloads>
      <summary>
            Saves all data to a new file in XLSX format. <b>(.NET 3.0 and greater only)</b></summary>
      <remarks>
        <para>
          <b>This method throws <see cref="T:System.NotImplementedException" /> in GemBox.Spreadsheet builds which target .NET Framework 2.0 or lower.</b>
        </para>
      </remarks>
      <param name="path">File name.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsx(System.String,GemBox.Spreadsheet.XlsxSaveOptions)">
      <summary>
            Saves all data to a new file in XLSX format. <b>(.NET 3.0 and greater only)</b></summary>
      <remarks>
            /// <para><b>This method throws <see cref="T:System.NotImplementedException" /> in GemBox.Spreadsheet builds which target .NET Framework 2.0 or lower.</b></para></remarks>
      <param name="path">File name.</param>
      <param name="options">Advanced save options.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsxToDirectory(System.String)">
      <summary>
            Saves all parts of XLSX file as separate files to output directory.
            </summary>
      <remarks>
        <para>You need to use external ZIP library to package all created files to XLSX file.</para>
        <note type="note">
            When using external ZIP library to package all created files to XLSX file, only the contents of the directory should be zipped and not the directory itself.
            </note>
      </remarks>
      <param name="path">Path of output directory.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsxToDirectory(System.String,GemBox.Spreadsheet.XlsxSaveOptions)">
      <summary>
            Saves all parts of XLSX file as separate files to output directory.
            </summary>
      <remarks>
        <para>You need to use external ZIP library to package all created files to XLSX file.</para>
        <note type="note">
            When using external ZIP library to package all created files to XLSX file, only the contents of the directory should be zipped and not the directory itself.
            </note>
      </remarks>
      <param name="path">Path of output directory</param>
      <param name="options">Advanced save options.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveToDirectory(System.String,GemBox.Spreadsheet.XlsxSaveOptions)">
      <summary>
            Saves all parts of XLSX file as separate files to output directory.
            </summary>
      <param name="path">Path of output directory.</param>
      <param name="options">Advanced save options.</param>
      <remarks>
        <para>You need to use external ZIP library to package all created files to XLSX file.</para>
        <note type="note">
            When using external ZIP library to package all created files to XLSX file, only the contents of the directory should be zipped and not the directory itself.
            </note>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelFilePage">
      <summary>
            Represents a workbook page.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFilePage.Width">
      <summary>
            Gets the page width in <see cref="F:GemBox.Spreadsheet.LengthUnit.Point" />s.
            </summary>
      <value>
            The page width in <see cref="F:GemBox.Spreadsheet.LengthUnit.Point" />s.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFilePage.Height">
      <summary>
            Gets the page height in <see cref="F:GemBox.Spreadsheet.LengthUnit.Point" />s.
            </summary>
      <value>
            The page height in <see cref="F:GemBox.Spreadsheet.LengthUnit.Point" />s.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFilePage.PageContent">
      <summary>
            Gets the content of the page.
            </summary>
      <value>
            The content of the page.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFilePage.Save(System.IO.Stream,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the workbook page in the specified stream.
            </summary>
      <param name="stream">The stream in which to save the workbook page.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
      <remarks>Parameter <paramref name="options" />, currently, must be of type <see cref="T:GemBox.Spreadsheet.PdfSaveOptions" />, <see cref="T:GemBox.Spreadsheet.XpsSaveOptions" /> or <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFilePage.Save(System.String,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the workbook page to a file with the specified path.
            </summary>
      <param name="path">The path to which to save the workbook page.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
      <remarks>Parameter <paramref name="options" />, currently, must be of type <see cref="T:GemBox.Spreadsheet.PdfSaveOptions" />, <see cref="T:GemBox.Spreadsheet.XpsSaveOptions" /> or <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFilePage.Save(System.String)">
      <summary>
            Saves the workbook page to a file with the specified path. Path must include file extension.
            </summary>
      <param name="path">The path to which to save the workbook page.</param>
      <exception cref="T:System.ArgumentException">If file extension is not specified or not supported. If file extension is not recognized, use <see cref="M:GemBox.Spreadsheet.ExcelFilePage.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> method overload instead.</exception>
      <remarks>
            File extension that is extracted from the <paramref name="path" /> is used to create the appropriate <see cref="T:GemBox.Spreadsheet.SaveOptions" /> derived class instance that is then passed to the <see cref="M:GemBox.Spreadsheet.ExcelFilePage.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> method.
            <para>Following file extensions are supported:</para><list type="bullet"><item><description>Portable Document Format: .pdf</description></item><item><description>XML Paper Specification: .xps</description></item><item><description>Image: .bmp, .gif, .jpg, .jpeg, .png, .tif, .tiff, .wdp</description></item></list></remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelFilePaginator">
      <summary>
            Provides functionality to paginate the workbook content.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFilePaginator.Pages">
      <summary>
            Gets the workbook pages.
            </summary>
      <value>
            The workbook pages.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFilePaginator.Save(System.IO.Stream,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the paginated workbook to the specified stream.
            </summary>
      <param name="stream">The stream in which to save the paginated workbook.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
      <remarks>Parameter <paramref name="options" />, currently, must be of type <see cref="T:GemBox.Spreadsheet.PdfSaveOptions" />, <see cref="T:GemBox.Spreadsheet.XpsSaveOptions" /> or <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFilePaginator.Save(System.String,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the paginated workbook to a file with the specified path.
            </summary>
      <param name="path">The path to which to save the paginated workbook.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
      <remarks>Parameter <paramref name="options" />, currently, must be of type <see cref="T:GemBox.Spreadsheet.PdfSaveOptions" />, <see cref="T:GemBox.Spreadsheet.XpsSaveOptions" /> or <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFilePaginator.Save(System.String)">
      <summary>
            Saves the paginated workbook to a file with the specified path. Path must include file extension.
            </summary>
      <param name="path">The path to which to save the paginated workbook.</param>
      <exception cref="T:System.ArgumentException">If file extension is not specified or not supported. If file extension is not recognized, use <see cref="M:GemBox.Spreadsheet.ExcelFilePaginator.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> method overload instead.</exception>
      <remarks>
        <para>File extension that is extracted from the <paramref name="path" /> is used to create the appropriate <see cref="T:GemBox.Spreadsheet.SaveOptions" /> derived class instance that is then passed to the <see cref="M:GemBox.Spreadsheet.ExcelFilePaginator.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> method.</para>
        <para>Following file extensions are supported:</para>
        <list type="bullet">
          <item>
            <description>Portable Document Format: .pdf</description>
          </item>
          <item>
            <description>XML Paper Specification: .xps</description>
          </item>
          <item>
            <description>Image: .bmp, .gif, .jpg, .jpeg, .png, .tif, .tiff, .wdp</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFilePaginator.ConvertToXpsDocument(GemBox.Spreadsheet.XpsSaveOptions)">
      <summary>
            Converts this <see cref="T:GemBox.Spreadsheet.ExcelFilePaginator" /> instance to an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> instance.
            </summary>
      <param name="options">The options used when converting to XML Paper Specification (XPS) document.</param>
      <returns>
            A new <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> instance created from this <see cref="T:GemBox.Spreadsheet.ExcelFilePaginator" /> instance.
            </returns>
      <seealso cref="T:GemBox.Spreadsheet.XpsSaveOptions" />
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/excel-wpf/5201">Export Excel to XpsDocument in WPF</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFilePaginator.ConvertToImageSource(GemBox.Spreadsheet.ImageSaveOptions)">
      <summary>
            Converts single page specified in <paramref name="options" /> of this <see cref="T:GemBox.Spreadsheet.ExcelFilePaginator" /> instance to an <see cref="T:System.Windows.Media.ImageSource" /> instance.
            </summary>
      <param name="options">The options used when converting a single workbook's page to an image.</param>
      <returns>
            A new <see cref="T:System.Windows.Media.ImageSource" /> instance created from a single workbook's page specified in <paramref name="options" />.
            </returns>
      <seealso cref="T:GemBox.Spreadsheet.ImageSaveOptions" />
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/excel-wpf/5201">Export Excel in WPF</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFilePaginator.Print">
      <summary>
            Prints the paginated workbook to the default printer.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-print-excel/451">Print Excel files in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFilePaginator.Print(System.String)">
      <summary>
            Prints the paginated workbook to the specified printer.
            </summary>
      <param name="printerName">Printer name.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-print-excel/451">Print Excel files in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFilePaginator.Print(System.String,GemBox.Spreadsheet.PrintOptions)">
      <summary>
            Prints the paginated workbook to the specified printer according to specified options.
            </summary>
      <param name="printerName">Printer name.</param>
      <param name="options">Print options.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-print-excel/451">Print Excel files in C# and VB.NET</seealso>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelFileStore">
      <summary>
            Represents a collection of application-specific <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instances.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFileStore.AddExcelFile(System.Uri,GemBox.Spreadsheet.ExcelFile)">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to the store.
            </summary>
      <param name="uri">The key URI of the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to add to the store.</param>
      <param name="excelFile">The <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to add to the store.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFileStore.GetExcelFile(System.Uri)">
      <summary>
            Returns the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> with a specified URI from the store.
            </summary>
      <param name="uri">The uniform resource identifier (URI) of the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to return.</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.ExcelFile" /> with a specified <paramref name="uri" />; or null, if an <see cref="T:GemBox.Spreadsheet.ExcelFile" /> with the specified <paramref name="uri" /> is not in the store.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFileStore.RemoveExcelFile(System.Uri)">
      <summary>
            Removes the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> with a specified URI from the store.
            </summary>
      <param name="uri">The uniform resource identifier (URI) of the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to remove.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelFillPattern">
      <summary>
            Represents cell fill (background) formatting which can be either pattern or gradient.
            </summary>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.PatternStyle">
      <summary>
        <para>Gets or sets the pattern fill style.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.FillPatternStyle.None" />.</para>
        <para>Currently supported only in XLSX, XLSB and XLS. For all other formats it defaults to either <see cref="F:GemBox.Spreadsheet.FillPatternStyle.None" /> or <see cref="F:GemBox.Spreadsheet.FillPatternStyle.Solid" />.</para>
        <para>If set value is not <see cref="F:GemBox.Spreadsheet.FillPatternStyle.None" />, then <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor" /> and/or <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternBackgroundColor" /> should also be set.</para>
      </summary>
      <value>
            The pattern fill style.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor">
      <summary>
        <para>Gets or sets the pattern fill foreground color.</para>
        <para>Default value is color created from name <see cref="F:GemBox.Spreadsheet.ColorName.Empty" />.</para>
      </summary>
      <value>
            The pattern fill foreground color.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.PatternBackgroundColor">
      <summary>
        <para>Gets or sets the pattern fill background color.</para>
        <para>Default value is color created from name <see cref="F:GemBox.Spreadsheet.ColorName.Empty" />.</para>
      </summary>
      <value>
            The pattern fill background color.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.GradientStyle">
      <summary>
        <para>Gets or sets the shading style of the gradient fill effect, if there is any gradient fill effect applied.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.GradientShadingStyle.None" />.</para>
        <para>Gradient fill is currently supported in XLSX, XLSB and partially in rendering formats (PDF, XPS and image formats).</para>
      </summary>
      <value>
            The shading style of the gradient fill effect, if there is any gradient fill effect applied.
            </value>
      <exception cref="T:System.ArgumentException">Value cannot be set to <see cref="F:GemBox.Spreadsheet.GradientShadingStyle.Complex" />.</exception>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.GradientColor1">
      <summary>
        <para>Gets or sets the first color of the gradient fill effect.</para>
        <para>Default value is color created from name <see cref="F:GemBox.Spreadsheet.ColorName.Empty" />.</para>
        <para>Gradient fill is currently supported in XLSX, XLSB and partially in rendering formats (PDF, XPS and image formats).</para>
      </summary>
      <value>
            The first color of the gradient fill effect.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.GradientColor2">
      <summary>
        <para>Gets or sets the second color of the gradient fill effect.</para>
        <para>Default value is color created from name <see cref="F:GemBox.Spreadsheet.ColorName.Empty" />.</para>
        <para>Gradient fill is currently supported in XLSX, XLSB and partially in rendering formats (PDF, XPS and image formats).</para>
      </summary>
      <value>
            The second color of the gradient fill effect.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFillPattern.SetSolid(GemBox.Spreadsheet.SpreadsheetColor)">
      <summary>
        <para>Sets the solid pattern fill with the specified fill color.</para>
        <para>Sets <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternStyle" /> to <see cref="F:GemBox.Spreadsheet.FillPatternStyle.Solid" /> and <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor" /> to <paramref name="fillColor" />.</para>
      </summary>
      <param name="fillColor">Foreground color of the solid pattern fill.</param>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFillPattern.SetPattern(GemBox.Spreadsheet.FillPatternStyle,GemBox.Spreadsheet.SpreadsheetColor,GemBox.Spreadsheet.SpreadsheetColor)">
      <summary>
            Sets the pattern fill.
            </summary>
      <param name="patternStyle">The pattern style.</param>
      <param name="foregroundColor">Foreground color of the pattern fill.</param>
      <param name="backgroundColor">Background color of the pattern fill.</param>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFillPattern.SetGradient(GemBox.Spreadsheet.GradientShadingStyle,GemBox.Spreadsheet.SpreadsheetColor,GemBox.Spreadsheet.SpreadsheetColor)">
      <summary>
            Sets the gradient fill effect.
            </summary>
      <param name="gradientStyle">The shading style of the gradient fill effect.</param>
      <param name="gradientColor1">The first color of the gradient fill effect.</param>
      <param name="gradientColor2">The second color of the gradient fill effect.</param>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFillPattern.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelFillPattern" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelFillPattern" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelFont">
      <summary>
            Represents a typeface (for example, <b>Calibri</b>), along with its attributes (size, font style, underlining, color, and effects).
            </summary>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.Font" />
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFont.MinWeight">
      <summary>
            Minimum font weight.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.ExcelFont.Weight" />
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFont.NormalWeight">
      <summary>
            Normal font weight.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.ExcelFont.Weight" />
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFont.BoldWeight">
      <summary>
            Default bold font weight.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.ExcelFont.Weight" />
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFont.MaxWeight">
      <summary>
            Maximum font weight.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.ExcelFont.Weight" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFont.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.ExcelFont" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Name">
      <summary>
        <para>Gets or sets the face name of this font.</para>
        <para>Default value is <b>Calibri</b>.</para>
      </summary>
      <value>
            The face name of this font.
            </value>
      <exception cref="T:System.ArgumentException">Value cannot be null or empty.</exception>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Weight">
      <summary>
        <para>Gets or sets the font weight (font boldness).</para>
        <para>Value must be between <see cref="F:GemBox.Spreadsheet.ExcelFont.MinWeight" /> and <see cref="F:GemBox.Spreadsheet.ExcelFont.MaxWeight" />.</para>
        <para>For standard boldness, use <see cref="F:GemBox.Spreadsheet.ExcelFont.BoldWeight" />.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.ExcelFont.NormalWeight" />.</para>
      </summary>
      <value>
            The font weight (font boldness).
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value must be between <see cref="F:GemBox.Spreadsheet.ExcelFont.MinWeight" /> and <see cref="F:GemBox.Spreadsheet.ExcelFont.MaxWeight" />.</exception>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Italic">
      <summary>
        <para>Gets or sets a value indicating whether to display characters in italic font style.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> to display characters in italic font style; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Size">
      <summary>
        <para>Gets or sets the size of the text in twips (1/20th of a point).</para>
        <para>Default value is 11 * 20 = 220.</para>
      </summary>
      <value>
            The size of the text.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value must be positive.</exception>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Color">
      <summary>
        <para>Gets or sets the color of the text.</para>
        <para>Default value is color created from name <see cref="F:GemBox.Spreadsheet.ColorName.Text1" />.</para>
      </summary>
      <value>
            The color of the text.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.UnderlineStyle">
      <summary>
        <para>Gets or sets the underline formatting of the text.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.UnderlineStyle.None" />.</para>
      </summary>
      <value>
            The underline formatting of the text.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Strikeout">
      <summary>
        <para>Gets or sets a value indicating whether to draw a strike-through line through the horizontal middle of the text.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> to draw a strike-through line through the horizontal middle of the text; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.ScriptPosition">
      <summary>
        <para>Gets or sets the vertical position of the text relative to the text's default appearance.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.ScriptPosition.Normal" />.</para>
      </summary>
      <value>
            The vertical position of the text relative to the text's default appearance.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFont.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelFont" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelFont" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelObjectSourceType">
      <summary>
            Represents an enumeration of possible sources of various objects (such as pictures, audio and other files) that can be either embedded, linked or both.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelObjectSourceType.Embed">
      <summary>
            Object is embedded in the file in which <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance is saved.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelObjectSourceType.Link">
      <summary>
            Object is linked to the file in which <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance is saved.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelObjectSourceType.EmbedAndLink">
      <summary>
            Object is embedded and linked to the file in which <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance is saved.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelPicture">
      <summary>
            Represents a picture in the worksheet.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.Pictures">ExcelWorksheet.Pictures</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.PictureStream">
      <summary>
            Gets the picture stream.
            </summary>
      <value>
            The picture stream.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.PictureFormat">
      <summary>
            Gets the picture format.
            </summary>
      <value>
            The picture format.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.TransparentColor">
      <summary>
            Gets or sets the transparent color in the image. By default, no transparent color is set.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPicture.ToImage">
      <summary>
            Converts this <see cref="T:GemBox.Spreadsheet.ExcelPicture" /> instance to a new <see cref="T:System.Drawing.Image" /> instance.
            </summary>
      <returns>A new <see cref="T:System.Drawing.Image" /> instance created from this <see cref="T:GemBox.Spreadsheet.ExcelPicture" /> instance.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPicture.Delete">
      <summary>
            Removes this <see cref="T:GemBox.Spreadsheet.ExcelPicture" /> instance from the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPicture.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelPicture" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelPicture" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.Image">
      <summary>
        <para>This property is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPicture.ToImage" /> method instead.</para>
        <para>Gets the picture as <see cref="T:System.Drawing.Image" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.BottomRightCell">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> property and its <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.To" /> property instead.</para>
        <para>Gets or sets the bottom right anchor cell for the picture.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.BoundingRectangle">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> property and its <see cref="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetLeft(GemBox.Spreadsheet.LengthUnit)" />, <see cref="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetTop(GemBox.Spreadsheet.LengthUnit)" />, <see cref="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetWidth(GemBox.Spreadsheet.LengthUnit)" /> and <see cref="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetHeight(GemBox.Spreadsheet.LengthUnit)" /> methods instead.</para>
        <para>Gets the image bounding rectangle.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.ImageStream">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelPicture.PictureStream" /> property instead.</para>
        <para>Gets the image stream.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.Positioning">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> property and its <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> property instead.</para>
        <para>Gets or sets the positioning options of the picture.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.TopLeftCell">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> property and its <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.From" /> property instead.</para>
        <para>Gets or sets the top left anchor cell for the picture.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelPictureCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.ExcelPicture">picture</see>s in the worksheet.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.Pictures">ExcelWorksheet.Pictures</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="pictureStream">The picture's stream.</param>
      <param name="pictureFormat">The picture's format.</param>
      <param name="left">The distance of the left edge of the picture from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the picture from the top edge of the worksheet.</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which doesn't move nor sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.FreeFloating" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="left">The distance of the left edge of the picture from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the picture from the top edge of the worksheet.</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which doesn't move nor sizes with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.FreeFloating" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit,GemBox.Spreadsheet.ExcelObjectSourceType)">
      <summary>
            Adds a new picture to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="left">The distance of the left edge of the picture from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the picture from the top edge of the worksheet.</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <param name="sourceType">the picture's embedding or linking setting.</param>
      <returns>A new picture added to the worksheet which doesn't move nor sizes with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.FreeFloating" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which doesn't move nor sizes with cells. Picture size will be determined by decoding the image data.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="left">The distance of the left edge of the picture from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the picture from the top edge of the worksheet.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which doesn't move nor sizes with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.FreeFloating" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
        <para>This method decodes image data to determine picture's size.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit,GemBox.Spreadsheet.ExcelObjectSourceType)">
      <summary>
            Adds a new picture to the worksheet which doesn't move nor sizes with cells. Picture size will be determined by decoding the image data.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="left">The distance of the left edge of the picture from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the picture from the top edge of the worksheet.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <param name="sourceType">the picture's embedding or linking setting.</param>
      <returns>A new picture added to the worksheet which doesn't move nor sizes with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.FreeFloating" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
        <para>This method decodes image data to determine picture's size.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="pictureStream">The picture's stream.</param>
      <param name="pictureFormat">The picture's format.</param>
      <param name="positionFrom">The picture's position.</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="pictureStream">The picture's stream.</param>
      <param name="pictureFormat">The picture's format.</param>
      <param name="positionFromCell">The picture's position (for example, "A1").</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFrom">The picture's position.</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit,GemBox.Spreadsheet.ExcelObjectSourceType)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFrom">The picture's position.</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <param name="sourceType">the picture's embedding or linking setting.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFromCell">The picture's position (for example, "A1").</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit,GemBox.Spreadsheet.ExcelObjectSourceType)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFromCell">The picture's position (for example, "A1").</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <param name="sourceType">the picture's embedding or linking setting.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells. Picture size will be determined by decoding the image data.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFrom">The picture's position.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
        <para>This method decodes image data to determine picture's size.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.ExcelObjectSourceType)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells. Picture size will be determined by decoding the image data.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFrom">The picture's position.</param>
      <param name="sourceType">the picture's embedding or linking setting.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
        <para>This method decodes image data to determine picture's size.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.String)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells. Picture size will be determined by using decoding the image data.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFromCell">The picture's position (for example, "A1").</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
        <para>This method decodes image data to determine picture's size.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.String,GemBox.Spreadsheet.ExcelObjectSourceType)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells. Picture size will be determined by decoding the image data.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFromCell">The picture's position (for example, "A1").</param>
      <param name="sourceType">the picture's embedding or linking setting.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.Move" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
        <para>This method decodes image data to determine picture's size.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new picture to the worksheet which moves and sizes with cells.
            </summary>
      <param name="pictureStream">The picture's stream.</param>
      <param name="pictureFormat">The picture's format.</param>
      <param name="positionFrom">The picture's position (top-left corner).</param>
      <param name="positionTo">The picture's end position (bottom-right corner).</param>
      <returns>A new picture added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,System.String,System.String)">
      <summary>
            Adds a new picture to the worksheet which moves and sizes with cells.
            </summary>
      <param name="pictureStream">The picture's stream.</param>
      <param name="pictureFormat">The picture's format.</param>
      <param name="positionFromCell">The picture's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The picture's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new picture added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new picture to the worksheet which moves and sizes with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFrom">The picture's position (top-left corner).</param>
      <param name="positionTo">The picture's end position (bottom-right corner).</param>
      <returns>A new picture added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.ExcelObjectSourceType)">
      <summary>
            Adds a new picture to the worksheet which moves and sizes with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFrom">The picture's position (top-left corner).</param>
      <param name="positionTo">The picture's end position (bottom-right corner).</param>
      <param name="sourceType">the picture's embedding or linking setting.</param>
      <returns>A new picture added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.String,System.String)">
      <summary>
            Adds a new picture to the worksheet which moves and sizes with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFromCell">The picture's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The picture's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new picture added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.String,System.String,GemBox.Spreadsheet.ExcelObjectSourceType)">
      <summary>
            Adds a new picture to the worksheet which moves and sizes with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFromCell">The picture's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The picture's end position (bottom-right corner) (for example, "B2").</param>
      <param name="sourceType">the picture's embedding or linking setting.</param>
      <returns>A new picture added to the worksheet which moves and sizes with cells.</returns>
      <remarks>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" />.<see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> of a newly added picture will be <see cref="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize" />.</para>
        <para>
          <paramref name="picturePath" /> parameter must contain supported extension (for example, ".png"), otherwise exception is thrown.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead.</para>
        <para>Adds the image with defined anchor properties.</para>
      </summary>
      <param name="pictureStream">Stream of the image to be added.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="positionFrom">Top left anchor cell.</param>
      <param name="positionTo">Bottom right anchor cell.</param>
      <param name="pictureFormat">Picture format.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
      <remarks>If column or row offset is greater then that row height or that column width, excel will show image as that offset is set to 0.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead. Parameters <i>width</i> and <i>height</i> can, for example, be retrieved by using <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.image.fromstream#System_Drawing_Image_FromStream_System_IO_Stream_">Image.FromStream(Stream)</see> method and <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.image.size">Image.Size</see> property. Note that image instance must be disposed.</para>
        <para>Adds the image by using defined top left anchor property and default width/height.</para>
      </summary>
      <param name="pictureStream">Stream of the image to be added.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="positionFrom">Top left anchor cell.</param>
      <param name="pictureFormat">Picture format.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,System.Int32,System.Int32,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead.</para>
        <para>Adds the image from specified fileName by using defined top left anchor property and defined width and height.</para>
      </summary>
      <param name="pictureStream">Stream of the image to be added.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="positionFrom">Top left anchor cell.</param>
      <param name="width">Image width (in pixels).</param>
      <param name="height">Image height (in pixels).</param>
      <param name="pictureFormat">Picture format.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead.</para>
        <para>Adds the image from specified fileName by using defined top left anchor property and default width/height.</para>
      </summary>
      <param name="picturePath">File name of the image to be added.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="positionFrom">Top left anchor cell.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead.</para>
        <para>Adds the image from specified fileName with defined anchor properties.</para>
      </summary>
      <param name="picturePath">File name of the image to be added.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="positionFrom">Top left anchor cell.</param>
      <param name="positionTo">Bottom right anchor cell.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
      <remarks>If column or row offset is greater then that row height or that column width, excel will show image as that offset is set to 0.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,System.Int32,System.Int32)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead.</para>
        <para>Adds the image from specified fileName by using defined top left anchor property and defined width and height.</para>
      </summary>
      <param name="picturePath">File name of the image to be added.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="positionFrom">Top left anchor cell.</param>
      <param name="width">Image width (in pixels).</param>
      <param name="height">Image height (in pixels).</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelPictureFormat">
      <summary>
            Picture formats.
            </summary>
      <remarks>
            In xls, only <see cref="F:GemBox.Spreadsheet.ExcelPictureFormat.Jpeg" />, <see cref="F:GemBox.Spreadsheet.ExcelPictureFormat.Png" /> and <see cref="F:GemBox.Spreadsheet.ExcelPictureFormat.Emf" /> formats are supported.
            </remarks>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Jpeg">
      <summary>
            Jpeg picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Png">
      <summary>
            Png picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Tiff">
      <summary>
            Tiff picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Gif">
      <summary>
            Gif picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Emf">
      <summary>
            Emf picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Wmf">
      <summary>
            Wmf picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Bmp">
      <summary>
            Bmp picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Exif">
      <summary>
            Exif picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Ico">
      <summary>
            Ico picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Svg">
      <summary>
            Svg picture format.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelPrintOptions">
      <summary>
            Stores MS Excel print and print related options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.VerticalCentered">
      <summary>
        <see langword="true" /> for printing sheet vertical centered, <see langword="false" /> otherwise.
            </summary>
      <remarks>
            Default value for this property is <see langword="false" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.HorizontalCentered">
      <summary>
        <see langword="true" /> for printing sheet horizontal centered, <see langword="false" /> otherwise.
            </summary>
      <remarks>
            Default value for this property is <see langword="false" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintHeadings">
      <summary>
        <see langword="true" /> for print headings, <see langword="false" /> otherwise.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="false" />.</para>
        <para>Except from printing and exporting to fixed document and rendering formats, such as PDF, XPS and image file formats, <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintHeadings" /> is also supported when exporting to HTML file format.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintGridlines">
      <summary>
        <see langword="true" /> for printing gridlines, <see langword="false" /> otherwise.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="false" />.</para>
        <para>Except from printing and exporting to fixed document and rendering formats, such as PDF, XPS and image file formats, <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintGridlines" /> is also supported when exporting to HTML file format.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintPagesInRows">
      <summary>
        <see langword="true" /> for printing pages in rows, <see langword="false" /> otherwise.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="false" />.</para>
        <para>
      This member is supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.Print">printing</see>.
    </para>
        <para>
          <b>GemBox.Spreadsheet</b> uses <see href="https://docs.microsoft.com/en-us/dotnet/framework/wpf/advanced/printing-overview">enhanced printing services</see> provided with Windows Presentation Foundation (WPF).
      All pages of a specific <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> will be printed with settings from <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.PrintOptions" /> of that worksheet.
      Internally, WPF printing uses <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> class to specify page printing settings
      and value of this member is applied to appropriate member of <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance
      which is used to print all pages of a worksheet with this print options member.
    </para>
        <para>
          <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance which is used to print every page of a worksheet is constructed in following order:
    </para>
        <list type="ordered">
          <item>
            <description>
          Based on stream specified in <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor (base print ticket).
        </description>
          </item>
          <item>
            <description>
          Appropriate base print ticket members are set based on <see cref="T:GemBox.Spreadsheet.PrintOptions" /> instance members values.
        </description>
          </item>
          <item>
            <description>
          Base print ticket is cloned for each worksheet, clone's appropriate members are set based on <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> instance of that worksheet and clone is used to print all pages of that worksheet.
        </description>
          </item>
        </list>
        <para>
      Printing settings which do not exist in <see cref="T:GemBox.Spreadsheet.PrintOptions" /> nor in <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> can be specified on base print ticket (which stream is passed to <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor).
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintBlackWhite">
      <summary>
        <see langword="true" /> for printing in black and white, <see langword="false" /> otherwise.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="false" />.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
        <para>
      This member is supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.Print">printing</see>.
    </para>
        <para>
          <b>GemBox.Spreadsheet</b> uses <see href="https://docs.microsoft.com/en-us/dotnet/framework/wpf/advanced/printing-overview">enhanced printing services</see> provided with Windows Presentation Foundation (WPF).
      All pages of a specific <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> will be printed with settings from <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.PrintOptions" /> of that worksheet.
      Internally, WPF printing uses <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> class to specify page printing settings
      and value of this member is applied to appropriate member of <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance
      which is used to print all pages of a worksheet with this print options member.
    </para>
        <para>
          <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance which is used to print every page of a worksheet is constructed in following order:
    </para>
        <list type="ordered">
          <item>
            <description>
          Based on stream specified in <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor (base print ticket).
        </description>
          </item>
          <item>
            <description>
          Appropriate base print ticket members are set based on <see cref="T:GemBox.Spreadsheet.PrintOptions" /> instance members values.
        </description>
          </item>
          <item>
            <description>
          Base print ticket is cloned for each worksheet, clone's appropriate members are set based on <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> instance of that worksheet and clone is used to print all pages of that worksheet.
        </description>
          </item>
        </list>
        <para>
      Printing settings which do not exist in <see cref="T:GemBox.Spreadsheet.PrintOptions" /> nor in <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> can be specified on base print ticket (which stream is passed to <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor).
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.DraftQuality">
      <summary>
        <see langword="true" /> for printing in draft quality, <see langword="false" /> otherwise.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="false" />.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
        <para>
      This member is supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.Print">printing</see>.
    </para>
        <para>
          <b>GemBox.Spreadsheet</b> uses <see href="https://docs.microsoft.com/en-us/dotnet/framework/wpf/advanced/printing-overview">enhanced printing services</see> provided with Windows Presentation Foundation (WPF).
      All pages of a specific <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> will be printed with settings from <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.PrintOptions" /> of that worksheet.
      Internally, WPF printing uses <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> class to specify page printing settings
      and value of this member is applied to appropriate member of <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance
      which is used to print all pages of a worksheet with this print options member.
    </para>
        <para>
          <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance which is used to print every page of a worksheet is constructed in following order:
    </para>
        <list type="ordered">
          <item>
            <description>
          Based on stream specified in <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor (base print ticket).
        </description>
          </item>
          <item>
            <description>
          Appropriate base print ticket members are set based on <see cref="T:GemBox.Spreadsheet.PrintOptions" /> instance members values.
        </description>
          </item>
          <item>
            <description>
          Base print ticket is cloned for each worksheet, clone's appropriate members are set based on <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> instance of that worksheet and clone is used to print all pages of that worksheet.
        </description>
          </item>
        </list>
        <para>
      Printing settings which do not exist in <see cref="T:GemBox.Spreadsheet.PrintOptions" /> nor in <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> can be specified on base print ticket (which stream is passed to <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor).
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintCellNotes">
      <summary>
        <see langword="true" /> for printing cell notes, <see langword="false" /> otherwise.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="false" />.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.UseStartPageNumber">
      <summary>
        <see langword="true" /> for using start page number, <see langword="false" /> otherwise.
            </summary>
      <remarks>
            Default value for this property is <see langword="false" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintNotesSheetEnd">
      <summary>
        <see langword="true" /> for printing notes at end of sheet, <see langword="false" /> otherwise.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="false" />.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.HeaderMargin">
      <summary>
            Header margin (in inches).
            </summary>
      <remarks>
            Default value for this property is 0.3.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.FooterMargin">
      <summary>
            Footer margin (in inches).
            </summary>
      <remarks>
            Default value for this property is 0.3.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.TopMargin">
      <summary>
            Top margin (in inches).
            </summary>
      <remarks>
            Default value for this property is 0.75.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.BottomMargin">
      <summary>
            Bottom margin (in inches).
            </summary>
      <remarks>
            Default value for this property is 0.75.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.LeftMargin">
      <summary>
            Left margin (in inches).
            </summary>
      <remarks>
            Default value for this property is 0.7.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.RightMargin">
      <summary>
            Right margin (in inches).
            </summary>
      <remarks>
            Default value for this property is 0.7.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.FitToPage">
      <summary>
        <see langword="true" /> for using 
            <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetHeightToPages" />
            and <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetWidthToPages" />, 
            <see langword="false" /> otherwise.
            </summary>
      <remarks>
        <para>This property determines whether <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.AutomaticPageBreakScalingFactor" />
            or <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetHeightToPages" />
            and <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetWidthToPages" />
            will be used in printing.</para>
        <para>Default value for this property is <see langword="false" />.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.AutomaticPageBreakScalingFactor">
      <summary>
            Scaling factor for automatic page breaks.
            </summary>
      <remarks>
        <para>Unit is one percent. Value must be between 10 and 400.</para>
        <para>Default value for this property is 100.</para>
        <para>MS Excel inserts automatic page breaks depending on this scaling factor. 
            Smaller it gets, bigger will be the distance between the two automatic page breaks.</para>
        <para>If you set this property, <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.FitToPage" />
            will automatically be set to <see langword="false" />.</para>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is out of 10 to 400 range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PageWidth">
      <summary>
            Gets the width of the page (in inches).
            </summary>
      <value>
            The width of the page.
            </value>
      <remarks>
        <para>If the <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.PaperType" /> is <see cref="F:GemBox.Spreadsheet.PaperType.Custom">PaperType.Custom</see>, this will return page width from printer settings.</para>
        <para>Accessing printer settings (if <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.PaperType" /> is <see cref="F:GemBox.Spreadsheet.PaperType.Custom" />) doesn't work in Medium Trust.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PageHeight">
      <summary>
            Gets the height of the page (in inches).
            </summary>
      <value>
            The height of the page.
            </value>
      <remarks>
        <para>If the <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.PaperType" /> is <see cref="F:GemBox.Spreadsheet.PaperType.Custom">PaperType.Custom</see>, this will return page height from printer settings.</para>
        <para>Accessing printer settings (if <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.PaperType" /> is <see cref="F:GemBox.Spreadsheet.PaperType.Custom" />) doesn't work in Medium Trust.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PaperType">
      <summary>
            Gets or sets the type of the paper for the page. 
            </summary>
      <remarks>
        <para>Default value for this property is <see cref="F:GemBox.Spreadsheet.PaperType.A4" />.</para>
        <para>
      This member is supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.Print">printing</see>.
    </para>
        <para>
          <b>GemBox.Spreadsheet</b> uses <see href="https://docs.microsoft.com/en-us/dotnet/framework/wpf/advanced/printing-overview">enhanced printing services</see> provided with Windows Presentation Foundation (WPF).
      All pages of a specific <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> will be printed with settings from <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.PrintOptions" /> of that worksheet.
      Internally, WPF printing uses <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> class to specify page printing settings
      and value of this member is applied to appropriate member of <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance
      which is used to print all pages of a worksheet with this print options member.
    </para>
        <para>
          <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance which is used to print every page of a worksheet is constructed in following order:
    </para>
        <list type="ordered">
          <item>
            <description>
          Based on stream specified in <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor (base print ticket).
        </description>
          </item>
          <item>
            <description>
          Appropriate base print ticket members are set based on <see cref="T:GemBox.Spreadsheet.PrintOptions" /> instance members values.
        </description>
          </item>
          <item>
            <description>
          Base print ticket is cloned for each worksheet, clone's appropriate members are set based on <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> instance of that worksheet and clone is used to print all pages of that worksheet.
        </description>
          </item>
        </list>
        <para>
      Printing settings which do not exist in <see cref="T:GemBox.Spreadsheet.PrintOptions" /> nor in <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> can be specified on base print ticket (which stream is passed to <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor).
    </para>
      </remarks>
      <value>
            The type of the paper.
            </value>
      <exception cref="T:System.ArgumentException">Thrown if type is set to
            <see cref="F:GemBox.Spreadsheet.PaperType.Custom">PaperType.Custom</see></exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.StartPageNumber">
      <summary>
            Start page number.
            </summary>
      <remarks>
            Default value for this property is 1.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetWidthToPages">
      <summary>
            Fit worksheet width to this number of pages (0 = use as many as needed).
            </summary>
      <remarks>
        <para>Default value for this property is 0.</para>
        <para>If you set this property, <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.FitToPage" />
            will automatically be set to <see langword="true" />.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetHeightToPages">
      <summary>
            Fit worksheet height to this number of pages (0 = use as many as needed).
            </summary>
      <remarks>
        <para>Default value for this property is 0.</para>
        <para>If you set this property, <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.FitToPage" />
            will automatically be set to <see langword="true" />.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.Portrait">
      <summary>
        <see langword="true" /> for portrait orientation, <see langword="false" /> for landscape orientation.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="true" />.</para>
        <para>
      This member is supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.Print">printing</see>.
    </para>
        <para>
          <b>GemBox.Spreadsheet</b> uses <see href="https://docs.microsoft.com/en-us/dotnet/framework/wpf/advanced/printing-overview">enhanced printing services</see> provided with Windows Presentation Foundation (WPF).
      All pages of a specific <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> will be printed with settings from <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.PrintOptions" /> of that worksheet.
      Internally, WPF printing uses <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> class to specify page printing settings
      and value of this member is applied to appropriate member of <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance
      which is used to print all pages of a worksheet with this print options member.
    </para>
        <para>
          <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance which is used to print every page of a worksheet is constructed in following order:
    </para>
        <list type="ordered">
          <item>
            <description>
          Based on stream specified in <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor (base print ticket).
        </description>
          </item>
          <item>
            <description>
          Appropriate base print ticket members are set based on <see cref="T:GemBox.Spreadsheet.PrintOptions" /> instance members values.
        </description>
          </item>
          <item>
            <description>
          Base print ticket is cloned for each worksheet, clone's appropriate members are set based on <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> instance of that worksheet and clone is used to print all pages of that worksheet.
        </description>
          </item>
        </list>
        <para>
      Printing settings which do not exist in <see cref="T:GemBox.Spreadsheet.PrintOptions" /> nor in <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> can be specified on base print ticket (which stream is passed to <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor).
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintResolution">
      <summary>
            Print resolution in DPI (dots per inch).
            </summary>
      <remarks>
        <para>Default value for this property is 0.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
        <para>
      This member is supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.Print">printing</see>.
    </para>
        <para>
          <b>GemBox.Spreadsheet</b> uses <see href="https://docs.microsoft.com/en-us/dotnet/framework/wpf/advanced/printing-overview">enhanced printing services</see> provided with Windows Presentation Foundation (WPF).
      All pages of a specific <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> will be printed with settings from <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.PrintOptions" /> of that worksheet.
      Internally, WPF printing uses <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> class to specify page printing settings
      and value of this member is applied to appropriate member of <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance
      which is used to print all pages of a worksheet with this print options member.
    </para>
        <para>
          <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance which is used to print every page of a worksheet is constructed in following order:
    </para>
        <list type="ordered">
          <item>
            <description>
          Based on stream specified in <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor (base print ticket).
        </description>
          </item>
          <item>
            <description>
          Appropriate base print ticket members are set based on <see cref="T:GemBox.Spreadsheet.PrintOptions" /> instance members values.
        </description>
          </item>
          <item>
            <description>
          Base print ticket is cloned for each worksheet, clone's appropriate members are set based on <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> instance of that worksheet and clone is used to print all pages of that worksheet.
        </description>
          </item>
        </list>
        <para>
      Printing settings which do not exist in <see cref="T:GemBox.Spreadsheet.PrintOptions" /> nor in <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> can be specified on base print ticket (which stream is passed to <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor).
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.VerticalPrintResolution">
      <summary>
            Vertical print resolution in DPI (dots per inch).
            </summary>
      <remarks>
        <para>Default value for this property is 0.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
        <para>
      This member is supported in <see cref="M:GemBox.Spreadsheet.ExcelFile.Print">printing</see>.
    </para>
        <para>
          <b>GemBox.Spreadsheet</b> uses <see href="https://docs.microsoft.com/en-us/dotnet/framework/wpf/advanced/printing-overview">enhanced printing services</see> provided with Windows Presentation Foundation (WPF).
      All pages of a specific <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> will be printed with settings from <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.PrintOptions" /> of that worksheet.
      Internally, WPF printing uses <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> class to specify page printing settings
      and value of this member is applied to appropriate member of <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance
      which is used to print all pages of a worksheet with this print options member.
    </para>
        <para>
          <see href="https://docs.microsoft.com/en-us/dotnet/api/system.printing.printticket">PrintTicket</see> instance which is used to print every page of a worksheet is constructed in following order:
    </para>
        <list type="ordered">
          <item>
            <description>
          Based on stream specified in <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor (base print ticket).
        </description>
          </item>
          <item>
            <description>
          Appropriate base print ticket members are set based on <see cref="T:GemBox.Spreadsheet.PrintOptions" /> instance members values.
        </description>
          </item>
          <item>
            <description>
          Base print ticket is cloned for each worksheet, clone's appropriate members are set based on <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> instance of that worksheet and clone is used to print all pages of that worksheet.
        </description>
          </item>
        </list>
        <para>
      Printing settings which do not exist in <see cref="T:GemBox.Spreadsheet.PrintOptions" /> nor in <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> can be specified on base print ticket (which stream is passed to <see cref="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)" /> constructor).
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.NumberOfCopies">
      <summary>
            Number of copies to print.
            </summary>
      <remarks>
        <para>Default value for this property is 1.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPrintOptions.SetPrinterSettings(System.String,System.IO.Stream)">
      <summary>
            Sets the printer settings by using a printer name and an XML stream (that contains a <see cref="T:System.Printing.PrintTicket" /> document) that complies with the XML Print Schema.
            </summary>
      <param name="printerName">Name of the printer.</param>
      <param name="xmlStream">An XML stream that describes a print job and conforms to the Print Schema.</param>
      <remarks>Setting printer settings doesn't work in Medium Trust.</remarks>
      <seealso cref="T:System.Printing.PrintTicket" />
      <seealso cref="M:System.Printing.PrintTicket.GetXmlStream" />
      <seealso href="https://docs.microsoft.com/en-us/windows/win32/printdocs/printschema">Print Schema</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPrintOptions.SetPrinterSettings(System.IntPtr)">
      <summary>
            Sets the printer settings by using a handle to a <b>DEVMODE</b> structure that corresponds to the printer settings.
            </summary>
      <param name="hdevmode">A handle to a <b>DEVMODE</b> structure obtained from <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.printing.printersettings.gethdevmode">System.Drawing.Printing.PrinterSettings.GetHdevmode</see> method.</param>
      <remarks>
        <para>Handle is automatically deallocated by calling the native Win32 <b>GlobalFree</b> method before this method ends.</para>
        <para>Setting printer settings doesn't work in Medium Trust.</para>
      </remarks>
      <seealso href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.printing.printersettings">System.Drawing.Printing.PrinterSettings</seealso>
      <seealso href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.printing.printersettings.gethdevmode">System.Drawing.Printing.PrinterSettings.GetHdevmode</seealso>
      <seealso href="https://docs.microsoft.com/en-us/windows/win32/api/wingdi/ns-wingdi-devmodea">DEVMODE structure</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPrintOptions.SetPrinterSettings(System.Byte[])">
      <summary>
            Sets the printer settings by using a byte array that contains the <b>DEVMODE</b> structure that corresponds to the printer settings.
            </summary>
      <param name="devMode">A byte array that contains the <b>DEVMODE</b> structure.</param>
      <seealso href="https://docs.microsoft.com/en-us/windows/win32/api/wingdi/ns-wingdi-devmodea">DEVMODE structure</seealso>
      <seealso href="http://stackoverflow.com/questions/28007554/how-can-i-save-and-restore-printersettings/28007555#28007555">How can I save and restore PrinterSettings?</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPrintOptions.GetHashCode">
      <summary>
            Returns the hash code of this object.
            </summary>
      <returns>Hash code.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPrintOptions.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> is equal 
            to the current <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" />.
            </summary>
      <param name="obj">Object of <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> type.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> is equal 
            to the current <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PaperSize">
      <summary>
            MS Excel specific paper size / type index.
            </summary>
      <remarks>
        <para>
            Default value for this property is 0.
            </para>
        <para>
            Following table shows possible values:
            </para>
        <para>
          <font face="Arial" size="1">
            <table border="1" cellpadding="5" cellspacing="0">
              <tr>
                <th>Index</th>
                <th>Paper type</th>
                <th>Paper size</th>
              </tr>
              <tr>
                <td>0</td>
                <td>Undefined</td>
                <td>
                </td>
              </tr>
              <tr>
                <td>1</td>
                <td>Letter</td>
                <td>8.5in × 11in</td>
              </tr>
              <tr>
                <td>2</td>
                <td>Letter small paper</td>
                <td>8.5in × 11in</td>
              </tr>
              <tr>
                <td>3</td>
                <td>Tabloid paper</td>
                <td>11 in × 17in</td>
              </tr>
              <tr>
                <td>4</td>
                <td>Ledger paper</td>
                <td>17 in × 11in</td>
              </tr>
              <tr>
                <td>5</td>
                <td>Legal paper</td>
                <td>8.5in × 14in</td>
              </tr>
              <tr>
                <td>6</td>
                <td>Statement paper</td>
                <td>5.5in × 8.5in</td>
              </tr>
              <tr>
                <td>7</td>
                <td>Executive paper</td>
                <td>7.25in × 10.5in</td>
              </tr>
              <tr>
                <td>8</td>
                <td>A3</td>
                <td>297mm × 420mm</td>
              </tr>
              <tr>
                <td>9</td>
                <td>A4</td>
                <td>210mm × 297mm</td>
              </tr>
              <tr>
                <td>10</td>
                <td>A4 small paper</td>
                <td>210mm × 297mm</td>
              </tr>
              <tr>
                <td>11</td>
                <td>A5</td>
                <td>148mm × 210mm</td>
              </tr>
              <tr>
                <td>12</td>
                <td>B4</td>
                <td>250mm × 353mm</td>
              </tr>
              <tr>
                <td>13</td>
                <td>B5</td>
                <td>176mm × 250mm</td>
              </tr>
              <tr>
                <td>14</td>
                <td>Folio paper</td>
                <td>8.5in × 13in</td>
              </tr>
              <tr>
                <td>15</td>
                <td>Quarto paper</td>
                <td>215mm × 275mm</td>
              </tr>
              <tr>
                <td>16</td>
                <td>Standard paper</td>
                <td>10in × 14in</td>
              </tr>
              <tr>
                <td>17</td>
                <td>Standard paper</td>
                <td>11in × 17in</td>
              </tr>
              <tr>
                <td>18</td>
                <td>Note paper</td>
                <td>8.5in × 11in</td>
              </tr>
              <tr>
                <td>19</td>
                <td>#9 envelope</td>
                <td>3.875in × 8.875in</td>
              </tr>
              <tr>
                <td>20</td>
                <td>#10 envelope</td>
                <td>4.125in * 9.5in</td>
              </tr>
              <tr>
                <td>21</td>
                <td>#11 envelope</td>
                <td>4.5in * 10.375in</td>
              </tr>
              <tr>
                <td>22</td>
                <td>#12 envelope</td>
                <td>4.75in * 11in</td>
              </tr>
              <tr>
                <td>23</td>
                <td>#14 envelope</td>
                <td>5in * 11.5in</td>
              </tr>
              <tr>
                <td>24</td>
                <td>C paper</td>
                <td>17in * 22in</td>
              </tr>
              <tr>
                <td>25</td>
                <td>D paper</td>
                <td>22in * 34in</td>
              </tr>
              <tr>
                <td>26</td>
                <td>E paper</td>
                <td>34in * 44in</td>
              </tr>
              <tr>
                <td>27</td>
                <td>DL envelope</td>
                <td>110mm × 220mm</td>
              </tr>
              <tr>
                <td>28</td>
                <td>C5 envelope</td>
                <td>162mm × 229mm</td>
              </tr>
              <tr>
                <td>29</td>
                <td>C3 envelope</td>
                <td>324mm × 458mm</td>
              </tr>
              <tr>
                <td>31</td>
                <td>C6 envelope</td>
                <td>114mm × 162mm</td>
              </tr>
              <tr>
                <td>32</td>
                <td>C65 envelope</td>
                <td>114mm × 229mm</td>
              </tr>
              <tr>
                <td>33</td>
                <td>B4 envelope</td>
                <td>250mm × 353mm</td>
              </tr>
              <tr>
                <td>34</td>
                <td>B5 envelope</td>
                <td>176mm × 250mm</td>
              </tr>
              <tr>
                <td>35</td>
                <td>B6 envelope</td>
                <td>176mm × 125mm</td>
              </tr>
              <tr>
                <td>36</td>
                <td>Italy envelope</td>
                <td>110mm × 230mm</td>
              </tr>
              <tr>
                <td>37</td>
                <td>Monarch envelope</td>
                <td>3.875in × 7.5in</td>
              </tr>
              <tr>
                <td>38</td>
                <td>6 3/4 envelope</td>
                <td>3.625in * 6.5in</td>
              </tr>
              <tr>
                <td>39</td>
                <td>US standard fanfold</td>
                <td>14.875in × 11in</td>
              </tr>
              <tr>
                <td>40</td>
                <td>German standard fanfold</td>
                <td>8.5in × 12in</td>
              </tr>
              <tr>
                <td>41</td>
                <td>German legal fanfold</td>
                <td>8.5in * 13in</td>
              </tr>
              <tr>
                <td>42</td>
                <td>ISO B4</td>
                <td>250mm * 353mm</td>
              </tr>
              <tr>
                <td>43</td>
                <td>Japanese double postcard</td>
                <td>200mm * 148mm</td>
              </tr>
              <tr>
                <td>44</td>
                <td>Standard paper</td>
                <td>9in * 11in</td>
              </tr>
              <tr>
                <td>45</td>
                <td>Standard paper</td>
                <td>10in * 11in</td>
              </tr>
              <tr>
                <td>46</td>
                <td>Standard paper</td>
                <td>15in * 11in</td>
              </tr>
              <tr>
                <td>47</td>
                <td>Invite envelope</td>
                <td>220mm * 220mm</td>
              </tr>
              <tr>
                <td>50</td>
                <td>Letter extra paper</td>
                <td>9.275in * 12in</td>
              </tr>
              <tr>
                <td>51</td>
                <td>Legal extra paper</td>
                <td>9.275in * 15in</td>
              </tr>
              <tr>
                <td>52</td>
                <td>Tabloid extra paper</td>
                <td>11.69in * 18in</td>
              </tr>
              <tr>
                <td>53</td>
                <td>A4 extra paper</td>
                <td>236mm * 322mm</td>
              </tr>
              <tr>
                <td>54</td>
                <td>Letter transverse paper</td>
                <td>8.275in * 11in</td>
              </tr>
              <tr>
                <td>55</td>
                <td>A4 transverse paper</td>
                <td>210mm * 297mm</td>
              </tr>
              <tr>
                <td>56</td>
                <td>Letter extra transverse paper</td>
                <td>9.275in * 12in</td>
              </tr>
              <tr>
                <td>57</td>
                <td>SuperA/SuperA/A4 paper</td>
                <td>227mm * 356mm</td>
              </tr>
              <tr>
                <td>58</td>
                <td>SuperB/SuperB/A3 paper</td>
                <td>305mm * 487mm</td>
              </tr>
              <tr>
                <td>59</td>
                <td>Letter plus paper</td>
                <td>8.5in * 12.69in</td>
              </tr>
              <tr>
                <td>60</td>
                <td>A4 plus paper</td>
                <td>210mm * 330mm</td>
              </tr>
              <tr>
                <td>61</td>
                <td>A5 transverse paper</td>
                <td>148mm * 210mm</td>
              </tr>
              <tr>
                <td>62</td>
                <td>JIS B5 transverse paper</td>
                <td>182mm * 257mm</td>
              </tr>
              <tr>
                <td>63</td>
                <td>A3 extra paper</td>
                <td>322mm * 445mm</td>
              </tr>
              <tr>
                <td>64</td>
                <td>A5 extra paper</td>
                <td>174mm * 235mm</td>
              </tr>
              <tr>
                <td>65</td>
                <td>ISO B5 extra paper </td>
                <td>201mm * 276mm</td>
              </tr>
              <tr>
                <td>66</td>
                <td>A2 paper</td>
                <td>420mm * 594mm</td>
              </tr>
              <tr>
                <td>67</td>
                <td>A3 transverse paper</td>
                <td>297mm * 420mm</td>
              </tr>
              <tr>
                <td>68</td>
                <td>A3 extra transverse paper</td>
                <td>322mm * 445mm</td>
              </tr>
            </table>
          </font>
        </para>
      </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRow">
      <summary>
            Excel row contains row options and cell range with row cells.
            </summary>
      <seealso cref="T:GemBox.Spreadsheet.ExcelColumn" />
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRow.AllocatedCells">
      <summary>
            Gets only currently allocated cells for this row.
            </summary>
      <remarks>
        <para>Use this collection if you are reading entire Excel file (you don't know exact position of 
            cells with data). If writing values, using <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />
            property is recommended.</para>
        <para>This collection contains only allocated cells so it is faster as you avoid  
            checking every single cell in a row. You still need to check if a specific cell contains 
            any value (it can be empty).</para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />
      <seealso cref="T:GemBox.Spreadsheet.ExcelCell" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRow.Height">
      <summary>
            Gets or sets row height.
            </summary>
      <remarks>
            Unit is twip (1/20th of a point).
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRow.IsAutoFitted">
      <summary>
            Gets a value indicating whether this row height is automatically fitted.
            </summary>
      <value>
        <see langword="true" /> if this instance is automatically fitted; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.CreateCells">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.GetHeight(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the height of row in arbitrary length unit.
            </summary>
      <param name="lengthUnit">The length unit in which to return row height.</param>
      <returns>The height of row in arbitrary length unit.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.SetHeight(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the height of row in arbitrary length unit.
            </summary>
      <param name="value">Row height value.</param>
      <param name="lengthUnit">The length unit in which <paramref name="value" /> is specified.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.AutoFit">
      <summary>
            Automatically fits row height to the minimum size required for all lines in the row cells to be visible.
            </summary>
      <remarks>
        <para>Auto-fit row height is a MS Excel feature and not a file format feature. When rows are
            auto-fit in MS Excel user interface, MS Excel will calculate current character heights and 
            set row height to the new numeric value.</para>
        <para>This method will set <see cref="P:GemBox.Spreadsheet.ExcelRow.Height" /> to the approximate 
            value (maxLinesCount * 255).</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.AutoFit(System.Boolean)">
      <summary>
            Automatically fits row height to the minimum size required for all lines in the row cells to be visible.
            </summary>
      <param name="autoFitMergedRanges">True if merged ranges should be taken into account.</param>
      <remarks>
        <para>Auto-fit row height is a MS Excel feature and not a file format feature. When rows are
            auto-fit in MS Excel user interface, MS Excel will calculate current character heights and 
            set row height to the new numeric value.</para>
        <para>This method will set <see cref="P:GemBox.Spreadsheet.ExcelRow.Height" /> to the approximate 
            value (maxLinesCount * 255).</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.Delete">
      <summary>
            Deletes this row from the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.InsertCopy(System.Int32,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Inserts specified number of copied rows before the current row.
            </summary>
      <param name="rowCount">Number of rows to insert.</param>
      <param name="sourceRow">Source row to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.InsertEmpty(System.Int32)">
      <summary>
            Inserts specified number of empty rows before the current row.
            </summary>
      <param name="rowCount">Number of rows to insert.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRowCollection">
      <summary>
            Collection of excel rows (<see cref="T:GemBox.Spreadsheet.ExcelRow" />).
            </summary>
      <seealso cref="T:GemBox.Spreadsheet.ExcelRow" />
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowCollection.Item(System.Int32)">
      <summary>
            Gets the row with the specified index.
            </summary>
      <param name="index">The zero-based index of the row.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowCollection.GetEnumerableCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.Remove(System.Int32)">
      <summary>
            Removes the row with the specified index.
            </summary>
      <param name="rowIndex">The zero-based index of the row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.Remove(System.Int32,System.Int32)">
      <summary>
            Removes specified number of rows starting at the specified index.
            </summary>
      <param name="rowIndex">The zero-based index of the row.</param>
      <param name="rowCount">Number of rows to remove.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.InsertEmpty(System.Int32)">
      <summary>
            Inserts empty row at the specified index.
            </summary>
      <param name="rowIndex">The zero-based index of the row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.InsertEmpty(System.Int32,System.Int32)">
      <summary>
            Inserts specified number of empty rows at the specified index.
            </summary>
      <param name="rowIndex">The zero-based index of the row.</param>
      <param name="rowCount">Number of rows to insert.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.InsertCopy(System.Int32,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Inserts copied row at the specified index.
            </summary>
      <param name="rowIndex">The zero-based index of the row.</param>
      <param name="sourceRow">Source row to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.InsertCopy(System.Int32,System.Int32,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Inserts specified number of copied rows at the specified index.
            </summary>
      <param name="rowIndex">The zero-based index of the row.</param>
      <param name="rowCount">Number of rows to insert.</param>
      <param name="sourceRow">Source row to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.AdjustArraySize(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.ParseName(System.String)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.FixMergedRegionsIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.FixNamedRegionsIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.FixFormulaReferencesIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.FixPageBreaksIndexes(System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.FixTableIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.FixDataValidationIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.FixConditionalFormatRuleIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.RowNameToIndex(System.String)">
      <summary>
            Converts row name ("1", "2", ...) to row index (0, 1, ...).
            </summary>
      <param name="name">Row name.</param>
      <returns>Row index for the specified name.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.RowIndexToName(System.Int32)">
      <summary>
            Converts row index (0, 1, ...) to row name ("1", "2", ...).
            </summary>
      <param name="rowIndex">Row index.</param>
      <returns>Row name for the specified index.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase">
      <summary>
            Base class for row, column and cell collections.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase.Count">
      <summary>
            Gets the number of currently allocated elements (dynamically changes when worksheet is modified -- read remarks).
            </summary>
      <remarks>
            The cells are internally allocated in rows and not in columns. In other words, when you load CSV/XLS/XLSX or 
            access some cells via worksheet.Cells property new rows and cells can be allocated but the column count 
            will stay the same. To find last used column in the worksheet, use 
            <see cref="M:GemBox.Spreadsheet.ExcelWorksheet.GetUsedCellRange">ExcelWorksheet.GetUsedCellRange</see> method.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase.GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase" />.
            </summary>
      <returns>
            An enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase.GetEnumeratorCore">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRowColumnCollectionBase">
      <summary>
            Base class for row and column collections.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase.DeleteInternalCore(System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase.ClearCore">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1">
      <summary>
            Generic base class for row and column collections.
            </summary>
      <typeparam name="T">Type of the items in the collection, either <see cref="T:GemBox.Spreadsheet.ExcelRow" /> or <see cref="T:GemBox.Spreadsheet.ExcelColumn" />.</typeparam>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.Item(System.Int32)">
      <overloads>Gets the row / column with the specified index or name.</overloads>
      <summary>
            Gets the row / column with the specified index.
            </summary>
      <param name="index">The zero-based index of the row / column.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.Item(System.String)">
      <summary>
            Gets the row / column with the specified name.
            </summary>
      <param name="name">The name of the row / column.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.Count">
      <summary>
            Gets the number of currently allocated elements (dynamically changes when worksheet is modified -- read remarks).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.GetEnumerableCore">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.GetEnumeratorCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.AdjustArraySize(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.ParseName(System.String)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.DeleteInternalCore(System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.FixAllIndexes(System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.FixAllIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.FixMergedRegionsIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.FixNamedRegionsIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.FixFormulaReferencesIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.FixPageBreaksIndexes(System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.FixTableIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.FixDataValidationIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.FixConditionalFormatRuleIndexes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.ClearCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelShape">
      <summary>
            Represents a drawing that has a specific shape / geometry.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelShape.ShapeType">
      <summary>
            Gets or sets the type of the shape (geometry).
            </summary>
      <value>
            The type of the shape (geometry).
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelShape.AdjustValues">
      <summary>
            Gets the shape's adjust values.
            </summary>
      <value>
            The shape's adjust values.
            </value>
      <remarks>
        <para>Adjust value is a varying parameter used in calculation of shape's geometry which is specified using <b>Drawing ML</b>.</para>
        <para>Each <see cref="P:GemBox.Spreadsheet.ExcelShape.ShapeType" /> defines its own set of adjust values (and some/most do not have any).</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelShape.Fill">
      <summary>
            Gets or sets the fill formating options.
            </summary>
      <value>
            The fill formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelShape.Outline">
      <summary>
            Gets or sets the outline formating options.
            </summary>
      <value>
            The outline formatting options.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelShape.Text">
      <summary>
            Gets the text content and formatting associated with this <see cref="T:GemBox.Spreadsheet.ExcelShape" />.
            </summary>
      <value>
            The text content and formatting associated with this <see cref="T:GemBox.Spreadsheet.ExcelShape" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelShape.FlipHorizontal">
      <summary>
            Gets or sets a value indicating whether to flip the drawing horizontally - reflect it across a vertical line that intersects the center of the drawing's bounding box.
            </summary>
      <value>
        <see langword="true" /> to flip the drawing horizontally; otherwise, <see langword="false" />.
            </value>
      <remarks>
            This property is supported only when loading and saving to XLSX and XLSB file format.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelShape.FlipVertical">
      <summary>
            Gets or sets a value indicating whether to flip the drawing vertically - reflect it across a horizontal line that intersects the center of the drawing's bounding box.
            </summary>
      <value>
        <see langword="true" /> to flip the drawing horizontally; otherwise, <see langword="false" />.
            </value>,
            <remarks>
            This property is supported only when loading and saving to XLSX and XLSB file format.
            </remarks></member>
    <member name="P:GemBox.Spreadsheet.ExcelShape.Rotation">
      <summary>
            Gets or sets the amount (in degrees) by which the drawing is rotated clockwise about the center of the drawing's bounding box.
            </summary>
      <value>
            The amount (in degrees) by which the drawing is rotated clockwise about the center of the drawing's bounding box.
            </value>
      <remarks>
            This property is supported only when loading and saving to XLSX and XLSB file format.
            </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelShapeCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.ExcelShape">Shape</see>s in the worksheet.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.Shapes">ExcelWorksheet.Shapes</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelShapeCollection.Add(GemBox.Spreadsheet.Drawing.ShapeType,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new shape to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="shapeType">The type of the shape.</param>
      <param name="left">The distance of the left edge of the shape from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the shape from the top edge of the worksheet.</param>
      <param name="width">The shape's width.</param>
      <param name="height">The shape's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new shape added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelShapeCollection.Add(GemBox.Spreadsheet.Drawing.ShapeType,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new shape to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="shapeType">The type of the shape.</param>
      <param name="positionFrom">The shape's position.</param>
      <param name="width">The shape's width.</param>
      <param name="height">The shape's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new shape added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelShapeCollection.Add(GemBox.Spreadsheet.Drawing.ShapeType,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new shape to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="shapeType">The type of the shape.</param>
      <param name="positionFromCell">The shape's position (for example, "A1").</param>
      <param name="width">The shape's width.</param>
      <param name="height">The shape's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new shape added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelShapeCollection.Add(GemBox.Spreadsheet.Drawing.ShapeType,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new shape to the worksheet which moves and sizes with cells.
            </summary>
      <param name="shapeType">The type of the shape.</param>
      <param name="positionFrom">The shape's position (top-left corner).</param>
      <param name="positionTo">The shape's end position (bottom-right corner).</param>
      <returns>A new shape added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelShapeCollection.Add(GemBox.Spreadsheet.Drawing.ShapeType,System.String,System.String)">
      <summary>
            Adds a new shape to the worksheet which moves and sizes with cells.
            </summary>
      <param name="shapeType">The type of the shape.</param>
      <param name="positionFromCell">The shape's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The shape's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new shape added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelViewOptions">
      <summary>
            Stores MS Excel display and view related options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.Dpi">
      <summary>
            Gets or sets the DPI (dots or pixels per inch) at which the workbook should be rendered.
            </summary>
      <value>
            The DPI at which the workbook should be rendered.
            </value>
      <remarks>
        <para>The <see cref="P:GemBox.Spreadsheet.ExcelViewOptions.Dpi" /> also affects how <see cref="F:GemBox.Spreadsheet.LengthUnit.DevicePixel" /> is converted from and to other <see cref="T:GemBox.Spreadsheet.LengthUnit" />s.</para>
        <para>The <see cref="P:GemBox.Spreadsheet.ExcelViewOptions.Dpi" /> should be updated whenever the DPI changes for a Per Monitor DPI Aware application.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.FirstVisibleRow">
      <summary>
            Index of the first visible row in the worksheet.
            </summary>
      <remarks>
        <para>Default value for this property is 0.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.FirstVisibleColumn">
      <summary>
            Index of the first visible column in the worksheet.
            </summary>
      <remarks>
        <para>Default value for this property is 0.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ViewType">
      <summary>
            Gets and sets the view type. 
            </summary>
      <remarks>
        <para>Default value for this property is <see cref="P:GemBox.Spreadsheet.ExcelViewOptions.ViewType">ViewType.Normal</see>.</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.ExcelViewOptions.ViewType" /> is supported only for XLSX and XLSB files.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.OutlineRowButtonsBelow">
      <summary>
            Gets or sets whether outline row buttons are displayed below groups.
            </summary>
      <remarks>
            This property is simply written to Excel file and has no effect on behavior of this library.
            For more information on worksheet protection, consult Microsoft Excel documentation.
            </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelViewOptions.OutlineColumnButtonsRight">ExcelWorksheet.OutlineColumnButtonsRight</seealso>
      <seealso cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Collapsed" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.OutlineLevel" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.OutlineColumnButtonsRight">
      <summary>
            Gets or sets whether outline column buttons are displayed on the right side of groups.
            </summary>
      <remarks>
            This property is simply written to Excel file and has no effect on behavior of this library.
            For more information on worksheet protection, consult Microsoft Excel documentation.
            </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelViewOptions.OutlineRowButtonsBelow">ExcelWorksheet.OutlineRowButtonsBelow</seealso>
      <seealso cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Collapsed" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.OutlineLevel" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowFormulas">
      <summary>
            If true, MS Excel shows formulas. Otherwise, formula results are shown. 
            </summary>
      <remarks>
            Default value for this property is <see langword="false" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowGridLines">
      <summary>
            If true, MS Excel shows grid lines.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="true" />.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats. Use <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintGridlines" /> for printing gridlines.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowSheetHeaders">
      <summary>
            If true, MS Excel shows row and column headers.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="true" />.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowZeroValues">
      <summary>
            If true, MS Excel shows zero values. Otherwise, zero values are shown as empty cells.
            </summary>
      <remarks>
            Default value for this property is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowColumnsFromRightToLeft">
      <summary>
            If true, MS Excel shows columns from right to left.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="false" />.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowOutlineSymbols">
      <summary>
            If true, MS Excel shows outline symbols.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="true" />.</para>
        <para>This value is currently ignored when exporting a document to XLS, PDF, XPS or image file formats.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowInPageBreakPreview">
      <summary>
            If true, MS Excel shows worksheet in page break preview. Otherwise, normal view is used.
            </summary>
      <remarks>
        <para>Default value for this property is <see langword="false" />.</para>
        <para>This value is currently ignored when exporting a document to XLS, PDF, XPS or image file formats.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.Zoom">
      <summary>
            Magnification factor in normal view.
            </summary>
      <remarks>
        <para>Unit is one percent. Value must be between 10 and 400.</para>
        <para>Default value for this property is 100.</para>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is out of 10 to 400 range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.PageBreakViewZoom">
      <summary>
            Magnification factor in page break view.
            </summary>
      <remarks>
        <para>Unit is one percent. Value must be between 10 and 400.</para>
        <para>Default value for this property is 60.</para>
        <para>This value is currently ignored when exporting a document to XLS, PDF, XPS or image file formats.</para>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is out of 10 to 400 range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.SelectedCells">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.SelectedRanges" /> property instead.</para>
        <para>Gets or sets the selected cells.</para>
      </summary>
      <value>
            The selected cells.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelWorksheet">
      <summary>
            Excel worksheet is a table with additional properties, identified by a unique name.
            </summary>
      <remarks>
        <para>
            Worksheet in Microsoft Excel has limited size. 
            Number of rows (<see cref="T:GemBox.Spreadsheet.ExcelRow" />) is limited 
            to <see cref="F:GemBox.Spreadsheet.ExcelFile.MaxRows">ExcelFile.MaxRows</see>. 
            Number of columns (<see cref="T:GemBox.Spreadsheet.ExcelColumn" />) is limited 
            to <see cref="F:GemBox.Spreadsheet.ExcelFile.MaxColumns">ExcelFile.MaxColumns</see>. 
            A specific cell (<see cref="T:GemBox.Spreadsheet.ExcelCell" />) can be accessed either trough 
            <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells">ExcelRow.Cells</see>, 
            <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells">ExcelColumn.Cells</see> or 
            <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">ExcelWorksheet.Cells</see> property. 
            Whichever property used, there are two distinct methods of getting a cell reference; using <b>name</b>
            and using <b>index</b>. For example, full name of cell in top left corner of a worksheet is "A1". Translated
            to indexes, same cell would be 0,0 (zero row and zero column). If using 
            <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells">ExcelRow.Cells</see> or 
            <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells">ExcelColumn.Cells</see> to access a
            specific cell, only partial name or partial index must be used, providing unknown column or row information. 
            </para>
        <para>Note that the cells are internally allocated in rows and not in columns. ExcelColumn objects are created 
            only if they have non-standard width or style, or they are accessed directly. So, while ExcelRowCollection.Count 
            shows number of rows occupied with data, ExcelColumnCollection.Count does not say which Column is the 
            last one occupied with data!</para>
        <para>If you want to read all data in a sheet, use 
            <see cref="P:GemBox.Spreadsheet.ExcelRow.AllocatedCells">ExcelRow.AllocatedCells</see> property.</para>
        <para>If you want to find last column occupied with data, use 
            <see cref="M:GemBox.Spreadsheet.ExcelWorksheet.CalculateMaxUsedColumns" /> method.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
      <seealso cref="T:GemBox.Spreadsheet.ExcelRow" />
      <seealso cref="T:GemBox.Spreadsheet.ExcelColumn" />
      <seealso cref="T:GemBox.Spreadsheet.ExcelCell" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Type">
      <summary>
            Gets worksheet type.
            </summary>
      <value>
            The worksheet type.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Index">
      <summary>
            Gets worksheet zero-based index.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Pictures">
      <summary>
            Gets the worksheet pictures.
            </summary>
      <value>
            The worksheet pictures.
            </value>
      <remarks>
            Supported picture formats are listed in <see cref="T:GemBox.Spreadsheet.ExcelPictureFormat" />.
            </remarks>
      <seealso cref="T:GemBox.Spreadsheet.ExcelPicture" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Charts">
      <summary>
            Gets the worksheet charts. Not supported in XLS.
            </summary>
      <value>
            The worksheet charts.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Shapes">
      <summary>
            Gets the worksheet shapes.
            </summary>
      <value>
            The worksheet shapes.
            </value>
      <seealso cref="T:GemBox.Spreadsheet.ExcelShape" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.FormControls">
      <summary>
            Gets the worksheet form controls.
            </summary>
      <value>
            The worksheet form controls.
            </value>
      <seealso cref="T:GemBox.Spreadsheet.Drawing.ExcelFormControl" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.EmbeddedObjects">
      <summary>
            Gets the worksheet embedded objects. Supported only in XLSX.
            </summary>
      <value>
            The worksheet embedded objects.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.BackgroundPictureStream">
      <summary>
            Gets the worksheet background picture stream.
            </summary>
      <value>
            The worksheet background picture stream.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.BackgroundPictureFormat">
      <summary>
            Gets the worksheet background picture format.
            </summary>
      <value>
            The worksheet background picture format.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.DataValidations">
      <summary>
            Gets the collection that expresses all data validation information for cells in a sheet which have data validation features applied.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.NamedRanges">
      <summary>
            Gets <see cref="T:GemBox.Spreadsheet.NamedRangeCollection" /> 
            containing descriptive names which are used to represent cells, ranges of cells, 
            formulas, or constant values.
            </summary>
      <remarks>
            You can use the labels of columns and rows on a worksheet to refer to the cells within 
            those columns and rows. Or you can create descriptive names to represent cells, ranges of cells, 
            formulas, or constant values. Labels can be used in formulas that refer to data on the same 
            worksheet; if you want to represent a range on another worksheet, use a name.
            You can also create 3-D names that represent the same cell or range of cells across multiple worksheets.		
            </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelCell.Formula">ExcelCell.Formula</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Hyperlinks">
      <summary>
            Gets hyperlinks in this sheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Comments">
      <summary>
            Gets comments in this sheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Name">
      <summary>
            Gets or sets worksheet name. 
            </summary>
      <remarks>
            If not unique (worksheet with that name already exists in 
            <see cref="P:GemBox.Spreadsheet.ExcelFile.Worksheets">ExcelFile.Worksheets</see> collection) exception is thrown.
            </remarks>
      <exception cref="T:System.ArgumentException">Worksheet name is not unique.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Rows">
      <summary>
            Gets collection of all rows (<see cref="T:GemBox.Spreadsheet.ExcelRow" />) in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Columns">
      <summary>
            Gets collection of all columns (<see cref="T:GemBox.Spreadsheet.ExcelColumn" />) in the worksheet.
            </summary>
      <remarks>
        <para>Note that the cells are internally allocated in rows and not in columns. ExcelColumn objects are created 
            only if they have non-standard width or style, or they are accessed directly. So, while ExcelRowCollection.Count 
            shows number of rows occupied with data, ExcelColumnCollection.Count does not say which Column is the 
            last one occupied with data!</para>
        <para>If you want to read all data in a sheet, use 
            <see cref="P:GemBox.Spreadsheet.ExcelRow.AllocatedCells">ExcelRow.AllocatedCells</see> property.</para>
        <para>If you want to find last column occupied with data, use 
            <see cref="M:GemBox.Spreadsheet.ExcelWorksheet.CalculateMaxUsedColumns" /> method.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">
      <summary>
            Gets all the cells in the sheet.
            </summary>
      <value>
            All the cells in the sheet.
            </value>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-excel-range/204">Referencing ExcelCell and CellRange in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Sort">
      <summary>
        <para>Gets or sets the active <see cref="T:GemBox.Spreadsheet.SortState" />.
            Returns <see langword="null" /> if no <see cref="T:GemBox.Spreadsheet.SortState" /> is active.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.SortState" /> is used to store sort settings and to apply sort on a range of cells.</para>
        <para>Active <see cref="T:GemBox.Spreadsheet.SortState" /> is loaded from and saved to XLSX file.</para>
      </summary>
      <value>
            The active <see cref="T:GemBox.Spreadsheet.SortState" /> or <see langword="null" /> if no <see cref="T:GemBox.Spreadsheet.SortState" /> is active.
            </value>
      <exception cref="T:System.ArgumentException">Sort range doesn't belong to this worksheet.</exception>
      <remarks>
            Use <see cref="M:GemBox.Spreadsheet.CellRange.Sort(System.Boolean)" /> method to create or get a <see cref="T:GemBox.Spreadsheet.SortState" /> instance.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/excel-sort/113">Excel Sorting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Filter">
      <summary>
        <para>Gets or sets the active <see cref="T:GemBox.Spreadsheet.AutoFilter" />.
            Returns <see langword="null" /> if no <see cref="T:GemBox.Spreadsheet.AutoFilter" /> is active.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.AutoFilter" /> is used to store filter settings and to apply filter on a range of cells.</para>
        <para>Active <see cref="T:GemBox.Spreadsheet.AutoFilter" /> is loaded from and saved to XLSX file.</para>
      </summary>
      <value>
            The active <see cref="T:GemBox.Spreadsheet.AutoFilter" /> or <see langword="null" /> if no <see cref="T:GemBox.Spreadsheet.AutoFilter" /> is active.
            </value>
      <exception cref="T:System.ArgumentException">Filter range doesn't belong to this worksheet.</exception>
      <remarks>
            Use <see cref="M:GemBox.Spreadsheet.CellRange.Filter" /> methods to create or get an <see cref="T:GemBox.Spreadsheet.AutoFilter" /> instance.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-autofilter/112">Excel AutoFiltering example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.ConditionalFormatting">
      <summary>
        <para>Gets the conditional formatting rules applied on cell ranges of this sheet.</para>
        <para>Currently supported in XLS and XLS only.</para>
      </summary>
      <value>
            The conditional formatting rules applied on cell ranges of this sheet.
            </value>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-conditional-formatting/105">Excel Conditional Formatting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.IgnoredErrors">
      <summary>
        <para>Gets the ignored errors applied on cell ranges of this sheet.</para>
      </summary>
      <value>
            The ignored errors applied on cell ranges of this sheet.
            </value>
      <remarks>
        <para>
        A cell is considered to have an error condition when it meets one of the conditions specified in the <see cref="P:GemBox.Spreadsheet.IgnoredError.ErrorTypes" /> member.
        For example, if a cell is formatted as text but contains a numeric value, this is considered to be a potential error because the number won't be treated as a number, for example, in calculations.
      </para>
        <para>
        Note that this is simply a guess by the implementing application, and a recommendation to the user.
        Cells with the errors specified in <see cref="T:GemBox.Spreadsheet.IgnoredErrorTypes" /> may have perfectly valid reasons for being in such a state, for example a cell formatted as text which contains numeric Postal Codes or Order numbers.
        It is useful to format these cells as text so that leading zeros remain as part of the value instead of being removed.
      </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Protected">
      <summary>
            Gets or sets the worksheet protection flag.
            </summary>
      <remarks>
            This property is simply written to Excel file and has no effect on the behavior of this library.
            For more information on worksheet protection, consult Microsoft Excel documentation.
            </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelFile.Protected">ExcelFile.Protected</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.ProtectionSettings">
      <summary>
            Gets or sets worksheet protection properties. This settings will be used only if <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Protected" /> is set to <see langword="true" />;
            Otherwise it will be ignored.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.ProtectedRanges">
      <summary>
            Gets the protected ranges. Supported in XLSX and XLSB only.
            </summary>
      <value>
            The protected ranges.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Visibility">
      <summary>
            Gets or sets the worksheet visible property.
            </summary>
      <remarks>
        <para>Workbook must contain at least one visible sheet.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.DefaultColumnWidth">
      <summary>
            Gets or sets the default column width.
            </summary>
      <value>
            The default column width.
            </value>
      <remarks>
        <para>Value is a numerator (before a slash) of a fraction in a formula for an <see href="https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.column">Open XML column width</see>.</para>
        <para>This value is used as a width for columns which do not have <see cref="P:GemBox.Spreadsheet.ExcelColumn.Width" /> property explicitly set.</para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelColumn.Width" />
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.GetDefaultColumnWidth(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the default column width in arbitrary length unit.
            </summary>
      <param name="lengthUnit">The length unit in which to return default column width.</param>
      <returns>The default column width in arbitrary length unit.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.SetDefaultColumnWidth(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the default column width in arbitrary length unit.
            </summary>
      <param name="value">Default column width value.</param>
      <param name="lengthUnit">The length unit in which <paramref name="value" /> is specified.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.DefaultRowHeight">
      <summary>
            Gets or sets the default row height in twips (1/20th of a point). Not supported in ODS.
            </summary>
      <value>
            The default row height in <see cref="F:GemBox.Spreadsheet.LengthUnit.Twip">twips (1/20th of a point)</see>.
            </value>
      <remarks>
            This value is used as height for rows which don't have <see cref="P:GemBox.Spreadsheet.ExcelRow.Height" /> property explicitly set.
            </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelRow.Height" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.HorizontalPageBreaks">
      <summary>
            Gets collection of all horizontal page breaks 
            (<see cref="T:GemBox.Spreadsheet.HorizontalPageBreak" />) in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.VerticalPageBreaks">
      <summary>
            Gets collection of all vertical page breaks 
            (<see cref="T:GemBox.Spreadsheet.VerticalPageBreak" />) in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Parent">
      <summary>
            Gets the parent <see cref="T:GemBox.Spreadsheet.ExcelFile" /> of this <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> instance.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.CodeName">
      <summary>
        <para>Gets or sets the name of the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> that is bound to this <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.PrintOptions">
      <summary>
            Contains MS Excel print and print related options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.ViewOptions">
      <summary>
            Contains MS Excel display and view related options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.HeadersFooters">
      <summary>
            Gets or sets headers/footers for the sheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.HasHeadersFooters">
      <summary>
            Returns true if worksheet has headers/footers.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Panes">
      <summary>
            Gets or sets the panes in the worksheet.
            </summary>
      <remarks>
            If there are no split or freeze panes in the worksheet, the value of this property is null.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.HasSplitOrFreezePanes">
      <summary>
            Returns true if worksheet has split or freeze panes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.SelectedRanges">
      <summary>
        <para>Gets the selected ranges of cells in the worksheet.</para>
        <para>Supported only in XLSX and XLSB.</para>
      </summary>
      <value>
            The selected ranges of cells in the worksheet.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.TabColor">
      <summary>
        <para>Gets or sets the worksheet tab color.</para>
        <para>Supported only in XLSX, XLSB and HTML.</para>
      </summary>
      <value>
            The worksheet tab color.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.PivotTables">
      <summary>
        <para>Gets the collection of all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s contained in this worksheet.</para>
        <para>Currently supported in XLSX only.</para>
      </summary>
      <value>
            The collection of all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s contained in this worksheet.
            </value>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Tables">
      <summary>
            Gets the collection of all <see cref="T:GemBox.Spreadsheet.Tables.Table" />s contained in this worksheet.
            </summary>
      <value>
            The collection of all <see cref="T:GemBox.Spreadsheet.Tables.Table" />s contained in this worksheet.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.FilterMode">
      <summary>
        <para>Gets a value indicating whether the worksheet is in filter mode.</para>
        <para>Supported only in XLSX and XLSB.</para>
      </summary>
      <value>
        <see langword="true" /> if the worksheet is in filter mode; otherwise, <see langword="false" />.</value>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.Clear">
      <summary>
            Clears this worksheet.
            </summary>
      <remarks>
            References to following members will become invalid after calling this method. If they are stored in external variables,
            you will need to get them again from worksheet.
            Here is the list:
            <ul><li><see cref="P:GemBox.Spreadsheet.ExcelWorksheet.DataValidations" /></li><li>Each <see cref="T:GemBox.Spreadsheet.ExcelRow" /> instance in <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Rows" /></li><li>Each <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> instance in <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Columns" /></li><li>Each <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance in <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells" /></li><li>Each <see cref="T:GemBox.Spreadsheet.ExcelPicture" /> instance in <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Pictures" /></li><li>Each <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> instance in <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Charts" /></li><li>Each <see cref="T:GemBox.Spreadsheet.ExcelShape" /> instance in <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Shapes" /></li><li>Each <see cref="T:GemBox.Spreadsheet.Drawing.ExcelFormControl" /> instance in <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.FormControls" /></li><li>Each <see cref="T:GemBox.Spreadsheet.HorizontalPageBreak" /> instance in <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.HorizontalPageBreaks" /></li><li>Each <see cref="T:GemBox.Spreadsheet.VerticalPageBreak" /> instance in <see cref="T:GemBox.Spreadsheet.VerticalPageBreak" /></li><li>Each <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance in <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.NamedRanges" /></li><li>Each <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> instance in <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Hyperlinks" /></li></ul></remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertDataTable(System.Data.DataTable)">
      <summary>
            Inserts a <see cref="T:System.Data.DataTable" /> into the current worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> which will be inserted into the current worksheet.</param>
      <returns>Number of inserted rows.</returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-export-datatable-dataset-to-excel/501">Export DataTable into Excel sheet in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertDataTable(System.Data.DataTable,GemBox.Spreadsheet.InsertDataTableOptions)">
      <summary>
            Inserts a <see cref="T:System.Data.DataTable" /> into the current worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> which will be inserted into the current worksheet.</param>
      <param name="options">The <see cref="T:GemBox.Spreadsheet.InsertDataTableOptions" /> which can be used to define settings for the insert operation.</param>
      <returns>Number of inserted rows.</returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-export-datatable-dataset-to-excel/501">Export DataTable into Excel sheet in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractToDataTable(System.Data.DataTable,GemBox.Spreadsheet.ExtractToDataTableOptions)">
      <summary>
            Extracts data to <see cref="T:System.Data.DataTable" /> with specified extract options, see <see cref="T:GemBox.Spreadsheet.ExtractToDataTableOptions" />.
            </summary>
      <param name="dataTable">Destination <see cref="T:System.Data.DataTable" />.</param>
      <param name="options">Options that describe how data will be extracted, see <see cref="T:GemBox.Spreadsheet.ExtractToDataTableOptions" />.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-export-excel-to-datatable/502">Export Excel sheet into DataTable in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.Calculate">
      <summary>
            Calculates formula for every excel cell in this worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.CreateDataTableOptions)">
      <summary>
            Creates a <see cref="T:System.Data.DataTable" /> and fills it with data from this <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> in a manner specified by
            create options, see <see cref="T:GemBox.Spreadsheet.CreateDataTableOptions" />.
            </summary>
      <param name="options">Options that describe how <see cref="T:System.Data.DataTable" /> will be created and filled with data extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <returns>
        <see cref="T:System.Data.DataTable" /> with data from specified cells.</returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-datatable-from-excel/503">Create DataTable from Excel sheet in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.GetUsedCellRange(System.Boolean)">
      <summary>
            Calculates cell range that is used in the worksheet.
            </summary>
      <param name="ignoreCellsWithoutValue">Specifies if allocated cells with <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> set to <see langword="null" /> are ignored.</param>
      <returns>Cell range that is used in the worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CalculateMaxUsedColumns">
      <summary>
            Iterates all rows and finds maximum number of used columns.
            </summary>
      <returns>Maximum number of occupied columns in this sheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.SetBackgroundPicture(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
            Sets the worksheet background picture.
            </summary>
      <param name="pictureStream">The picture's stream.</param>
      <param name="pictureFormat">The picture's format.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.SetBackgroundPicture(System.String)">
      <summary>
            Sets the worksheet background picture.
            </summary>
      <param name="picturePath">The picture's path.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.DeleteBackgroundPicture">
      <summary>
            Removes the worksheet background picture.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.PasswordHash">
      <summary>
            Gets or sets the password hash for protected sheet.
            </summary>
      <remarks>
            This property is simply written to Excel file and has no effect on the behavior of this library.
            For more information on worksheet protection, consult Microsoft Excel documentation.
            This property needs to be set to value of type ushort (property is of type int because ushort is not CLS compliant). 
            If you don't know which password hash corresponds to determinant password, make excel file using MS Excel, load it using GemBox.Spreadsheet, and read
            this property. Then reuse that value in your project.
            </remarks>
    </member>
    <member name="E:GemBox.Spreadsheet.ExcelWorksheet.ExtractDataEvent">
      <summary>
            Event that fires when specific error occurs while extracting data to DataTable.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.CellRange,GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExtractDataOptions,System.Boolean)">
      <summary>
            Extracts data from <see cref="T:GemBox.Spreadsheet.CellRange">specified range of cells</see> to a new <see cref="T:System.Data.DataTable" />. 
            </summary>
      <param name="range">Cell range.</param>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="useFirstRowForColumnNames">If <see langword="true" /> then values from first row will be used for <see cref="P:System.Data.DataColumn.ColumnName" /> columns.</param>
      <returns>DataTable with data from specified cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution)">
      <summary>
            Extracts data from used cells of this worksheet to a new <see cref="T:System.Data.DataTable" />. 
            <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see> is determined by the <see cref="T:GemBox.Spreadsheet.ColumnTypeResolution" />.
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <returns>DataTable with data from used cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExcelRow,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,GemBox.Spreadsheet.ExcelColumn[])">
      <summary>
            Extracts data from specified cells to a new <see cref="T:System.Data.DataTable" />.
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="columns">Columns to extract.</param>
      <returns>DataTable with data from specified rows/columns.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExcelRow,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,System.Boolean,GemBox.Spreadsheet.ExcelColumn[])">
      <summary>
            Extracts data from specified cells to a new <see cref="T:System.Data.DataTable" />.
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="useFirstRowForColumnNames">If <see langword="true" /> then values from first row will be used for <see cref="P:System.Data.DataColumn.ColumnName" /> columns.</param>
      <param name="columns">Columns to extract.</param>
      <returns>DataTable with data from specified rows/columns.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExcelRow,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,System.Boolean,System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.ExcelColumn})">
      <summary>
            Extracts data from specified cells to a new <see cref="T:System.Data.DataTable" />.
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="useFirstRowForColumnNames">If <see langword="true" /> then values from first row will be used for <see cref="P:System.Data.DataColumn.ColumnName" /> columns.</param>
      <param name="columns">Columns to extract.</param>
      <returns>DataTable with data from specified rows/columns.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExcelRow,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.ExcelColumn})">
      <summary>
            Extracts data from specified cells to a new <see cref="T:System.Data.DataTable" />. 
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="columns">Columns to extract.</param>
      <returns>DataTable with data from specified rows/columns.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.Delete">
      <summary>
            Deletes this worksheet from the workbook.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractToDataTable(System.Data.DataTable,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,GemBox.Spreadsheet.ExcelRow,GemBox.Spreadsheet.ExcelColumn)">
      <overloads>Extracts data to <see cref="T:System.Data.DataTable" />.</overloads>
      <summary>
            Extracts data to DataTable with the same column order as it is in ExcelWorksheet.
            </summary>
      <remarks>
        <para>DataTable has to have all the columns defined before calling this method. 
            Because DataColumnMapping objects are not used in this method, columns in DataTable have to have the same
            order as columns in ExcelWorksheet (starting from column defined in startColumn argument).</para>
        <para>You can customize error handling by using <see cref="E:GemBox.Spreadsheet.ExcelWorksheet.ExtractDataEvent" />.</para>
        <para>DataTable column type and corresponding cell value type need to be 'similar' data types. If that's not the case, then exception would be thrown.
            Note that numbers and string are not 'similar' data types. Numbers wouldn't be automatically converted to strings because of culture issues; someone would expect the number 12.4 is converted to "12.4" and someone else to "12,4".
            To make custom conversion, use <see cref="E:GemBox.Spreadsheet.ExcelWorksheet.ExtractDataEvent" />.</para>
      </remarks>
      <param name="dataTable">Destination DataTable.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="startColumn">Start ExcelColumn.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractToDataTable(System.Data.DataTable,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,System.Data.Common.DataColumnMappingCollection,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Extracts data to DataTable with column mapping.
            </summary>
      <remarks>
        <para>DataTable has to have all the columns defined before calling this method. 
            How will data be extracted from ExcelColumn to DataTableColumn has to be defined
            in the dataColumnMappingCollection argument.</para>
        <para>You can customize error handling by using <see cref="E:GemBox.Spreadsheet.ExcelWorksheet.ExtractDataEvent" />.</para>
        <para>DataTable column type and corresponding cell value type need to be 'similar' data types. If that's not the case, then exception would be thrown.
            Note that numbers and string are not 'similar' data types. Numbers wouldn't be automatically converted to strings because of culture issues; someone would expect the number 12.4 is converted to "12.4" and someone else to "12,4".
            To make custom conversion, use <see cref="E:GemBox.Spreadsheet.ExcelWorksheet.ExtractDataEvent" />.</para>
      </remarks>
      <param name="dataTable">Destination DataTable.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="dataColumnMappingCollection">Column mapping.</param>
      <param name="startRow">Start ExcelRow.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractUsedRangeToDataTable(GemBox.Spreadsheet.ExtractDataOptions)">
      <summary>
            Extracts data from used cells of this worksheet to a new DataTable with columns of type object.
            </summary>
      <remarks>This method first calls <see cref="M:GemBox.Spreadsheet.ExcelWorksheet.GetUsedCellRange(System.Boolean)" /> method
            to find block of used cells in this worksheet. Then it creates a new <see cref="T:System.Data.DataTable" /> with the same
            number of columns as width of that range and with the column type of object. Finally, it extracts block of used cells to 
            <see cref="T:System.Data.DataTable" /> and returns filled <see cref="T:System.Data.DataTable" />.
            </remarks>
      <param name="options">Options that describe how data will be extracted.</param>
      <returns>New DataTable.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.GetUsedCellRange">
      <summary>
            Calculates cell range that is used in the worksheet (every allocated cell is considered used).
            </summary>
      <returns>Cell range that is used in the worksheet (every allocated cell is considered used).</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertCopy(System.String,GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Inserts a copy of an existing worksheet before the current worksheet.
            </summary>
      <param name="destinationWorksheetName">Name of the new worksheet.</param>
      <param name="sourceWorksheet">Source worksheet.</param>
      <returns>Newly created worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertDataTable(System.Data.DataTable,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Inserts a <see cref="T:System.Data.DataTable" /> at the specified row and column in 
            the current worksheet.
            </summary>
      <param name="dataTable">Source DataTable.</param>
      <param name="startRow">Index of the start row.</param>
      <param name="startColumn">Index of the start column.</param>
      <param name="columnHeaders">True to insert column names above data.</param>
      <returns>Number of inserted rows.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertDataTable(System.Data.DataTable,System.String,System.Boolean)">
      <summary>
            Inserts a <see cref="T:System.Data.DataTable" /> at the specified position in 
            the current worksheet.
            </summary>
      <param name="dataTable">Source DataTable.</param>
      <param name="startCell">Name of start (top-left) cell.</param>
      <param name="columnHeaders">True to insert column names above data.</param>
      <returns>Number of inserted rows.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertEmpty(System.String)">
      <summary>
            Inserts an empty worksheet before the current worksheet.
            </summary>
      <param name="worksheetName">Worksheet name.</param>
      <returns>Newly created worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ResolveCellStyle(System.Int32,System.Int32)">
      <summary>
        <para>Resolves the cell style.</para>
        <para>Use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property instead.</para>
      </summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <returns>The resolved cell style.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelWorksheetCollection">
      <summary>
            Collection of worksheets (<see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />).
            </summary>
      <seealso cref="T:GemBox.Spreadsheet.ExcelWorksheet" />
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheetCollection.Item(System.Int32)">
      <overloads>Gets the worksheet with the specified index or name.</overloads>
      <summary>
            Gets the worksheet with the specified index.
            </summary>
      <param name="index">The zero-based index of the worksheet.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheetCollection.Item(System.String)">
      <summary>
            Gets the worksheet with the specified name.
            </summary>
      <param name="name">The name of the worksheet.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet">
      <summary>
            Gets or sets active worksheet.
            </summary>
      <remarks>
        <para>Active worksheet is the one selected when file is opened with Microsoft Excel. By default active worksheet 
            is the first one added with <see cref="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Add(System.String)" /> or <see cref="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Add(GemBox.Spreadsheet.SheetType,System.String)" /> methods.</para>
        <para>
          <b>GemBox.Spreadsheet Free</b> allows setting active worksheet to only one of the first 5 worksheets, otherwise active worksheet defaults to the first worksheet.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheetCollection.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection">
            ExcelWorksheetCollection</see>.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Remove(System.Int32)">
      <summary>
            Removes the worksheet with the specified index.
            </summary>
      <param name="worksheetIndex">The zero-based index of the worksheet.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Remove(System.String)">
      <summary>
            Removes the worksheet with the specified name.
            </summary>
      <param name="worksheetName">Worksheet name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.InsertEmpty(System.Int32,System.String)">
      <summary>
            Inserts empty worksheet at the specified index.
            </summary>
      <param name="worksheetIndex">The zero-based index of the worksheet.</param>
      <param name="worksheetName">Worksheet name.</param>
      <returns>Newly created worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.InsertEmpty(System.Int32,GemBox.Spreadsheet.SheetType,System.String)">
      <summary>
            Inserts empty worksheet at the specified index.
            </summary>
      <param name="worksheetIndex">The zero-based index of the worksheet.</param>
      <param name="type">The sheet type.</param>
      <param name="worksheetName">Worksheet name.</param>
      <returns>Newly created worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.InsertCopy(System.Int32,System.String,GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Inserts a copy of an existing worksheet at the specified index.
            </summary>
      <param name="worksheetIndex">The zero-based index of the worksheet.</param>
      <param name="worksheetName">Worksheet name.</param>
      <param name="sourceWorksheet">Source worksheet to copy.</param>
      <returns>Newly created worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Add(System.String)">
      <summary>
            Adds an empty worksheet to the end of the collection.
            </summary>
      <param name="worksheetName">Worksheet name.</param>
      <returns>Newly created worksheet.</returns>
      <remarks>
            If this is the first worksheet added to the collection the 
            <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" /> is set to this worksheet.
            </remarks>
      <exception cref="T:System.ArgumentException">Worksheet name is not unique.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Add(GemBox.Spreadsheet.SheetType,System.String)">
      <summary>
            Adds an empty worksheet to the end of the collection.
            </summary>
      <param name="type">The sheet type.</param>
      <param name="worksheetName">Worksheet name.</param>
      <returns>Newly created worksheet.</returns>
      <remarks>
            If this is the first worksheet added to the collection the 
            <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" /> is set to this worksheet.
            </remarks>
      <exception cref="T:System.ArgumentException">Worksheet name is not unique.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.AddCopy(System.String,GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Adds a copy of an existing worksheet to the end of the collection.
            </summary>
      <param name="destinationWorksheetName">Name of new worksheet.</param>
      <param name="sourceWorksheet">Source worksheet.</param>
      <returns>Newly created worksheet.</returns>
      <remarks>
            If this is the first worksheet added to the collection the 
            <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" /> is set to this worksheet.
            </remarks>
      <exception cref="T:System.ArgumentException">Worksheet name is not unique.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Move(System.Int32,System.Int32)">
      <summary>
            Moves the worksheet at the specified index to a new location in the collection.
            </summary>
      <param name="oldIndex">The zero-based index specifying the location of the worksheet to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the worksheet.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.
            </summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection">
            ExcelWorksheetCollection</see>.
            </summary>
      <returns>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Contains(GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Determines whether an <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> element is in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> to locate in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.</param>
      <returns>
            True if <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> is found in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />; otherwise, false.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Contains(System.String)">
      <summary>
            Determines whether an <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> element with specified name is in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.
            </summary>
      <param name="worksheetName">The name of the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> to locate in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.</param>
      <returns>
            True if <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> with specified name is found in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />; otherwise, false.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExtractDataEventAction">
      <summary>
            Possible ways of proceeding after one of the events is fired while extracting to data table.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataEventAction.ThrowException">
      <summary>
            Throw exception after event has been handled.
            </summary>
      <remarks>
            This value has been obsoleted and only affects obsoleted ExtractToDataTable() methods.
            It will have no effect when used with non-obsoleted <see cref="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractToDataTable(System.Data.DataTable,GemBox.Spreadsheet.ExtractToDataTableOptions)" />
            overload.
            </remarks>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataEventAction.Continue">
      <summary>
            Continue extracting data to <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataEventAction.StopReading">
      <summary>
            Stop extracting data to <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataEventAction.SkipRow">
      <summary>
            Skip row.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExtractDataOptions">
      <summary>
            Options specified when extracting data to <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataOptions.None">
      <summary>
            None of the options is set. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataOptions.StopAtFirstEmptyRow">
      <summary>
            Extracting data stops at the first empty row.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataOptions.SkipEmptyRows">
      <summary>
            When extracting data, skip all empty rows.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExtractToDataTableOptions">
      <summary>
            Represents options for extracting data from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> to <see cref="T:System.Data.DataTable" />.
            </summary>
      <seealso cref="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractToDataTable(System.Data.DataTable,GemBox.Spreadsheet.ExtractToDataTableOptions)" />
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-export-excel-to-datatable/502">Export Excel sheet into DataTable in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.StartColumn">
      <summary>
            Gets or sets the index of the first column of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExtractToDataTableOptions.StartColumn" /> is ignored if <see cref="P:GemBox.Spreadsheet.ExtractToDataTableOptions.MappingCollection" /> has any values.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.NumberOfRows">
      <summary>
            Gets or sets the number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.MappingCollection">
      <summary>
            Gets the collection used for mapping <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> columns to <see cref="T:System.Data.DataTable" /> columns.
            </summary>
      <remarks>
        <see cref="P:GemBox.Spreadsheet.ExtractToDataTableOptions.StartColumn" /> is ignored if <see cref="P:GemBox.Spreadsheet.ExtractToDataTableOptions.MappingCollection" /> has any values.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.ExtractDataOptions">
      <summary>
            Gets or sets <see cref="P:GemBox.Spreadsheet.ExtractToDataTableOptions.ExtractDataOptions" />.
            </summary>
      <remarks>
            Default value is <see cref="F:GemBox.Spreadsheet.ExtractDataOptions.None" />.
            </remarks>
    </member>
    <member name="E:GemBox.Spreadsheet.ExtractToDataTableOptions.ExcelCellToDataTableCellConverting">
      <summary>
            Event that fires when converting <see cref="T:GemBox.Spreadsheet.ExcelCell" /> value to <see cref="T:System.Data.DataTable" /> cell value.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExtractToDataTableOptions.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.ExtractToDataTableOptions" /> class.
            </summary>
      <param name="startRow">Index of the first row of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="startColumn">Index of the first column of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExtractToDataTableOptions.#ctor(System.String,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.ExtractToDataTableOptions" /> class.
            </summary>
      <param name="startCell">Name of the first (top left) cell of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.FileFormatLimitations">
      <summary>
            Represents file format limitations when saving <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to some format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FileFormatLimitations.MaxRows">
      <summary>
            Get maximum number of rows. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FileFormatLimitations.MaxColumns">
      <summary>
            Get maximum number of columns. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FileFormatLimitations.MaxColors">
      <summary>
            Get maximum number of colors. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FileFormatLimitations.MaxCellStyles">
      <summary>
            Get maximum number of cell styles. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FileFormatLimitations.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes instance of <see cref="T:GemBox.Spreadsheet.FileFormatLimitations" /> class.
            </summary>
      <param name="maxRows">Maximum number of rows.</param>
      <param name="maxColumns">Maximum number of columns.</param>
      <param name="maxColors">Maximum number of colors.</param>
      <param name="maxCellStyles">Maximum number of cell styles.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.FillPatternStyle">
      <summary>
        <para>Represents the style of fill pattern being used for a cell format.</para>
        <para>Currently supported only in XLSX, XLSB and XLS. For all other formats it defaults to either <see cref="F:GemBox.Spreadsheet.FillPatternStyle.None" /> or <see cref="F:GemBox.Spreadsheet.FillPatternStyle.Solid" />.</para>
      </summary>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternStyle" />
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.None">
      <summary>
        <para>The fill style is <b>none</b> (no fill).</para>
        <para>When <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor" /> and/or <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternBackgroundColor" /> are specified, a pattern of <see cref="F:GemBox.Spreadsheet.FillPatternStyle.None" /> overrides them and means the cell has no fill.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Solid">
      <summary>
        <para>The fill style is <b>solid</b>.</para>
        <para>When solid is specified, the <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor" /> is the only color rendered, even when a <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternBackgroundColor" /> is also specified.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray6">
      <summary>
        <b>6% Gray</b> is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray12">
      <summary>
        <b>12% Gray</b> is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray25">
      <summary>
        <b>25% Gray</b> is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray50">
      <summary>
        <b>50% Gray</b> is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray75">
      <summary>
        <b>75% Gray</b> is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.HorizontalStripe">
      <summary>
        <b>Horizontal Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.VerticalStripe">
      <summary>
        <b>Vertical Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.DiagonalStripe">
      <summary>
        <b>Diagonal Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ReverseDiagonalStripe">
      <summary>
        <b>Reverse Diagonal Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.DiagonalCrosshatch">
      <summary>
        <b>Diagonal Crosshatch</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThickDiagonalCrosshatch">
      <summary>
        <b>Thick Diagonal Crosshatch</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinHorizontalStripe">
      <summary>
        <b>Thin Horizontal Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinVerticalStripe">
      <summary>
        <b>Thin Vertical Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinDiagonalStripe">
      <summary>
        <b>Thin Diagonal Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinReverseDiagonalStripe">
      <summary>
        <b>Thin Reverse Diagonal Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinHorizontalCrosshatch">
      <summary>
        <b>Thin Horizontal Crosshatch</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinDiagonalCrosshatch">
      <summary>
        <b>Thin Diagonal Crosshatch</b> pattern.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Filter">
      <summary>
            Represents a base class for filters contained in <see cref="T:GemBox.Spreadsheet.AutoFilter" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Filter.FilterType">
      <summary>
            Gets the filter type.
            </summary>
      <value>
            The filter type.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Filter.Range">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.Filter.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Filter" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Filter" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.FilterColumn">
      <summary>
            Represents filter and sort settings for a single filter column.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FilterColumn.Index">
      <summary>
        <para>Gets the column index relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that this column filter applies to.</para>
        <para>Value is equal to or greater than zero and less than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> of the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" />.</para>
      </summary>
      <value>
            The column index relative to the <see cref="P:GemBox.Spreadsheet.AutoFilter.Range" /> that this filter column applies to.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.FilterColumn.Filter">
      <summary>
            Gets the filter settings applied to this column or <see langword="null" /> if no filter settings are applied to this column.
            </summary>
      <value>
            The filter settings applied to this column or <see langword="null" /> if no filter settings are applied to this column.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.FilterColumn.HiddenAutoButton">
      <summary>
        <para>Gets or sets a value indicating whether the <see cref="T:GemBox.Spreadsheet.AutoFilter" /> button for this column is hidden.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GemBox.Spreadsheet.AutoFilter" /> button for this column is hidden; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.FilterColumn.ShowButton">
      <summary>
        <para>Gets or sets a value indicating whether the filter button is visible.</para>
        <para>For example, when the cell containing the filter button is merged with another cell, the filter button may be hidden, and not drawn.</para>
        <para>Default value is <see langword="true" />.</para>
      </summary>
      <value>
        <see langword="true" /> if the filter button is visible; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.FilterColumn.Match">
      <summary>
        <para>Gets or sets the method that defines a set of criteria and determines whether the specified <see cref="T:GemBox.Spreadsheet.ExcelCell" /> meets those criteria.</para>
        <para>Default value is default method based on the settings of this filter.</para>
      </summary>
      <value>
            The method that defines a set of criteria and determines whether the specified <see cref="T:GemBox.Spreadsheet.ExcelCell" /> meets those criteria.
            </value>
      <remarks>
        <para>Use this property to override default method that is based on the settings of this filter.</para>
        <para>This member is not loaded from and saved to XLSX file since it is not supported by <b>Office Open XML</b> specification.
            It is used to customize <b>GemBox.Spreadsheet</b> functionality.</para>
        <para>If set to <see langword="null" />, reverts to default method based on the settings of this filter.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.FilterColumn.Sort">
      <summary>
            Gets the sort settings applied to this column or <see langword="null" /> if no sort settings are applied to this column.
            </summary>
      <value>
            The sort settings applied to this column or <see langword="null" /> if no sort settings are applied to this column.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.FilterColumn.SetValuesFilter">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.ValuesFilter" /> to this column.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ValuesFilter" /> filters by a list of values.</para>
        <para>Use members of a returned <see cref="T:GemBox.Spreadsheet.ValuesFilter" /> to specify filter settings.</para>
      </summary>
      <returns>A <see cref="T:GemBox.Spreadsheet.ValuesFilter" />.</returns>
      <remarks>
            If this <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.FilterColumn.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.FilterColumn.SetTop10Filter">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.Top10Filter" /> to this column.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Top10Filter" /> filters by a top N (percent or number of items).</para>
        <para>Use members of a returned <see cref="T:GemBox.Spreadsheet.Top10Filter" /> to specify filter settings.</para>
      </summary>
      <returns>A <see cref="T:GemBox.Spreadsheet.Top10Filter" />.</returns>
      <remarks>
            If this <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.FilterColumn.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.FilterColumn.SetCustomFilter">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.CustomFilter" /> to this column.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.CustomFilter" /> filters by a one or two conditions (operators and values).</para>
        <para>Use members of a returned <see cref="T:GemBox.Spreadsheet.CustomFilter" /> to specify filter settings.</para>
      </summary>
      <returns>A <see cref="T:GemBox.Spreadsheet.CustomFilter" />.</returns>
      <remarks>
            If this <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.FilterColumn.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.FilterColumn.SetDynamicFilter">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> to this column.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> filters by a dynamic criteria that can change, either with the data itself (e.g., "above average") or with the current system date (e.g., show values for "today").</para>
        <para>Use members of a returned <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> to specify filter settings.</para>
      </summary>
      <returns>A <see cref="T:GemBox.Spreadsheet.DynamicFilter" />.</returns>
      <remarks>
            If this <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.FilterColumn.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.FilterColumn.SetSort">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.SortLevel" /> to this column.</para>
        <para>All other sort levels are cleared.</para>
        <para>Use members of a returned <see cref="T:GemBox.Spreadsheet.SortLevel" /> to specify sort settings.</para>
      </summary>
      <returns>A <see cref="T:GemBox.Spreadsheet.SortLevel" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.FilterColumn.AddSort">
      <summary>
        <para>Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> to this column.</para>
        <para>Previous sort levels are maintained. If this <see cref="T:GemBox.Spreadsheet.FilterColumn" /> already specifies a sort level (<see cref="P:GemBox.Spreadsheet.FilterColumn.Sort" /> is not equal to <see langword="null" />) it will be removed before a new one is added.</para>
        <para>Use members of a returned <see cref="T:GemBox.Spreadsheet.SortLevel" /> to specify sort settings.</para>
      </summary>
      <returns>A <see cref="T:GemBox.Spreadsheet.SortLevel" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.FilterColumn.ClearFilter">
      <summary>
            Clears the filter from this <see cref="T:GemBox.Spreadsheet.FilterColumn" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FilterColumn.ClearSort">
      <summary>
            Clears the sort level from this <see cref="T:GemBox.Spreadsheet.FilterColumn" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FilterColumn.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.FilterColumn" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.FilterColumn" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.FilterColumnCollection">
      <summary>
            Represents a collection of filter columns.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FilterColumnCollection.Count">
      <summary>
            Gets the total number of filter columns in the <see cref="T:GemBox.Spreadsheet.FilterColumnCollection" />.
            </summary>
      <value>
            The total number of filter columns in the <see cref="T:GemBox.Spreadsheet.FilterColumnCollection" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.FilterColumnCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.FilterColumn" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.FilterColumn" /> at the specified index.
            </value>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.FilterColumn" /> to get.</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.FilterColumn" /> at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.FilterColumnCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.FilterColumnCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the sort levels.
            </summary>
      <returns>
            An enumerator that can be used to iterate through the sort levels.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.FilterColumnCollection.System#Collections#IEnumerable#GetEnumerator">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.FilterOperator">
      <summary>
            Operator enumerations for filtering.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FilterOperator.Equal">
      <summary>
            Show results which are equal to criteria.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FilterOperator.LessThan">
      <summary>
            Show results which are less than criteria.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FilterOperator.LessThanOrEqual">
      <summary>
            Show results which are less than or equal to criteria.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FilterOperator.NotEqual">
      <summary>
            Show results which are not equal to criteria.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FilterOperator.GreaterThanOrEqual">
      <summary>
            Show results which are greater than or equal to criteria.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FilterOperator.GreaterThan">
      <summary>
            Show results which are greater than criteria.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FilterType">
      <summary>
            Represents a filter type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FilterType.Values">
      <summary>
            A <see cref="T:GemBox.Spreadsheet.ValuesFilter" /> type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FilterType.Top10">
      <summary>
            A <see cref="T:GemBox.Spreadsheet.Top10Filter" /> type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FilterType.Custom">
      <summary>
            A <see cref="T:GemBox.Spreadsheet.CustomFilter" /> type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FilterType.Dynamic">
      <summary>
            A <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FilterType.Color">
      <summary>
        <para>A ColorFilter type.</para>
        <para>This filter is currently not supported by <b>GemBox.Spreadsheet</b>. It is preserved for XLSX round-trip.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FilterType.Icon">
      <summary>
        <para>An IconFilter type.</para>
        <para>This filter is currently not supported by <b>GemBox.Spreadsheet</b>. It is preserved for XLSX round-trip.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FixedWidthColumn">
      <summary>
            Class that represents column in Fixed-Width Text format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthColumn.LoadConverter">
      <summary>
            Gets or sets the converter for converting value from file to <see cref="T:GemBox.Spreadsheet.ExcelCell" /> value when loading from Fixed-Width Text file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthColumn.SaveConverter">
      <summary>
            Gets or sets the converter for converting <see cref="T:GemBox.Spreadsheet.ExcelCell" /> value to text when saving to Fixed-Width Text file.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthColumn.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthColumn" /> class.
            </summary>
      <param name="width">The column width.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthColumn.Width">
      <summary>
            Gets or sets a value that represents column width.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FixedWidthLoadOptions">
      <summary>
            Represents options for loading from Fixed-Width Text file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.ParseNumbers">
      <summary>
            Gets or sets a value indicating whether numbers will be parsed and stored as <see cref="T:System.Double" /> value when loading Fixed-Width Text file. If <see langword="false" />, numbers will be loaded as strings.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.NumberStyles">
      <summary>
            Gets or sets a value indicating number styles permitted in strings when parsing them to numeric types.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthLoadOptions.#ctor(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.FixedWidthColumn})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthLoadOptions" /> class.
            </summary>
      <param name="columns">The column definitions for Fixed-Width Text file.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthLoadOptions.#ctor(GemBox.Spreadsheet.FixedWidthColumn[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthLoadOptions" /> class.
            </summary>
      <param name="columns">The column definitions for Fixed-Width Text file.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.Columns">
      <summary>
            Gets the list of column definitions for Fixed-Width Text file. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of data being loaded from Fixed-Width Text file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.FormatProvider">
      <summary>
            Gets or sets the format provider for the Fixed-Width Text file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.Encoding">
      <summary>
            Gets or sets the encoding for the Fixed-Width Text file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthLoadOptions.LoadCore(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.FixedWidthSaveOptions">
      <summary>
            Represents options for saving to Fixed-Width Text file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to Fixed-Width Text file format.
            </summary>
      <remarks>
            These are the limits:
            <list type="bullet"><item><description>MaxRows: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxColumns: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxColors: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxCellStyles: <see cref="F:System.Int32.MaxValue" /></description></item></list></remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.ContentType">
      <summary>
            Gets the content-type for Fixed-Width Text file format: <b>"text/plain; charset=" + <see cref="P:GemBox.Spreadsheet.FixedWidthSaveOptions.Encoding" />.<see cref="P:System.Text.Encoding.WebName" /></b>.
            </summary>
      <value>
            The content-type for Fixed-Width Text file format.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthSaveOptions.#ctor(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.FixedWidthColumn})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthSaveOptions" /> class.
            </summary>
      <param name="columns">The column definitions for Fixed-Width Text file.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthSaveOptions.#ctor(GemBox.Spreadsheet.FixedWidthColumn[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthSaveOptions" /> class.
            </summary>
      <param name="columns">The column definitions for Fixed-Width Text file.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.Columns">
      <summary>
            Gets the List of column definitions for saving data. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of data being saved to Fixed-Width Text file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.FormatProvider">
      <summary>
            Gets or sets the format provider for the Fixed-Width Text file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.Encoding">
      <summary>
            Gets or sets the encoding for the Fixed-Width Text file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthSaveOptions.Save(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.FontSettings">
      <summary>
            Contains font related settings which are used when printing a spreadsheet or exporting a spreadsheet to a file format that requires font information.
            </summary>
      <remarks>
        <para>Setting the custom fonts location is usually used in medium trust environments to bypass file system operations restrictions imposed for file locations that are not under the application's jurisdiction.</para>
        <para>For more information, see <see href="https://www.gemboxsoftware.com/spreadsheet/examples/private-fonts/115">private fonts</see> example.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.FontSettings.FontsBaseUri">
      <summary>
            Gets or sets the base <see cref="T:System.Uri" /> where component looks for fonts. <see cref="T:System.Uri" /> path should end with <see cref="F:System.IO.Path.DirectorySeparatorChar" /> or <see cref="F:System.IO.Path.AltDirectorySeparatorChar" />.
            </summary>
      <value>
            The base <see cref="T:System.Uri" /> where component looks for fonts.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.FontSettings.FontsBaseDirectory">
      <summary>
            Gets or sets the base directory path where component looks for fonts. Directory path can be absolute or relative to <see cref="M:System.IO.Directory.GetCurrentDirectory" />.
            </summary>
      <value>
            The base directory path where component looks for fonts.
            </value>
      <remarks>
        <para>
        If you are developing ASP.NET application, then use <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.page.server">Server</see>.<see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpserverutility.mappath">MapPath(System.String)</see> to set the <see cref="P:GemBox.Spreadsheet.FontSettings.FontsBaseDirectory" />.
      </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.FontSettings.FontsBaseResourceLocation">
      <summary>
        <para>Gets or sets the base resource location where component looks for fonts specified as resources inside the local or referenced assembly.</para>
        <para>Read Remarks for details about the format of the <see cref="P:GemBox.Spreadsheet.FontSettings.FontsBaseResourceLocation" /> for <b>desktop</b> and <b>web</b> applications.</para>
      </summary>
      <value>
            The base resource location where component looks for fonts specified as resources inside the local or referenced assembly.
            </value>
      <remarks>
        <note type="important">
          <para>When you add fonts as resources to your application, make sure you are setting the <b>&lt;Resource&gt;</b> element when targeting <b>.NET Framework</b> or when targeting <b>.NET Core with enabled WPF</b>.</para>
          <para>Otherwise, use <b>&lt;EmbeddedResource&gt;</b> element for the build action.</para>
        </note>
        <para>Following image shows an example of a <b>Windows Console</b> project structure with font files added as resources.</para>
        <img src="~/images/packaging-fonts-windows.png" alt="Packaging Fonts in Windows application" title="Packaging Fonts in Windows applications" border="0" style="border-style:none" />
        <para>Following table illustrates the various base resource locations that you can specify to use fonts from the above <b>Windows Console</b> project structure.</para>
        <para>Resource locations consist of <b>required</b> and <i>adjustable</i> parts.</para>
        <table border="1" cellpadding="5" cellspacing="0">
          <tr>
            <th>Used font</th>
            <th>
              <see cref="P:GemBox.Spreadsheet.FontSettings.FontsBaseResourceLocation" />
            </th>
            <th>Notes</th>
          </tr>
          <tr>
            <td>Font1.ttf</td>
            <td>"<b>/</b>"</td>
            <td>Font resource files are in the root of local assembly.</td>
          </tr>
          <tr>
            <td>Font2.ttf</td>
            <td>"<b>/</b><i>MyFonts</i><b>/</b>"</td>
            <td>Font resource files are in the subfolder of local assembly.</td>
          </tr>
          <tr>
            <td>Font3.ttf</td>
            <td>"<b>/</b><i>MyClassLibrary</i><b>;component/</b>"</td>
            <td>Font resource files are in the root of referenced assembly.</td>
          </tr>
          <tr>
            <td>Font4.ttf</td>
            <td>"<b>/</b><i>MyClassLibrary</i><b>;component/</b><i>MyFonts</i><b>/</b>"</td>
            <td>Font resource files are in the subfolder of referenced assembly.</td>
          </tr>
        </table>
        <para>Following image shows an example of a <b>Web ASP.NET</b> project structure with font files added as resources.</para>
        <img src="~/images/packaging-fonts-web.png" alt="Packaging Fonts in Web application" title="Packaging Fonts in Web applications" border="0" style="border-style:none" />
        <para>Following table illustrates the various base resource locations that you can specify to use fonts from the above <b>Web ASP.NET</b> project structure.</para>
        <para>Since ASP.NET assembly is actually a class library referenced from ASP.NET web server, resource location must always include <b>;component</b> part.</para>
        <table border="1" cellpadding="5" cellspacing="0">
          <tr>
            <th>Used font</th>
            <th>
              <see cref="P:GemBox.Spreadsheet.FontSettings.FontsBaseResourceLocation" />
            </th>
            <th>Notes</th>
          </tr>
          <tr>
            <td>Font1.ttf</td>
            <td>"<b>/</b><i>MyWebApplication</i><b>;component/</b>"</td>
            <td>Font resource files are in the root of local assembly.</td>
          </tr>
          <tr>
            <td>Font2.ttf</td>
            <td>"<b>/</b><i>MyWebApplication</i><b>;component/</b><i>MyFonts</i><b>/</b>"</td>
            <td>Font resource files are in the subfolder of local assembly.</td>
          </tr>
          <tr>
            <td>Font3.ttf</td>
            <td>"<b>/</b><i>MyClassLibrary</i><b>;component/</b>"</td>
            <td>Font resource files are in the root of referenced assembly.</td>
          </tr>
          <tr>
            <td>Font4.ttf</td>
            <td>"<b>/</b><i>MyClassLibrary</i><b>;component/</b><i>MyFonts</i><b>/</b>"</td>
            <td>Font resource files are in the subfolder of referenced assembly.</td>
          </tr>
        </table>
      </remarks>
      <seealso href="https://docs.microsoft.com/en-us/dotnet/framework/wpf/advanced/packaging-fonts-with-applications">Packaging Fonts with Applications</seealso>
      <seealso href="https://docs.microsoft.com/en-us/dotnet/framework/wpf/app-development/pack-uris-in-wpf">Pack URIs in WPF</seealso>
    </member>
    <member name="T:GemBox.Spreadsheet.FormattedCharacterRange">
      <summary>
            Represents a range of characters within the cell or comment text.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/excel-cell-inline-formatting/203">In-line Text Formatting example</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/excel-cell-comments/208">Comments example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.FormattedCharacterRange.StartIndex">
      <summary>
            Gets the zero-based starting character position.
            </summary>
      <value>
            The zero-based starting character position.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.FormattedCharacterRange.Length">
      <summary>
            Gets the number of characters.
            </summary>
      <value>
            The number of characters.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.FormattedCharacterRange.Text">
      <summary>
            Gets the text represented by this character range.
            </summary>
      <value>
            The text represented by this character range.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.FormattedCharacterRange.Font">
      <summary>
            Gets the font of the characters.
            </summary>
      <value>
            The font of the characters.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.FormattedExcelDrawing">
      <summary>
            Represents a formatted drawing (picture, chart, etc.) which can be exported to PDF, XPS, image or be printed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FormattedExcelDrawing.Width">
      <summary>
            Gets the drawing width in <see cref="F:GemBox.Spreadsheet.LengthUnit.Point" />s.
            </summary>
      <value>
            The drawing width in <see cref="F:GemBox.Spreadsheet.LengthUnit.Point" />s.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.FormattedExcelDrawing.Height">
      <summary>
            Gets the drawing height in <see cref="F:GemBox.Spreadsheet.LengthUnit.Point" />s.
            </summary>
      <value>
            The drawing height in <see cref="F:GemBox.Spreadsheet.LengthUnit.Point" />s.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.FormattedExcelDrawing.Content">
      <summary>
            Gets the drawing content.
            </summary>
      <value>
            The drawing content.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.IO.Stream,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the drawing in the specified stream.
            </summary>
      <param name="stream">The stream in which to save the drawing.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
      <remarks>Parameter <paramref name="options" />, currently, must be of type <see cref="T:GemBox.Spreadsheet.PdfSaveOptions" />, <see cref="T:GemBox.Spreadsheet.XpsSaveOptions" /> or <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.String,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the drawing to a file with the specified path.
            </summary>
      <param name="path">The path to which to save the drawing.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
      <remarks>Parameter <paramref name="options" />, currently, must be of type <see cref="T:GemBox.Spreadsheet.PdfSaveOptions" />, <see cref="T:GemBox.Spreadsheet.XpsSaveOptions" /> or <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" />.</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.String)">
      <summary>
            Saves the drawing to a file with the specified path. Path must include file extension.
            </summary>
      <param name="path">The path to which to save the drawing.</param>
      <exception cref="T:System.ArgumentException">If file extension is not specified or not supported. If file extension is not recognized, use <see cref="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> method overload instead.</exception>
      <remarks>
            File extension that is extracted from the <paramref name="path" /> is used to create the appropriate <see cref="T:GemBox.Spreadsheet.SaveOptions" /> derived class instance that is then passed to the <see cref="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> method.
            <para>Following file extensions are supported:</para><list type="bullet"><item><description>Portable Document Format: .pdf</description></item><item><description>XML Paper Specification: .xps</description></item><item><description>Portable Network Graphics: .png</description></item><item><description>Joint Photographic Experts Group: .jpeg, .jpg</description></item><item><description>Bitmap: .bmp</description></item><item><description>Tagged Image File Format: .tiff, .tif</description></item><item><description>Windows Media Photo: .wdp</description></item></list></remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.Object,System.String)">
      <summary>
            Saves the drawing to a System.Web.HttpResponse or System.Web.HttpResponseBase output stream or a System.Net.Http.HttpResponseMessage and sets appropriate HTTP response headers (Content-Type and Content-Disposition). Use this method in ASP.NET application to send the drawing to a client browser. File format is resolved from <paramref name="fileName" /> extension. See remarks why <paramref name="httpResponse" /> parameter is of type <see cref="T:System.Object" />.
            </summary>
      <param name="httpResponse">System.Web.HttpResponse object that can be retrieved through the Response property of the System.Web.HttpApplication, System.Web.HttpContext, System.Web.UI.Page or System.Web.UI.UserControl classes or System.Web.HttpResponseBase object or System.Net.Http.HttpResponseMessage object.</param>
      <param name="fileName">File name that will be presented in client browser when downloading a file.</param>
      <exception cref="T:System.ArgumentException">If file extension is not specified or not supported. If file extension is not recognized, use <see cref="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.Object,System.String,GemBox.Spreadsheet.SaveOptions)" /> method overload instead.</exception>
      <remarks>
        <note type="note">
      Supported only if updating the whole page with a postback and not if doing partial-page updates (when you use <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.updatepanel">UpdatePanel</see> controls to update selected regions of a page).
    </note>
        <para>
      This method accepts <see cref="T:System.Object" /> rather than <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponse">HttpResponse</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponsebase">HttpResponseBase</see> or <see href="https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpresponsemessage">HttpResponseMessage</see> because otherwise <b>GemBox.Document</b> assembly would have a dependency on <b>System.Web</b> or <b>System.Net.Http</b> assemblies and could not be used in applications which target <i>Client Profile .NET Framework</i>.
    </para>
        <para>
          <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponse">HttpResponse</see> can be retrieved through the <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.page.response">Response</see> property of the <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpapplication">HttpApplication</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpcontext">HttpContext</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.page">Page</see> or <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.usercontrol">UserControl</see> classes.
    </para>
        <para>For supported file extensions, see remarks for <see cref="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.String)" /> method.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/asp-net-excel-export-gridview/5101">Export Excel file with ASP.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.Object,System.String,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the drawing to a System.Web.HttpResponse or System.Web.HttpResponseBase output stream or a System.Net.Http.HttpResponseMessage and sets appropriate HTTP response headers (Content-Type and Content-Disposition). Use this method in ASP.NET application to send the drawing to a client browser. File format is defined with <paramref name="options" /> parameter. See remarks why <paramref name="httpResponse" /> parameter is of type <see cref="T:System.Object" />.
            </summary>
      <param name="httpResponse">System.Web.HttpResponse object that can be retrieved through the Response property of the System.Web.HttpApplication, System.Web.HttpContext, System.Web.UI.Page or System.Web.UI.UserControl classes or System.Web.HttpResponseBase object or System.Net.Http.HttpResponseMessage object.</param>
      <param name="fileName">File name that will be presented in client browser when downloading a file.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
      <remarks>
        <note type="note">
      Supported only if updating the whole page with a postback and not if doing partial-page updates (when you use <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.updatepanel">UpdatePanel</see> controls to update selected regions of a page).
    </note>
        <para>
      This method accepts <see cref="T:System.Object" /> rather than <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponse">HttpResponse</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponsebase">HttpResponseBase</see> or <see href="https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpresponsemessage">HttpResponseMessage</see> because otherwise <b>GemBox.Document</b> assembly would have a dependency on <b>System.Web</b> or <b>System.Net.Http</b> assemblies and could not be used in applications which target <i>Client Profile .NET Framework</i>.
    </para>
        <para>
          <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpresponse">HttpResponse</see> can be retrieved through the <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.page.response">Response</see> property of the <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpapplication">HttpApplication</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.httpcontext">HttpContext</see>, <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.page">Page</see> or <see href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.usercontrol">UserControl</see> classes.
    </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/asp-net-excel-export-gridview/5101">Export Excel file with ASP.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Print">
      <summary>
            Prints the drawing to the default printer.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Print(System.String)">
      <summary>
            Prints the drawing to the specified printer.
            </summary>
      <param name="printerName">Printer name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Print(System.String,GemBox.Spreadsheet.PrintOptions)">
      <summary>
            Prints the drawing to the specified printer according to specified options.
            </summary>
      <param name="printerName">Printer name.</param>
      <param name="options">Print options.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.FormulaType">
      <summary>
            Represents a formula type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FormulaType.Normal">
      <summary>
            Normal cell formula.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FormulaType.Array">
      <summary>
            Legacy array formula, commonly referred to as CSE formula.
            </summary>
      <seealso href="https://support.microsoft.com/en-us/office/guidelines-and-examples-of-array-formulas-7d94a64e-3ff3-4686-9372-ecfd5caa57c7" />
    </member>
    <member name="F:GemBox.Spreadsheet.FormulaType.DynamicArray">
      <summary>
            Dynamic array formula.
            </summary>
      <seealso href="https://support.microsoft.com/en-us/office/dynamic-array-formulas-and-spilled-array-behavior-205c6b06-03ba-4151-89a1-87a7eb36e531" />
    </member>
    <member name="F:GemBox.Spreadsheet.FormulaType.DataTable">
      <summary>
            Data table formula.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FreeLimitEventArgs">
      <summary>
            Provides data for the <see cref="E:GemBox.Spreadsheet.SpreadsheetInfo.FreeLimitReached" /> event.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FreeLimitEventArgs.FreeLimitReachedAction">
      <summary>
            Gets or sets the choice for proceeding when free limit is reached.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FreeLimitEventArgs.File">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> on which limit was reached.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FreeLimitReachedAction">
      <summary>
            Type of action that can be chosen when free limit is reached.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FreeLimitReachedAction.ThrowException">
      <summary>
            Throw <see cref="T:GemBox.Spreadsheet.FreeLimitReachedException" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FreeLimitReachedAction.Stop">
      <summary>
            Stop reading/writing.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FreeLimitReachedAction.ContinueAsTrial">
      <summary>
            Continue reading/writing using trial mode.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FreeLimitReachedException">
      <summary>
            Exception that occurs when free limit is reached.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.GradientShadingStyle">
      <summary>
        <para>Represents a shading style and variant of a gradient fill effect.</para>
        <para>Gradient fill is currently supported in XLSX, XLSB and partially in rendering formats (PDF, XPS and image formats).</para>
      </summary>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelFillPattern.GradientStyle" />
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.None">
      <summary>
            Cell doesn't have any gradient fill effect.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.HorizontalHigh">
      <summary>
            Linear gradient where the first color starts at the top side of the cell and blends horizontally with the second color which starts at the bottom side of the cell [1 - 2].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.HorizontalLow">
      <summary>
            Linear gradient where the first color starts at the bottom side of the cell and blends horizontally with the second color which starts at the top side of the cell [2 - 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.Horizontal">
      <summary>
            Linear gradient where the first color starts at the top and bottom sides of the cell and blends horizontally with the second color which starts in the middle of the cell [1 - 2 - 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.VerticalLow">
      <summary>
            Linear gradient where the first color starts at the left side of the cell and blends vertically with the second color which starts at the right side of the cell [1 | 2].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.VerticalHigh">
      <summary>
            Linear gradient where the first color starts at the right side of the cell and blends vertically with the second color which starts at the left side of the cell [2 | 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.Vertical">
      <summary>
            Linear gradient where the first color starts at the left and right sides of the cell and blends vertically with the second color which starts in the middle of the cell [1 | 2 | 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.DiagonalUpHigh">
      <summary>
            Linear gradient where the first color starts at the top-left corner of the cell and blends diagonally with the second color which starts at the bottom-right corner of the cell [1 / 2].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.DiagonalUpLow">
      <summary>
            Linear gradient where the first color starts at the bottom-right corner of the cell and blends diagonally with the second color which starts at the top-left corner of the cell [2 / 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.DiagonalUp">
      <summary>
            Linear gradient where the first color starts at the top-left and bottom-right corners of the cell and blends diagonally with the second color which starts in the middle of the cell [1 / 2 / 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.DiagonalDownHigh">
      <summary>
            Linear gradient where the first color starts at the top-right corner of the cell and blends diagonally with the second color which starts at the bottom-left corner of the cell [2 \ 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.DiagonalDownLow">
      <summary>
            Linear gradient where the first color starts at the bottom-left corner of the cell and blends diagonally with the second color which starts at the top-right corner of the cell [1 \ 2].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.DiagonalDown">
      <summary>
            Linear gradient where the first color starts at the top-right and bottom-left corners of the cell and blends diagonally with the second color which starts in the middle of the cell [1 \ 2 \ 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.FromTopLeftCorner">
      <summary>
            Path gradient where the first color starts at the top-left corner of the cell and blends with the second color which starts at the other corners of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.FromTopRightCorner">
      <summary>
            Path gradient where the first color starts at the top-right corner of the cell and blends with the second color which starts at the other corners of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.FromBottomLeftCorner">
      <summary>
            Path gradient where the first color starts at the bottom-left corner of the cell and blends with the second color which starts at the other corners of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.FromBottomRightCorner">
      <summary>
            Path gradient where the first color starts at the bottom-right corner of the cell and blends with the second color which starts at the other corners of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.FromCenter">
      <summary>
            Path gradient where the first color starts in the middle of the cell and blends with the second color which starts at the corners of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.Complex">
      <summary>
            Gradient fill effect is too complex to be described with this enumeration.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HeaderFooter">
      <summary>
            Represents worksheet's header or footer.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooter.#ctor">
      <summary>
        <see cref="T:GemBox.Spreadsheet.HeaderFooter" /> constructor.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooter.LeftSection">
      <summary>
            Gets or sets left section.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooter.CenterSection">
      <summary>
            Gets or sets center section.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooter.RightSection">
      <summary>
            Gets or sets right section.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HeaderFooterFieldType">
      <summary>
            Represents types of <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> predefined fields.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.PageNumber">
      <summary>
            Page number.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.NumberOfPages">
      <summary>
            Total number of pages.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.Date">
      <summary>
            Current date.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.Time">
      <summary>
            Current time.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.SheetName">
      <summary>
            Sheet name.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.FileName">
      <summary>
            File name.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.FilePath">
      <summary>
            File path.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HeaderFooterPage">
      <summary>
            Represents header/footer which should be shown on a specific worksheet page (first page, even pages and all other pages).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterPage.#ctor">
      <summary>
        <see cref="T:GemBox.Spreadsheet.HeaderFooterPage" /> constructor.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooterPage.Header">
      <summary>
            Gets or sets header for this <see cref="T:GemBox.Spreadsheet.HeaderFooterPage" /> instance.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooterPage.Footer">
      <summary>
            Gets or sets footer for this <see cref="T:GemBox.Spreadsheet.HeaderFooterPage" /> instance.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HeaderFooterSection">
      <summary>
            Represents <see cref="T:GemBox.Spreadsheet.HeaderFooter">header or footer</see> section.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.#ctor">
      <summary>
        <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> constructor.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooterSection.Content">
      <summary>
            Gets or sets <see cref="T:GemBox.Spreadsheet.HeaderFooter">header/footer</see> section content.
            </summary>
      <remarks>
        <para>The header string may contain special commands, for example placeholders for the page number, 
            current date, or text formatting attributes. These fields are represented by single letters 
            (exception: font name and size) with a leading ampersand. If the ampersand is part of 
            the regular header text, it will be duplicated.</para>
        <para>For more information consult <see href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/b64cf6b8-9472-4f97-9a69-d839f0fa1089">Microsoft Excel documentation</see>.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.Append(System.String)">
      <summary>
            Appends text to <see cref="P:GemBox.Spreadsheet.HeaderFooterSection.Content" />.
            </summary>
      <param name="text">Text to append.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.Append(System.String,GemBox.Spreadsheet.ExcelFont)">
      <summary>
            Appends text to <see cref="P:GemBox.Spreadsheet.HeaderFooterSection.Content" />.
            </summary>
      <param name="text">Text to append.</param>
      <param name="font">Desired <see cref="T:GemBox.Spreadsheet.ExcelFont" /> font.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.Append(GemBox.Spreadsheet.HeaderFooterFieldType)">
      <summary>
            Appends special header/footer field to <see cref="P:GemBox.Spreadsheet.HeaderFooterSection.Content" />.
            </summary>
      <param name="fieldType">Special Header/Footer field.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.Append(GemBox.Spreadsheet.HeaderFooterFieldType,GemBox.Spreadsheet.ExcelFont)">
      <summary>
            Appends special header/footer field to <see cref="P:GemBox.Spreadsheet.HeaderFooterSection.Content" />.
            </summary>
      <param name="fieldType">Special Header/Footer field.</param>
      <param name="font">Desired <see cref="T:GemBox.Spreadsheet.ExcelFont" /> font.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.AppendPicture(System.String)">
      <summary>
            Appends picture to this <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> instance.
            </summary>
      <param name="fileName">The fileName of the file that contains picture.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.AppendPicture(System.String,System.Int32,System.Int32)">
      <summary>
            Appends picture to this <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> instance.
            </summary>
      <param name="fileName">The fileName of the file that contains picture.</param>
      <param name="width">Picture width (in pixels).</param>
      <param name="height">Picture height (in pixels).</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.AppendPicture(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
            Appends picture to this <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> instance.
            </summary>
      <param name="pictureStream">Stream of the picture to be added.</param>
      <param name="imageFormat">Picture format.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.AppendPicture(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,System.Int32,System.Int32)">
      <summary>
            Appends picture to this <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> instance.
            </summary>
      <param name="pictureStream">Stream of the picture to be added.</param>
      <param name="imageFormat">Picture format.</param>
      <param name="width">Picture width (in pixels).</param>
      <param name="height">Picture height (in pixels).</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.HorizontalAlignmentStyle">
      <summary>
            Represents available horizontal alignment options used in <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" /> member. 
            </summary>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.General">
      <summary>
        <para>The horizontal alignment is general-aligned.</para>
        <para>Text data is left-aligned.</para>
        <para>Numbers, dates, and times are right-aligned.</para>
        <para>Boolean types are centered.</para>
        <para>Changing the alignment does not change the type of data.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Left">
      <summary>
        <para>The horizontal alignment is left-aligned.</para>
        <para>Aligns contents at the left edge of the cell.</para>
        <para>If an <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" /> amount is specified, the contents of the cell is indented from the left by the specified number of character spaces.</para>
        <para>The character spaces are based on the default font and font size for the workbook (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b> style).</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Center">
      <summary>
            The horizontal alignment is centered, meaning the text is centered across the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Right">
      <summary>
            The horizontal alignment is right-aligned, meaning that cell contents are aligned at the right edge of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Fill">
      <summary>
        <para>Indicates that the value of the cell should be filled across the entire width of the cell.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.General" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Justify">
      <summary>
        <para>The horizontal alignment is justified (flush left and right).</para>
        <para>For each line of text, aligns each line of the wrapped text in a cell to the right and left (except the last line).</para>
        <para>If no single line of text wraps in the cell, then the text is not justified.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.CenterAcross">
      <summary>
        <para>The horizontal alignment is centered across multiple cells.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Center" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Distributed">
      <summary>
        <para>Indicates that each 'word' in each line of text inside the cell is evenly distributed across the width of the cell, with flush right and left margins.</para>
        <para>When there is also an <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" /> value to apply, both the left and right side of the cell are padded by the indent value.</para>
        <para>A 'word' is a set of characters with no space character in them.</para>
        <para>Two lines inside a cell are separated by a carriage return.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HorizontalPageBreak">
      <summary>
            Specifies a horizontal position where the new page begins when the worksheet is printed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HorizontalPageBreak.Row">
      <summary>
            Index of the first row of the new page.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HorizontalPageBreak.FirstColumn">
      <summary>
            Index of the first column of the new page.
            </summary>
      <remarks>
            Use 0 (first column) if you don't care.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.HorizontalPageBreak.LastColumn">
      <summary>
            Index of the last column of the new page.
            </summary>
      <remarks>
            Use 255 (last column) if you don't care.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.HorizontalPageBreak.CheckBreakIndex(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.HorizontalPageBreak.CheckLimit(System.Int32)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.HorizontalPageBreakCollection">
      <summary>
            Collection of horizontal page breaks (<see cref="T:GemBox.Spreadsheet.HorizontalPageBreak" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HorizontalPageBreakCollection.CreateItem(System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.HorizontalPageBreakCollection.Add(System.Int32)">
      <summary>
            Adds a new horizontal page break above the specified row.
            </summary>
      <param name="row">The zero-based index of the row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.HorizontalPageBreakCollection.Add(System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a new horizontal page break above the specified row and within specified columns.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="firstColumn">The zero-based index of the first column.</param>
      <param name="lastColumn">The zero-based index of the last column.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.HorizontalPageBreakCollection.Item(System.Int32)">
      <summary>
            Gets or sets the horizontal page break at the specified index.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HtmlLoadOptions">
      <summary>
            Represents options for loading from HyperText Markup Language File (HTML) format.
            </summary>
      <remarks>
            When importing, each paragraph will be translated to spreadsheet row.
            Text values will be merged in spreadsheet cell.
            Table rows and cells will be translated to spreadsheet rows and cells.
            All content inside table cell will be merged in spreadsheet cell, even nested tables and paragraphs.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.ParseNumbers">
      <summary>
            Gets or sets a value indicating whether numbers will be parsed and stored as <see cref="T:System.Double" /> value when loading HTML file. If <see langword="false" />, numbers will be loaded as strings.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.NumberStyles">
      <summary>
            Gets or sets a value indicating number styles permitted in strings when parsing them to numeric types.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.ParseDates">
      <summary>
            Gets or sets a value indicating whether dates will be parsed and stored as <see cref="T:System.DateTime" /> values when loading a CSV file. 
            If <see langword="false" />, numbers will be loaded as strings. Default value is <see langword="true" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.DateTimeStyles">
      <summary>
            Gets or sets a value indicating DateTime styles permitted in strings when parsing them to DateTimes. Default value is <see cref="F:System.Globalization.DateTimeStyles.None" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.DateTimeFormats">
      <summary>
            Gets or sets an list of formats to be used when parsing cell values to <see cref="T:System.DateTime" /> (provided that <see cref="P:GemBox.Spreadsheet.HtmlLoadOptions.ParseDates" /> is <see langword="true" />). 
            </summary>
      <remarks>
        <para>If this list is empty and <see cref="P:GemBox.Spreadsheet.HtmlLoadOptions.ParseDates" /> is set to <see langword="true" />, texts will be converted to <see cref="T:System.DateTime" /> values when they are in one of the default formats supported by <see cref="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />.</para>
        <para>By default, this list is pre-filled with the following formats:</para>
        <list type="table">
          <item>
            <description>"d-M-yyyy"</description>
            <description>"d-M-yyyy HH:mm"</description>
            <description>"d-M-yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"dd-MM-yyyy"</description>
            <description>"dd-MM-yyyy HH:mm"</description>
            <description>"dd-MM-yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"M-d-yyyy"</description>
            <description>"M-d-yyyy HH:mm"</description>
            <description>"M-d-yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"MM-dd-yyyy"</description>
            <description>"MM-dd-yyyy HH:mm"</description>
            <description>"MM-dd-yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"yyyy-M-d"</description>
            <description>"yyyy-M-d HH:mm"</description>
            <description>"yyyy-M-d HH:mm:ss"</description>
          </item>
          <item>
            <description>"yyyy-MM-dd"</description>
            <description>"yyyy-MM-dd HH:mm"</description>
            <description>"yyyy-MM-dd HH:mm:ss"</description>
          </item>
          <item>
            <description>"d/M/yyyy"</description>
            <description>"d/M/yyyy HH:mm"</description>
            <description>"d/M/yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"dd/MM/yyyy"</description>
            <description>"dd/MM/yyyy HH:mm"</description>
            <description>"dd/MM/yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"M/d/yyyy"</description>
            <description>"M/d/yyyy HH:mm"</description>
            <description>"M/d/yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"MM/dd/yyyy"</description>
            <description>"MM/dd/yyyy HH:mm"</description>
            <description>"MM/dd/yyyy HH:mm:ss"</description>
          </item>
          <item>
            <description>"yyyy/M/d"</description>
            <description>"yyyy/M/d HH:mm"</description>
            <description>"yyyy/M/d HH:mm:ss"</description>
          </item>
          <item>
            <description>"yyyy/MM/dd"</description>
            <description>"yyyy/MM/dd HH:mm"</description>
            <description>"yyyy/MM/dd HH:mm:ss"</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.InheritCellStyle">
      <summary>
        <para>Gets or sets a value indicating whether the style should be inherited from the cell where the HTML is being inserted.</para>
        <para>The default value is <see langword="false" />.</para>
      </summary>
      <remarks>
            This property is currently used only when loading HTML with <see cref="T:GemBox.Spreadsheet.ExcelCell" />.<see cref="M:GemBox.Spreadsheet.ExcelCell.SetValue(System.String,GemBox.Spreadsheet.HtmlLoadOptions)" /> method and
            is ignored when loading the whole HTML file using <see cref="T:GemBox.Spreadsheet.ExcelFile" />.<see cref="M:GemBox.Spreadsheet.ExcelFile.Load(System.String)" /> methods.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.HtmlLoadOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.HtmlLoadOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.ParseFormatProvider">
      <summary>
            Gets or sets the format provider for the HTML file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.Encoding">
      <summary>
            Gets or sets the encoding for the HTML file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.HtmlLoadOptions.LoadCore(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.HtmlSaveOptions">
      <summary>
            Represents options for saving to HyperText Markup Language File (HTML) format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.FilesDirectorySrcPath">
      <summary>
            Gets or sets the relative directory that will be used when referencing <see cref="T:GemBox.Spreadsheet.ExcelPicture" />s and <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />s files in the HTML.
            </summary>
      <value>
            The relative directory that will be used when referencing <see cref="T:GemBox.Spreadsheet.ExcelPicture" />s and <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />s files in the HTML.
            </value>
      <remarks>
            If value is <see langword="null" /> or <see cref="F:System.String.Empty" /> and HTML export is called with <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)" /> or <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> overload, 
            value will be automatically set to <i>htmlFileNameWithoutExtension</i> + "_files". 
            </remarks>
      <!-- No matching elements were found for the following include tag -->
      <include file="..\Docs\resources\SharedComments.xml" path="Comments/Comment[@name=&quot;HtmlExportImages&quot;]/*" />
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.FilesDirectoryPath">
      <summary>
            Gets or sets the physical directory where <see cref="T:GemBox.Spreadsheet.ExcelPicture" />s and <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />s files will be saved.
            </summary>
      <value>
            The physical directory where <see cref="T:GemBox.Spreadsheet.ExcelPicture" />s and <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />s files will be saved.
            </value>
      <remarks>
            If value is <see langword="null" /> or <see cref="F:System.String.Empty" /> and HTML export is called with <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)" /> or <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> overload, 
            value will be automatically set to <i>htmlFileNameWithoutExtension</i> + "_files". 
            This directory will be created in the same location as HTML file.
            </remarks>
      <!-- No matching elements were found for the following include tag -->
      <include file="..\Docs\resources\SharedComments.xml" path="Comments/Comment[@name=&quot;HtmlExportImages&quot;]/*" />
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.HtmlType">
      <summary>
            Gets or sets the type of export.
            </summary>
      <value>
            The <see cref="P:GemBox.Spreadsheet.HtmlSaveOptions.HtmlType" /> value for type of export.
            </value>
      <remarks>
        <para>For <see cref="F:GemBox.Spreadsheet.HtmlType.Html" /> and <see cref="F:GemBox.Spreadsheet.HtmlType.HtmlTable" /> values, pictures will be exported only if <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)" /> or <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> overload is used or if <see cref="P:GemBox.Spreadsheet.HtmlSaveOptions.FilesDirectoryPath" /> is specified or if <see cref="P:GemBox.Spreadsheet.HtmlSaveOptions.EmbedImages" /> is set to <see langword="true" />.</para>
        <para>For <see cref="F:GemBox.Spreadsheet.HtmlType.Mhtml" /> value, pictures are always exported.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.WriteCellAddress">
      <summary>
            Gets or sets a value indicating whether each td HTML element should contain data-cell attribute with cell address for this cell.
            </summary>
      <remarks>
            If the value of this property is <see langword="true" /> then each td HTML element will contain data-cell attribute with cell address for this cell (for example data-cell="A1").
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.EmbedImages">
      <summary>
            Gets or sets a value indicating whether images are embedded directly within the HTML file in form of Base64 encoding.
            </summary>
      <remarks>
            If the value of this property is <see langword="true" /> then each image element will contain raw image data in its source attribute.
            This value doesn't change the pictures export behavior when using <see cref="F:GemBox.Spreadsheet.HtmlType.Mhtml" />. 
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.HtmlSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.HtmlSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.ContentType">
      <summary>
            Gets the content-type for HTML file format:
            <list type="bullet"><item><description><b>message/rfc822</b> if <see cref="P:GemBox.Spreadsheet.HtmlSaveOptions.HtmlType" /> is <see cref="F:GemBox.Spreadsheet.HtmlType.Mhtml" />, otherwise</description></item><item><description><b>"text/html; charset=" + <see cref="P:GemBox.Spreadsheet.HtmlSaveOptions.Encoding" />.<see cref="P:System.Text.Encoding.WebName" /></b>.</description></item></list></summary>
      <value>
            The content-type for HTML file format.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.Encoding">
      <summary>
            Gets or sets the encoding for the Html file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to HTML file format.
            </summary>
      <remarks>
            These are the limits:
            <list type="bullet"><item><description>MaxRows: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxColumns: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxColors: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxCellStyles: <see cref="F:System.Int32.MaxValue" /></description></item></list></remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.HtmlSaveOptions.Save(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.PicturesDirectoryImgSrcPath">
      <summary>
            Gets or sets the pictures directory that will be used when referencing images in the HTML and Javascript.
            </summary>
      <value>
            The pictures directory that will be used when referencing images in the HTML.
            </value>
      <remarks>
            If value is <see langword="null" /> or empty string and HTML export is called with filePath parameter overload, 
            value will be automatically set to htmlFileNameWithoutExtension + "-Images". 
            This directory will be created in the same location as HTML file.        
            </remarks>
      <!-- No matching elements were found for the following include tag -->
      <include file="..\Docs\resources\SharedComments.xml" path="Comments/Comment[@name=&quot;HtmlExportImages&quot;]/*" />
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.PicturesDirectoryPath">
      <summary>
            Gets or sets the directory where <see cref="T:GemBox.Spreadsheet.ExcelPicture" />s will be physically saved.
            </summary>
      <value>
            The directory where <see cref="T:GemBox.Spreadsheet.ExcelPicture" />s will be physically saved.
            </value>
      <remarks>
            If value is <see langword="null" /> or empty string and HTML export is called with filePath parameter overload, 
            value will be automatically set to htmlFileNameWithoutExtension + "-Images".
            This directory will be created in the same location as HTML file.
            </remarks>
      <!-- No matching elements were found for the following include tag -->
      <include file="..\Docs\resources\SharedComments.xml" path="Comments/Comment[@name=&quot;HtmlExportImages&quot;]/*" />
    </member>
    <member name="T:GemBox.Spreadsheet.HtmlType">
      <summary>
            Defines type of HTML export.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HtmlType.Html">
      <summary>
            Export entire HTML document. Pictures are exported only if <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)" /> or <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> overload is used or if <see cref="P:GemBox.Spreadsheet.HtmlSaveOptions.FilesDirectoryPath" /> is specified.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HtmlType.HtmlTable">
      <summary>
            Export HTML table and its content. Pictures are exported only if <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)" /> or <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> overload is used or if <see cref="P:GemBox.Spreadsheet.HtmlSaveOptions.FilesDirectoryPath" /> is specified.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HtmlType.Mhtml">
      <summary>
            Export entire HTML document and images to MIME HTML (MHTML) format. Pictures are always exported.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.IgnoredError">
      <summary>
            Represents a single ignored error for a range of cells.
            </summary>
      <remarks>
        <para>
        A cell is considered to have an error condition when it meets one of the conditions specified in the <see cref="P:GemBox.Spreadsheet.IgnoredError.ErrorTypes" /> member.
        For example, if a cell is formatted as text but contains a numeric value, this is considered to be a potential error because the number won't be treated as a number, for example, in calculations.
      </para>
        <para>
        Note that this is simply a guess by the implementing application, and a recommendation to the user.
        Cells with the errors specified in <see cref="T:GemBox.Spreadsheet.IgnoredErrorTypes" /> may have perfectly valid reasons for being in such a state, for example a cell formatted as text which contains numeric Postal Codes or Order numbers.
        It is useful to format these cells as text so that leading zeros remain as part of the value instead of being removed.
      </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.IgnoredError.AppliesTo">
      <summary>
            Gets or sets the sequence of references to cell ranges over which this ignored error is applied.
            </summary>
      <value>
            The sequence of references to cell ranges over which this ignored error is applied.
            </value>
      <exception cref="T:System.ArgumentException">Parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.IgnoredError.ErrorTypes">
      <summary>
            Gets or sets the ignored error types.
            </summary>
      <value>
            The ignored error types.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.IgnoredError.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.IgnoredError" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.IgnoredError" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.IgnoredErrorCollection">
      <summary>
            Represents a collection of an ignored errors in the worksheet.
            </summary>
      <remarks>
        <para>
        A cell is considered to have an error condition when it meets one of the conditions specified in the <see cref="P:GemBox.Spreadsheet.IgnoredError.ErrorTypes" /> member.
        For example, if a cell is formatted as text but contains a numeric value, this is considered to be a potential error because the number won't be treated as a number, for example, in calculations.
      </para>
        <para>
        Note that this is simply a guess by the implementing application, and a recommendation to the user.
        Cells with the errors specified in <see cref="T:GemBox.Spreadsheet.IgnoredErrorTypes" /> may have perfectly valid reasons for being in such a state, for example a cell formatted as text which contains numeric Postal Codes or Order numbers.
        It is useful to format these cells as text so that leading zeros remain as part of the value instead of being removed.
      </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.IgnoredErrorCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.IgnoredError" />s contained in the <see cref="T:GemBox.Spreadsheet.IgnoredErrorCollection" />.
            </summary>
      <value>
            The number of <see cref="T:GemBox.Spreadsheet.IgnoredError" />s contained in the <see cref="T:GemBox.Spreadsheet.IgnoredErrorCollection" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.IgnoredErrorCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.IgnoredError" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.IgnoredError" /> at the specified index.
            </value>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.IgnoredError" /> to get.</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.IgnoredError" /> at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or is equal to or greater than <see cref="P:GemBox.Spreadsheet.IgnoredErrorCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.IgnoredErrorCollection.Add(System.String,GemBox.Spreadsheet.IgnoredErrorTypes)">
      <summary>
            Adds a new instance of an <see cref="T:GemBox.Spreadsheet.IgnoredError" /> which instructs application to ignore all errors specified in the <paramref name="errorTypes" /> parameter on the sequence of references to cell ranges specified in the <paramref name="appliesTo" /> parameter.
            </summary>
      <param name="appliesTo">The sequence of references to cell ranges over which the newly added ignored error is applied.</param>
      <param name="errorTypes">The errors which should be ignored.</param>
      <returns>A newly created and added <see cref="T:GemBox.Spreadsheet.IgnoredError" />.</returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="appliesTo" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.IgnoredErrorCollection.Remove(GemBox.Spreadsheet.IgnoredError)">
      <summary>
            Removes the specified <see cref="T:GemBox.Spreadsheet.IgnoredError" /> from the <see cref="T:GemBox.Spreadsheet.IgnoredErrorCollection" />.
            </summary>
      <param name="ignoredError">The <see cref="T:GemBox.Spreadsheet.IgnoredError" /> to remove from the <see cref="T:GemBox.Spreadsheet.IgnoredErrorCollection" />.</param>
      <returns>
        <see langword="true" /> if <see cref="T:GemBox.Spreadsheet.IgnoredError" /> is successfully removed; otherwise, <see langword="false" />. 
            This method also returns <see langword="false" /> if <see cref="T:GemBox.Spreadsheet.IgnoredError" /> was not found in the <see cref="T:GemBox.Spreadsheet.IgnoredErrorCollection" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.IgnoredErrorCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:GemBox.Spreadsheet.IgnoredError" /> at the specified index of the <see cref="T:GemBox.Spreadsheet.IgnoredErrorCollection" />.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.IgnoredError" /> to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or is equal to or greater than <see cref="P:GemBox.Spreadsheet.IgnoredErrorCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.IgnoredErrorCollection.Clear">
      <summary>
            Removes all <see cref="T:GemBox.Spreadsheet.IgnoredError" />s from the <see cref="T:GemBox.Spreadsheet.IgnoredErrorCollection" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.IgnoredErrorCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.IgnoredErrorCollection" />.
            </summary>
      <returns>
            An enumerator that can be used to iterate through the <see cref="T:GemBox.Spreadsheet.IgnoredErrorCollection" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.IgnoredErrorCollection.System#Collections#IEnumerable#GetEnumerator">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.IgnoredErrorTypes">
      <summary>
            Represents an ignored error conditions.
            </summary>
      <remarks>
        <para>
        A cell is considered to have an error condition when it meets one of the conditions specified in the <see cref="P:GemBox.Spreadsheet.IgnoredError.ErrorTypes" /> member.
        For example, if a cell is formatted as text but contains a numeric value, this is considered to be a potential error because the number won't be treated as a number, for example, in calculations.
      </para>
        <para>
        Note that this is simply a guess by the implementing application, and a recommendation to the user.
        Cells with the errors specified in <see cref="T:GemBox.Spreadsheet.IgnoredErrorTypes" /> may have perfectly valid reasons for being in such a state, for example a cell formatted as text which contains numeric Postal Codes or Order numbers.
        It is useful to format these cells as text so that leading zeros remain as part of the value instead of being removed.
      </para>
      </remarks>
    </member>
    <member name="F:GemBox.Spreadsheet.IgnoredErrorTypes.None">
      <summary>
            Do not ignore any error.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IgnoredErrorTypes.EvaluationError">
      <summary>
            Ignore errors when cells contain formulas that result in an error such as '<b>#VALUE!</b>' or '<b>#DIV/0!</b>'.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IgnoredErrorTypes.CalculatedColumn">
      <summary>
        <para>Ignore errors when cells contain a value different from a calculated column formula for tables.</para>
        <para>In other words, for a calculated column, a cell in that column is considered to have an error 
            if its formula is different from the calculated column formula, or doesn't contain a formula at all.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IgnoredErrorTypes.TwoDigitTextYear">
      <summary>
            Ignore errors when cells contain dates in text form with years represented as 2 digits.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IgnoredErrorTypes.NumberStoredAsText">
      <summary>
            Ignore errors when numbers are formatted as text or are preceded by an apostrophe.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IgnoredErrorTypes.Formula">
      <summary>
        <para>Ignore errors when a formula in a region of your worksheet differs from other formulas in the same region.</para>
        <para>For example, if the formula in cell A1 is "=B1", and the formula in cell A3 is "=B3", but the formula in cell 
            A2 is not "=B2" but instead "=C2", then A1 and A3 both refer to the cell one column to their right, but A2 does not and so 
            is inconsistent with them.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IgnoredErrorTypes.FormulaRange">
      <summary>
        <para>Ignore errors when formulas omit certain cells in a region.</para>
        <para>For example, if there is data in cells A1:A100 and formula contains the reference "=SUM(A1:A98)".</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IgnoredErrorTypes.UnlockedFormula">
      <summary>
            Ignore errors when unlocked (editable) cells in the locked sheet contain formulas.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IgnoredErrorTypes.EmptyCellReference">
      <summary>
            Ignore errors when formulas refer to empty cells.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IgnoredErrorTypes.ListDataValidation">
      <summary>
        <para>Ignore errors when a cell's value in a Table does not comply with the Data Validation rules specified.</para>
        <para>For example, when a cell's value is inconsistent with the column data type for Tables connected to SharePoint data.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IgnoredErrorTypes.All">
      <summary>
            Ignore all errors.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ImageSaveFormat">
      <summary>
            An enumeration of supported image file formats when saving the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to an image using a <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Bmp">
      <summary>
            Bitmap (BMP) format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Gif">
      <summary>
            Graphics Interchange Format (GIF).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Jpeg">
      <summary>
            Joint Photographics Experts Group (JPEG) format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Png">
      <summary>
            Portable Network Graphics (PNG) format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Tiff">
      <summary>
            Tagged Image File Format (TIFF).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Wmp">
      <summary>
            Windows Media Photo format.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ImageSaveOptions">
      <summary>
            Represents a class which stores saving options for image files.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.Format">
      <summary>
            Gets or sets the image format.
            </summary>
      <value>
            The image format.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.PageNumber">
      <summary>
            Gets or sets the zero-based page number of the document's page which should be saved to an image.
            </summary>
      <value>
            The zero-based page number of the document's page which should be saved to an image.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.PageCount">
      <summary>
        <para>Gets or sets the number of pages which should be saved to a multi-frame image.</para>
        <para>If image format doesn't support multiple frames, this property is ignored.</para>
        <para>Default value is 1.</para>
        <para>To save all pages, set value to <see cref="F:System.Int32.MaxValue" />.</para>
        <para>Only Tagged Image File Format (TIFF) and Graphics Interchange Format (GIF) format images support multiple frames.</para>
      </summary>
      <value>
            The number of pages which should be saved to a multi-frame image.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.Width">
      <summary>
            Gets or sets the image width in pixels.
            </summary>
      <value>
            The image width in pixels.
            </value>
      <remarks>
        <para>If both <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Width" /> and <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Height" /> are not specified, then image size will be equal to the page size.</para>
        <para>If only one of the <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Width" /> or <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Height" /> is specified, then the specified dimension will be respected and other dimension will be calculated so that original aspect ratio is maintained.</para>
        <para>If both <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Width" /> and <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Height" /> are specified, then both specified dimensions will be respected (which may result in non-uniformly scaled image, if aspect ratio is not equal to the original one.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.Height">
      <summary>
            Gets or sets the image height in pixels.
            </summary>
      <value>
            The image height in pixels.
            </value>
      <remarks>
        <para>If both <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Width" /> and <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Height" /> are not specified, then image size will be equal to the page size.</para>
        <para>If only one of the <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Width" /> or <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Height" /> is specified, then the specified dimension will be respected and other dimension will be calculated so that original aspect ratio is maintained.</para>
        <para>If both <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Width" /> and <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Height" /> are specified, then both specified dimensions will be respected (which may result in non-uniformly scaled image, if aspect ratio is not equal to the original one.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.PixelFormat">
      <summary>
            Gets or sets a pixel format, which will be used for the image.
            </summary>
      <value>
            The pixel format, which will be used for the image.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.TiffCompression">
      <summary>
            Gets or sets compression schema, which will be used when exporting to Tagged Image File Format (TIFF).
            </summary>
      <value>
            The compression schema, which will be used when exporting to Tagged Image File Format (TIFF).
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save a page from the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
      <remarks>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.SelectionType.ActiveSheet" /> to optimize export since only active worksheet will be paginated.</para>
        <para>If you want to render a specific page from an un-active worksheet, set that worksheet as <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" /> or change this property to <see cref="F:GemBox.Spreadsheet.SelectionType.EntireFile" />.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.CropToContent">
      <summary>
        <para>Gets or sets a value indicating whether the image should be cropped to fit the content of the sheet.</para>
        <para>If this property is set to <see langword="true" />, only the content of the sheet is rendered, without headers or footers.</para>
      </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ImageSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ImageSaveOptions.#ctor(GemBox.Spreadsheet.ImageSaveFormat)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" /> class for a specific image format.
            </summary>
      <param name="imageFormat">The image format.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.DpiX">
      <summary>
        <para>Gets or sets the horizontal dots per inch (dpi) of the image.</para>
        <para>Default value is <see cref="F:System.Double.NaN" />, which means that component specific default value will be used (currently 300).</para>
      </summary>
      <value>
            The horizontal dots per inch (dpi) of the image; that is, the dots per inch (dpi) along the x-axis.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not greater than 0.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.DpiY">
      <summary>
        <para>Gets or sets the vertical dots per inch (dpi) of the image.</para>
        <para>Default value is <see cref="F:System.Double.NaN" />, which means that component specific default value will be used (currently 300).</para>
      </summary>
      <value>
            The vertical dots per inch (dpi) of the image; that is, the dots per inch (dpi) along the y-axis.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not greater than 0.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.MetafileScaleFactor">
      <summary>
      Gets or sets the scaling factor for rendering metafile (WMF and EMF) images. Greater scaling factor improves quality but also increases file size. Default value is 1.
    </summary>
      <value>
      The metafile scale factor for rendering metafile (WMF and EMF) images.
    </value>
      <remarks>
        <para>Windows Metafile Format (WMF) and Enhanced Metafile Format (EMF) are vector image formats which contain a series of graphics drawing commands usually executed in Windows GDI layer.</para>
        <para>Metafile drawing commands could also be executed in PDF (or XPS) file which is also vector format, but for that Metafile drawing commands would have to be converted to PDF drawing commands.</para>
        <para>GemBox.Document currently doesn't perform this conversion of drawing commands, instead it uses Windows GDI to execute Metafile drawing commands into bitmap which is then encoded to PNG format and embedded into PDF file.</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.MetafileScaleFactor" /> specifies the size of the bitmap surface, based from the original Metafile surface size, into which Metafile should be drawn / rasterized.
      </para>
        <para>PDF viewer will still scale the bitmap to the original Metafile size, but if the page is zoomed or viewed on a larger surface, quality of the image will be better since it contains more pixels / dots which will become visible while PDF viewer scales down the image.</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.MetafileScaleFactor" /> increases the quality of the Metafile image in PDF file, but it also increases the size of the PDF file because greater <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.MetafileScaleFactor" /> means greater bitmap surface and more space to store bitmap pixel / color data.
        PNG encoding / compression helps in reducing the space requirement and for complex Metafiles (with a lot of drawing instructions), <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.MetafileScaleFactor" /> of 5 or even greater, might not incur any space overhead relative to the original (complex) Metafile.
      </para>
        <para>
        Default value for <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.MetafileScaleFactor" /> is 1.
      </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.ContentType">
      <summary>
            Gets the content-type for image file format:
            <list type="bullet"><item><description><b>image/png</b> if <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Format" /> is <see cref="F:GemBox.Spreadsheet.ImageSaveFormat.Png" />,</description></item><item><description><b>image/jpeg</b> if <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Format" /> is <see cref="F:GemBox.Spreadsheet.ImageSaveFormat.Jpeg" />,</description></item><item><description><b>image/gif</b> if <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Format" /> is <see cref="F:GemBox.Spreadsheet.ImageSaveFormat.Gif" />,</description></item><item><description><b>image/bmp</b> if <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Format" /> is <see cref="F:GemBox.Spreadsheet.ImageSaveFormat.Bmp" />,</description></item><item><description><b>image/tiff</b> if <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Format" /> is <see cref="F:GemBox.Spreadsheet.ImageSaveFormat.Tiff" />,</description></item><item><description><b>image/vnd.ms-photo</b> if <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Format" /> is <see cref="F:GemBox.Spreadsheet.ImageSaveFormat.Wmp" />.</description></item></list></summary>
      <value>
            The content-type for image file format.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to image file formats.
            </summary>
      <remarks>
            These are the limits:
            <list type="bullet"><item><description>MaxRows: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxColumns: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxColors: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxCellStyles: <see cref="F:System.Int32.MaxValue" /></description></item></list></remarks>
    </member>
    <member name="E:GemBox.Spreadsheet.ImageSaveOptions.ProgressChanged">
      <summary>
            Occurs when saving progress of a file has changed.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ImageSaveOptions.Save(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.IndividualBorder">
      <summary>
            Represents single border type of a cell.
            </summary>
      <remarks>
        <para>
        Diagonal-up (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp" />) and diagonal-down (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown" />)
        always share the same color and line style.
      </para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="T:GemBox.Spreadsheet.CellBorders" />
      <seealso cref="T:GemBox.Spreadsheet.MultipleBorders" />
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.Top">
      <summary>
            Top border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.Bottom">
      <summary>
            Bottom border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.Left">
      <summary>
            Left border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.Right">
      <summary>
            Right border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp">
      <summary>
            Diagonal-up border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown">
      <summary>
            Diagonal-down border.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.InsertDataTableOptions">
      <summary>
            Represents options for inserting data from <see cref="T:System.Data.DataTable" /> to <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <seealso cref="M:GemBox.Spreadsheet.ExcelWorksheet.InsertDataTable(System.Data.DataTable,GemBox.Spreadsheet.InsertDataTableOptions)" />
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-export-datatable-dataset-to-excel/501">Export DataTable into Excel sheet in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.InsertDataTableOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.InsertDataTableOptions.StartColumn">
      <summary>
            Gets or sets the index of the first column of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.InsertDataTableOptions.ColumnHeaders">
      <summary>
            Gets or sets a value indicating whether to insert column headers.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.InsertDataTableOptions.DataTableCellToExcelCellConverting">
      <summary>
            Event that fires when converting <see cref="T:System.Data.DataTable" /> cell value to <see cref="T:GemBox.Spreadsheet.ExcelCell" /> value.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.InsertDataTableOptions.#ctor">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.InsertDataTableOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.InsertDataTableOptions.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.InsertDataTableOptions" /> class.
            </summary>
      <param name="startRow">Index of the first row of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="startColumn">Index of the first column of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.InsertDataTableOptions.#ctor(System.String)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.InsertDataTableOptions" /> class.
            </summary>
      <param name="startCell">Name of the first (top left) cell of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.InsertShiftDirection">
      <summary>
            Represents the possible cell insert shift directions.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.InsertShiftDirection.Right">
      <summary>
            Shift cells right.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.InsertShiftDirection.Down">
      <summary>
            Shift cells down.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.LengthUnit">
      <summary>
            Represents the measurement unit for measuring length or distance.
            </summary>
      <remarks>
        <para>To convert values between various <see cref="T:GemBox.Spreadsheet.LengthUnit" />s, use <see cref="T:GemBox.Spreadsheet.LengthUnitConverter" />.</para>
      </remarks>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Emu">
      <summary>
            English Metric Unit (914 400 EMUs = 1 <see cref="F:GemBox.Spreadsheet.LengthUnit.Inch" />, 360 000 EMUs = 1 <see cref="F:GemBox.Spreadsheet.LengthUnit.Centimeter" />, 12 700 EMUs = 1 <see cref="F:GemBox.Spreadsheet.LengthUnit.Point" />).
            </summary>
      <seealso href="https://web.archive.org/web/20120314013540/http://www.oreillynet.com/xml/blog/2007/04/what_is_an_emu.html" />
      <seealso href="https://en.wikipedia.org/wiki/Office_Open_XML_file_formats#DrawingML" />
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Twip">
      <summary>
            Twentieth of a point (20 twips = 1 <see cref="F:GemBox.Spreadsheet.LengthUnit.Point" />).
            </summary>
      <seealso href="https://en.wikipedia.org/wiki/Twip" />
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Point">
      <summary>
            Point (72 points = 1 <see cref="F:GemBox.Spreadsheet.LengthUnit.Inch" />).
            </summary>
      <seealso href="https://en.wikipedia.org/wiki/Point_(typography)" />
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Pixel">
      <summary>
            Device-independent or logical pixel (96 device-independent pixels = 1 inch).
            </summary>
      <seealso href="https://en.wikipedia.org/wiki/Pixel#Logical_pixel" />
      <seealso href="https://developer.mozilla.org/en-US/docs/Glossary/CSS_pixel" />
      <seealso href="https://docs.microsoft.com/en-us/dotnet/desktop/wpf/graphics-multimedia/wpf-graphics-rendering-overview#about-resolution-and-device-independent-graphics" />
      <seealso href="https://docs.microsoft.com/en-us/dotnet/api/system.windows.media.imagesource.pixelstodips" />
      <seealso href="https://docs.microsoft.com/en-us/windows/win32/learnwin32/dpi-and-device-independent-pixels#direct2d-and-dpi" />
      <seealso href="https://docs.microsoft.com/en-us/windows/win32/direct2d/direct2d-and-high-dpi#what-is-a-dip" />
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Millimeter">
      <summary>
            Millimeter (10 millimeters = 1 <see cref="F:GemBox.Spreadsheet.LengthUnit.Centimeter" />).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Centimeter">
      <summary>
            Centimeter (2.54 centimeters = 1 <see cref="F:GemBox.Spreadsheet.LengthUnit.Inch" />).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Inch">
      <summary>
            Inch (1 inch = 2.54 <see cref="F:GemBox.Spreadsheet.LengthUnit.Centimeter" />s).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.DevicePixel">
      <summary>
            Device-dependent or physical pixel (<see cref="P:GemBox.Spreadsheet.ExcelViewOptions.Dpi" /> device-dependent pixels = 1 inch).
            </summary>
      <seealso href="https://en.wikipedia.org/wiki/Pixel" />
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.ZeroCharacterWidth256thPart">
      <summary>
            1/256th of the width of the zero character in default font.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.ZeroCharacterWidth">
      <summary>
            Width of the zero character in default font (fixed to 7 pixel).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.CharacterWidth">
      <summary>
        <para>Character width is the maximum digit width of the numbers 0, 1, 2, ..., 9 as rendered in the <see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /> style's font (see <see cref="P:GemBox.Spreadsheet.ExcelFile.MaximumDigitWidth" />).</para>
        <para>The unit of the column width in MS Excel user interface is <see cref="F:GemBox.Spreadsheet.LengthUnit.CharacterWidth" />.</para>
        <para>The value in <see cref="F:GemBox.Spreadsheet.LengthUnit.CharacterWidth" /> unit always contains at most 2 decimal digits.</para>
        <note type="note">The <see cref="F:GemBox.Spreadsheet.LengthUnit.CharacterWidth" /> should not be used in <see cref="M:GemBox.Spreadsheet.LengthUnitConverter.Convert(System.Double,GemBox.Spreadsheet.LengthUnit,GemBox.Spreadsheet.LengthUnit)" /> method. Instead, it should be used in <see cref="M:GemBox.Spreadsheet.ExcelColumn.GetWidth(GemBox.Spreadsheet.LengthUnit)" />, <see cref="M:GemBox.Spreadsheet.ExcelColumn.SetWidth(System.Double,GemBox.Spreadsheet.LengthUnit)" />, <see cref="M:GemBox.Spreadsheet.ExcelWorksheet.GetDefaultColumnWidth(GemBox.Spreadsheet.LengthUnit)" />, and <see cref="M:GemBox.Spreadsheet.ExcelWorksheet.SetDefaultColumnWidth(System.Double,GemBox.Spreadsheet.LengthUnit)" /> methods.</note>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.LengthUnitConverter">
      <summary>
            Utility class used for converting values between various <see cref="T:GemBox.Spreadsheet.LengthUnit" /> measurement units.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.LengthUnitConverter.Convert(System.Double,GemBox.Spreadsheet.LengthUnit,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Converts the specified <paramref name="length" /> from <paramref name="sourceUnit" /> measurement unit to <paramref name="destinationUnit" /> measurement unit.
            </summary>
      <param name="length">The length that will be converted.</param>
      <param name="sourceUnit">The source measurement unit.</param>
      <param name="destinationUnit">The destination measurement unit.</param>
      <returns>The <paramref name="length" /> expressed in <paramref name="destinationUnit" /> measurement unit.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.LineStyle">
      <summary>
            Represents the line style of a border in a cell.
            </summary>
      <remarks>
        <para>
        Diagonal-up (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp" />) and diagonal-down (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown" />)
        always share the same color and line style.
      </para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellBorder.LineStyle" />
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.None">
      <summary>
            The line style of a border is none (no border visible).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Thin">
      <summary>
            The line style of a border is thin.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Medium">
      <summary>
            The line style of a border is medium.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Dashed">
      <summary>
            The line style of a border is dashed.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Dotted">
      <summary>
            The line style of a border is dotted.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Thick">
      <summary>
            The line style of a border is thick.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.DoubleLine">
      <summary>
            Obsolete. Use <see cref="F:GemBox.Spreadsheet.LineStyle.Double" /> instead.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Double">
      <summary>
            The line style of a border is double line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Hair">
      <summary>
            The line style of a border is hairline.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.MediumDashed">
      <summary>
            The line style of a border is medium dashed.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.DashDot">
      <summary>
            The line style of a border is dash-dot.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.MediumDashDot">
      <summary>
            The line style of a border is medium dash-dot.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.DashDotDot">
      <summary>
            The line style of a border is dash-dot-dot.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.MediumDashDotDot">
      <summary>
            The line style of a border is medium dash-dot-dot.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.SlantDashDot">
      <summary>
        <para>The line style of a border is slant-dash-dot.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.LineStyle.MediumDashDot" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.SlantedDashDot">
      <summary>
            Obsolete. Use <see cref="F:GemBox.Spreadsheet.LineStyle.SlantDashDot" /> instead.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.LoadOptions">
      <summary>
            Represents a base class for loading options of various file formats.
            </summary>
      <remarks>
            Following classes inherit from this base class:
            <list type="bullet"><item><description><see cref="T:GemBox.Spreadsheet.XlsxLoadOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.XlsbLoadOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.XlsLoadOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.OdsLoadOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.CsvLoadOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.FixedWidthLoadOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.HtmlLoadOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.XmlLoadOptions" /></description></item></list></remarks>
      <seealso cref="M:GemBox.Spreadsheet.ExcelFile.Load(System.String)" />
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.XlsxDefault">
      <summary>
            Gets the default options for loading from XLSX file format (Microsoft Excel Open XML Spreadsheet; Excel 2007 and later).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.XlsbDefault">
      <summary>
            Gets the default options for loading from XLSX file format (Microsoft Excel Binary File Format).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.XlsDefault">
      <summary>
            Gets the default options for loading from XLS file format (Microsoft Excel Spreadsheet format; Excel 2003 and prior versions) .
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.OdsDefault">
      <summary>
            Gets the default options for loading from OpenDocument Spreadsheet file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.CsvDefault">
      <summary>
            Gets the default options for loading from Character Separated Values file format.
            </summary>
      <remarks>
        <b>MS Excel</b> uses ';' as default if current culture uses ',' for decimal separator. <b>GemBox.Spreadsheet</b> always uses ','.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.TxtDefault">
      <summary>
            Gets the default options for loading from Tab delimited file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.HtmlDefault">
      <summary>
            Gets the default options for loading from HyperText Markup Language File (HTML) format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.XmlDefault">
      <summary>
            Gets the default options for loading from XML file format (XML Spreadsheet 2003).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.LoadOptions.LoadCore(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.LoadOptions.LoadFromDirectoryCore(GemBox.Spreadsheet.ExcelFile,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.LoadStreamingMode">
      <summary>
            Represents a mode of streamlined loading of an <see cref="T:GemBox.Spreadsheet.ExcelFile" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LoadStreamingMode.None">
      <summary>
        <para>No streamlined loading of an <see cref="T:GemBox.Spreadsheet.ExcelFile" />.</para>
        <para>All rows of each <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> are loaded and held in memory.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LoadStreamingMode.Read">
      <summary>
        <para>The <see cref="T:GemBox.Spreadsheet.ExcelFile" /> is loaded in a streamlined fashion.</para>
        <para>A chunk of <see cref="T:GemBox.Spreadsheet.ExcelRow" />s of each <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> are loaded and held in memory.
            If the requested <see cref="T:GemBox.Spreadsheet.ExcelRow" /> is not in the loaded chunk, the currently loaded chunk is discarded and a chunk containing the requested <see cref="T:GemBox.Spreadsheet.ExcelRow" /> is loaded and held in memory.</para>
        <para>When the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> is loaded in <see cref="F:GemBox.Spreadsheet.LoadStreamingMode.Read" /> mode, the modification of rows, column collection, and cells (values, styles, formula) is not generally supported and might have unpredictable behavior.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.MultipleBorders">
      <summary>
            Represents multiple border types of a cell.
            </summary>
      <remarks>
        <para>
        Diagonal-up (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp" />) and diagonal-down (<see cref="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown" /> / <see cref="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown" />)
        always share the same color and line style.
      </para>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="T:GemBox.Spreadsheet.CellBorders" />
      <seealso cref="T:GemBox.Spreadsheet.IndividualBorder" />
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.None">
      <summary>
            No borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Top">
      <summary>
            Top border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Bottom">
      <summary>
            Bottom border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Left">
      <summary>
            Left border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Right">
      <summary>
            Right border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp">
      <summary>
            Diagonal-up border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown">
      <summary>
            Diagonal-down border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.InsideHorizontal">
      <summary>
            Inside horizontal borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.InsideVertical">
      <summary>
            Inside vertical borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Horizontal">
      <summary>
            Horizontal borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Vertical">
      <summary>
            Vertical borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Diagonal">
      <summary>
            Diagonal borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Outside">
      <summary>
            Outside borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Inside">
      <summary>
            Inside borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.All">
      <summary>
            All borders except diagonal.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.NamedRange">
      <summary>
            Represents a named range in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRange.Name">
      <summary>
            Gets the named range name.
            </summary>
      <value>The named range name.</value>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRange.GlobalName">
      <summary>
            gets global flag
            </summary>
      <value>if this name is global</value>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRange.Range">
      <summary>
            Gets or sets the named cell range.
            </summary>
      <value>The named cell range.</value>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRange.Delete">
      <summary>
            Deletes this named range from the named ranges collection.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRange.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRange.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.NamedRange" /> and is equal to this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRange.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRange.op_Equality(GemBox.Spreadsheet.NamedRange,GemBox.Spreadsheet.NamedRange)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.NamedRange" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.NamedRange" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.NamedRange" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.NamedRange" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRange.op_Inequality(GemBox.Spreadsheet.NamedRange,GemBox.Spreadsheet.NamedRange)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.NamedRange" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.NamedRange" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.NamedRange" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.NamedRange" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.NamedRangeCollection">
      <summary>
            Collection of the descriptive names which are used 
            to represent cells, ranges of cells, formulas, or constant values.
            </summary>
      <remarks>
            You can use the labels of columns and rows on a worksheet to refer to the cells within 
            those columns and rows. Or you can create descriptive names to represent cells, ranges of cells, 
            formulas, or constant values. Labels can be used in formulas that refer to data on the same 
            worksheet; if you want to represent a range on another worksheet, use a name.
            You can also create 3-D names that represent the same cell or range of cells across multiple worksheets.		
            </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelCell.Formula">ExcelCell.Formula</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRangeCollection.Count">
      <summary>
            Gets the number of named ranges contained in the collection.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRangeCollection.Item(System.Int32)">
      <overloads>Gets the <see cref="T:GemBox.Spreadsheet.NamedRange" /> with 
            the specified index or name.</overloads>
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.NamedRange" /> at the specified index.
            </summary>
      <param name="index">Range index.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRangeCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.NamedRange" /> with the specified name.
            </summary>
      <param name="name">Range name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.Add(System.String,GemBox.Spreadsheet.CellRange)">
      <overloads>Adds a new global or local named range.</overloads>
      <summary>
            Adds a new named range. Named ranges are used to represent cells, ranges of cells,
            formulas or constant values.
            </summary>
      <param name="name">The user-defined name.</param>
      <param name="range">The range to be referred by name.</param>
      <remarks>
            You can use the labels of columns and rows on a worksheet to refer to the cells within
            those columns and rows. Or you can create descriptive names to represent cells, ranges of cells,
            formulas, or constant values. Labels can be used in formulas that refer to data on the same
            worksheet; if you want to represent a range on another worksheet, use a name.
            You can also create 3-D names that represent the same cell or range of cells across multiple worksheets.
            </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelCell.Formula">ExcelCell.Formula</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.Add(System.String,GemBox.Spreadsheet.CellRange,System.Boolean)">
      <summary>
            Adds a new named range. Named ranges are used to represent cells, ranges of cells,
            formulas or constant values.
            </summary>
      <param name="name">The user-defined name.</param>
      <param name="range">The range to be referred by name.</param>
      <param name="globalName">sets the range as global if set to true</param>
      <remarks>
            You can use the labels of columns and rows on a worksheet to refer to the cells within
            those columns and rows. Or you can create descriptive names to represent cells, ranges of cells,
            formulas, or constant values. Labels can be used in formulas that refer to data on the same
            worksheet; if you want to represent a range on another worksheet, use a name.
            You can also create 3-D names that represent the same cell or range of cells across multiple worksheets.
            </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelCell.Formula">ExcelCell.Formula</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintArea(GemBox.Spreadsheet.CellRange)">
      <summary>
            Sets print area.
            </summary>
      <param name="range">Range of cells that we want set as print area.</param>
      <remarks>
            If specified, print area is used when exporting to HTML, PDF, XPS and image file formats as cell range which will be exported in the output file format.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintArea(GemBox.Spreadsheet.CellRange[])">
      <summary>
        <para>Sets multi-range print area.</para>
        <para>Multi-range print area is currently supported in XLSX only.</para>
      </summary>
      <param name="ranges">Ranges of cells that we want set as print area.</param>
      <remarks>
            If specified, print area is used when exporting to HTML, PDF, XPS and image file formats as cell range which will be exported in the output file format.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintArea(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.CellRange})">
      <summary>
        <para>Sets multi-range print area.</para>
        <para>Multi-range print area is currently supported in XLSX only.</para>
      </summary>
      <param name="ranges">Ranges of cells that we want set as print area.</param>
      <remarks>
            If specified, print area is used when exporting to HTML, PDF, XPS and image file formats as cell range which will be exported in the output file format.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintTitles(GemBox.Spreadsheet.ExcelRow,System.Int32)">
      <summary>
            Sets print titles (rows to repeat at top).
            </summary>
      <param name="startRow">First row.</param>
      <param name="numberOfRows">Number of rows that repeat.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintTitles(GemBox.Spreadsheet.ExcelColumn,System.Int32)">
      <summary>
            Sets print titles (columns to repeat at left).
            </summary>
      <param name="startColumn">First column.</param>
      <param name="numberOfColumns">Number of columns that repeat.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintTitles(GemBox.Spreadsheet.ExcelColumnRowBase,System.Int32,GemBox.Spreadsheet.ExcelColumnRowBase,System.Int32)">
      <summary>
            Sets print titles.
            </summary>
      <param name="startRow">First row.</param>
      <param name="numberOfRows">Number of rows that repeat.</param>
      <param name="startColumn">First column.</param>
      <param name="numberOfColumns">Number of columns that repeat.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" />
            that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" />
            that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.NumberFormatBuilder">
      <summary>
            Utility class that can be used to create a number format for <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.NumberFormatBuilder.Number(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Creates a format for a number.
            </summary>
      <param name="decimalPlaces">The number of decimal places that should be displayed to the right of the decimal separator.</param>
      <param name="minDigits">
            The minimal number of digits that should be displayed to the left of the decimal separator.
            The default value is 1.
            </param>
      <param name="useThousandsSeparator">
            True if the thousands separator should be displayed, false otherwise.
            The default value is false.
            </param>
      <param name="useParenthesesToDisplayNegativeValue">
            True if negative value should be displayed using parentheses notation, false if minus sign (-) should be used instead.
            The default value is false.
            </param>
      <returns>The created number format.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NumberFormatBuilder.Currency(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates a currency number format.
            </summary>
      <param name="currencySymbol">The currency symbol.</param>
      <param name="decimalPlaces">Number of decimal places that should be displayed to the right of the decimal separator.</param>
      <param name="useThousandsSeparator">
            True if the thousands separator should be displayed, false otherwise.
            The default value is true.
            </param>
      <param name="showCurrencySymbolToTheRightOfNumber">
            True if the currency symbol should be displayed to the right of the number, false otherwise.
            The default value is false.
            </param>
      <param name="showSpaceBetweenCurrencySymbolAndNumber">
            True if space should be displayed between the currency symbol and the number.
            The default value is true.
            </param>
      <param name="useParenthesesToDisplayNegativeValue">
            True if negative value should be displayed using parentheses notation, false if minus sign (-) should be used.
            The default value is false.
            </param>
      <returns>The created number format.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NumberFormatBuilder.Accounting(System.Int32,System.Boolean,System.Boolean,System.String,System.Boolean)">
      <summary>
            Creates an accounting number format.
            </summary>
      <param name="decimalPlaces">Number of decimal places that should be displayed to the right of the decimal separator.</param>
      <param name="useThousandsSeparator">
            True if the thousands separator should be displayed, false otherwise.
            The default value is true.
            </param>
      <param name="useParenthesesToDisplayNegativeValue">
            True if negative value should be displayed using parentheses notation, false if minus sign (-) should be used.
            The default value is false.
            </param>
      <param name="currencySymbol">
            The currency symbol. Null, if no currency symbol should be displayed.
            The default value is null.
            </param>
      <param name="showCurrencySymbolToTheRightOfNumber">
            True if the currency symbol should be displayed to the right of the number, false otherwise.
            The default value is false.
            </param>
      <returns>The created number format.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NumberFormatBuilder.DateTimeIso8061(System.Int32)">
      <summary>
            Creates date and time format according to the ISO 8061 standard.
            </summary>
      <param name="decimalPlaces">
            The number of decimal places that should be used to display a fraction of a second.
            The default value is 0.
            </param>
      <returns>The created number format.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NumberFormatBuilder.Percentage(System.Int32)">
      <summary>
            Creates a percentage number format.
            </summary>
      <param name="decimalPlaces">The number of decimal places that should be displayed to the right of the decimal separator.</param>
      <returns>The created number format.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NumberFormatBuilder.FractionWithPreciseDenominator(System.Int32,System.Boolean)">
      <summary>
            Creates a fraction number format with the precise denominator value.
            </summary>
      <param name="denominator">Denominator that will be used to display the fraction part of the number.</param>
      <param name="displayAsPureFraction">
            True to display the number as a single fraction without the integral part, false otherwise.
            For example, the number 1.25 will be displayed as "5/4" if the parameter is true and as "1 1/4" if the parameter is false.
            The default value is false.
            </param>
      <returns>The created number format.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NumberFormatBuilder.FractionWithFittingDenominator(System.Int32,System.Boolean)">
      <summary>
            Creates a fraction number format with the denominator value that best fits the fraction part of the number.
            </summary>
      <param name="maxDenominatorDigits">The maximum number of digits used to display the denominator of the fraction.</param>
      <param name="displayAsPureFraction">
            True to display the number as a single fraction without the integral part, false otherwise.
            For example, the number 1.25 will be displayed as "5/4" if the parameter is true and as "1 1/4" if the parameter is false.
            The default value is false.
            </param>
      <returns>The created number format.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NumberFormatBuilder.Scientific(System.Int32)">
      <summary>
            Creates a scientific number format.
            </summary>
      <param name="decimalPlaces">The number of decimal places that should be displayed to the right of the decimal separator.</param>
      <returns>The created number format.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NumberFormatBuilder.Text">
      <summary>
            Creates a text number format.
            </summary>
      <returns>The created number format.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NumberFormatBuilder.IsDateTime(System.String)">
      <summary>
            Checks if the provide number format is date format.
            </summary>
      <returns>True, if number format is date format, false otherwise.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.SheetHeaderFooter">
      <summary>
            Represents sheet header/footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.DifferentFirst">
      <summary>
            Gets or sets if header/footer is different on the first page. 
            If <see langword="true" />, <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstHeader" /> and <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstFooter" /> are on the first page.
            If <see langword="false" />, <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstHeader" /> and <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstFooter" /> are ignored.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.DifferentOddEven">
      <summary>
            Gets or sets if there are different headers/footers on the even and odd pages.
            If <see langword="true" />, <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.Header" />/<see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.Footer" /> and <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenHeader" />/<see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenFooter" /> specify page header and footer values for odd
            and even pages. 
            If <see langword="false" /> then <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.Header" />/<see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.Footer" /> is used, even when <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenHeader" />/<see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenFooter" /> are present.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenFooter">
      <summary>
            Gets or sets even footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenHeader">
      <summary>
            Gets or sets even header.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstFooter">
      <summary>
            Gets or sets first footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstHeader">
      <summary>
            Gets or sets first header.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.Footer">
      <summary>
            Gets or sets default footer.
            </summary>
      <remarks>
        <para>The header string may contain special commands, for example placeholders for the page number, 
            current date, or text formatting attributes. These fields are represented by single letters 
            (exception: font name and size) with a leading ampersand. If the ampersand is part of 
            the regular header text, it will be duplicated.</para>
        <para>For more information consult <see href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/10606f3c-5e9b-4e7d-8bd9-7a28489fea4d">Microsoft Excel documentation</see>.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.Header">
      <summary>
            Gets or sets default header.
            </summary>
      <remarks>
        <para>The header string may contain special commands, for example placeholders for the page number, 
            current date, or text formatting attributes. These fields are represented by single letters 
            (exception: font name and size) with a leading ampersand. If the ampersand is part of 
            the regular header text, it will be duplicated.</para>
        <para>For more information consult <see href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/b64cf6b8-9472-4f97-9a69-d839f0fa1089">Microsoft Excel documentation</see>.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.AlignWithMargins">
      <summary>
            Gets or sets if header/footer margin will align with page margins.
            Supported in XLSX and XLSB only.
            </summary>
      <remarks>
        <para>This value is currently ignored when exporting a document to PDF, XPS or image file formats.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.ScaleWithDoc">
      <summary>
            Gets or sets if headers/footers will be scaled with document scaling.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SheetHeaderFooter.#ctor">
      <summary>
        <see cref="T:GemBox.Spreadsheet.SheetHeaderFooter" /> constructor.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.DefaultPage">
      <summary>
            Gets or sets default header/footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstPage">
      <summary>
            Gets or sets first page header/footer.
            </summary>
      <remarks>
            If <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.HasFirstPage" /> returns <see langword="false" />, then <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.DefaultPage" /> will be used on first page.
            This property is not supported when writing to XLS format.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenPage">
      <summary>
            Gets or sets header/footer for even pages.
            </summary>
      <remarks>
            If <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.HasEvenPage" /> returns <see langword="false" />, then <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.DefaultPage" /> will be used on even pages.
            This property is not supported when writing to XLS format.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.HasFirstPage">
      <summary>
            Returns <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstPage" /> header/footer is specified.
            </summary>
      <remarks>
            If <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.HasFirstPage" /> returns <see langword="false" />, then <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.DefaultPage" /> will be used on first page.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.HasEvenPage">
      <summary>
            Returns <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenPage" /> header/footer is specified.
            </summary>
      <remarks>
            If <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.HasEvenPage" /> returns <see langword="false" />, then <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.DefaultPage" /> will be used on even pages.
            </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsLoadOptions">
      <summary>
            Represents options for loading from XLS file format (Microsoft Excel Spreadsheet format; Excel 2003 and prior versions) .
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsLoadOptions.PreserveOptions">
      <summary>
            Gets or sets <see cref="T:GemBox.Spreadsheet.Xls.XlsOptions" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsLoadOptions.PreserveUnsupportedFeatures">
      <summary>
            Gets or sets a value indicating whether to preserve features that are not supported when reading XLS files.
            </summary>
      <value>
        <see langword="true" /> to preserve features that are not supported when reading XLS files; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Default value is set to <see langword="true" />.</para>
        <para>Preserving features in files encrypted with a password is currently not supported.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsLoadOptions.Password">
      <summary>
            Gets or sets the password to open protected / encrypted workbook.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsLoadOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsLoadOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsLoadOptions.LoadCore(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.Xls.XlsOptions">
      <summary>
            Options specified when reading XLS files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Xls.XlsOptions.None">
      <summary>
            Do not preserve records. Only records fully supported by GemBox.Spreadsheet API will be loaded.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Xls.XlsOptions.PreserveGlobalRecords">
      <summary>
            Preserve global (workbook) records.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Xls.XlsOptions.PreserveWorksheetRecords">
      <summary>
            Preserve worksheet records.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Xls.XlsOptions.PreserveSummaries">
      <summary>
            Preserve summaries.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Xls.XlsOptions.PreserveMacros">
      <summary>
            Preserve macros and VBA code.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Xls.XlsOptions.PreserveAll">
      <summary>
            Preserve all possible information.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.OdsLoadOptions">
      <summary>
            Represents options for loading from OpenDocument Spreadsheet file format.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.OdsLoadOptions.PreserveUnsupportedFeatures">
      <summary>
            Gets or sets a value indicating whether to preserve ODS file format features that are not directly supported through GemBox.Spreadsheet object model.
            </summary>
      <value>
        <see langword="true" /> to preserve ODS file format features that are not directly supported through GemBox.Spreadsheet object model; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Default value is set to <see langword="true" />.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.OdsLoadOptions.ReadDisplayValues">
      <summary>
            Read display values instead of stored values. 
            </summary>
      <value>
        <see langword="true" /> to read display values; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Values in ODS are stored as value - display string pairs.
            Normally stored value is read but that looses number formatting. 
            If you want to read value as formatted display string (for example, date as "Wednesday, May 5th, 2009" string), set this property to <see langword="true" />.</para>
        <para>Default value is set to <see langword="false" />.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.OdsLoadOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.OdsLoadOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.OdsLoadOptions.LoadCore(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.OdsLoadOptions.LoadFromDirectoryCore(GemBox.Spreadsheet.ExcelFile,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.OdsSaveOptions">
      <summary>
            Represents options for saving to OpenDocument Spreadsheet file format.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.OdsSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.OdsSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.OdsSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to ODS file format.
            </summary>
      <remarks>
            These are the limits:
            <list type="bullet"><item><description>MaxRows: 1048576</description></item><item><description>MaxColumns: 16384</description></item><item><description>MaxColors: 16000000</description></item><item><description>MaxCellStyles: 64000</description></item></list></remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.OdsSaveOptions.ContentType">
      <summary>
            Gets the content-type for ODS file format:
            <list type="bullet"><item><description><b>application/vnd.oasis.opendocument.spreadsheet-template</b> if workbook is template (file extension is .odt), otherwise</description></item><item><description><b>application/vnd.oasis.opendocument.spreadsheet</b>.</description></item></list></summary>
      <value>
            The content-type for ODS file format.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.OdsSaveOptions.Save(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.OdsSaveOptions.SaveToDirectoryCore(GemBox.Spreadsheet.ExcelFile,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.XlsxType">
      <summary>
            OpenXML file type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxType.Xlsx">
      <summary>
            Excel 2007 XML Workbook.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxType.Xlsm">
      <summary>
            Excel 2007 XML Macro-Enabled Workbook.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxType.Xltx">
      <summary>
            Excel 2007 XML Template.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxType.Xltm">
      <summary>
            Excel 2007 XML Macro-Enabled Template.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.OperationProgressChangedEventArgs">
      <summary>
            Provides data for events that track the progress of an operation, such as loading and saving of a workbook.
            </summary>
      <seealso cref="E:GemBox.Spreadsheet.XlsxLoadOptions.ProgressChanged" />
      <seealso cref="E:GemBox.Spreadsheet.XlsxSaveOptions.ProgressChanged" />
      <seealso cref="E:GemBox.Spreadsheet.PdfSaveOptions.ProgressChanged" />
      <seealso cref="E:GemBox.Spreadsheet.ImageSaveOptions.ProgressChanged" />
    </member>
    <member name="M:GemBox.Spreadsheet.OperationProgressChangedEventArgs.CancelOperation">
      <summary>
            Cancels the operation that reported this progress change.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PageBreak">
      <summary>
            Base class for all page breaks.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreak.CompareTo(GemBox.Spreadsheet.PageBreak)">
      <summary>
            Compares the value of this instance to a specified <see cref="T:GemBox.Spreadsheet.PageBreak" /> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:GemBox.Spreadsheet.PageBreak" /> value.
            </summary>
      <param name="other">The object to compare to the current instance.</param>
      <returns>
        <para>A signed number indicating the relative values of this instance and the <paramref name="other" /> parameter.</para>
        <para>If returned value is less than zero, then this instance is earlier than <paramref name="other" />; else, if it is zero, then this instance is the same as <paramref name="other" />; else (if it is greater than zero) this instance is later than <paramref name="other" />.</para>
      </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreak.CheckBreakIndex(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreak.CheckLimit(System.Int32)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.PageBreakCollection">
      <summary>
            Base class for page break collections.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PageBreakCollection.ItemsCore">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.PageBreakCollection.Count">
      <summary>
            Gets the number of page breaks contained in the collection. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection.Clear">
      <summary>
            Removes all page breaks. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the page break at the specified index.
            </summary>
      <param name="index">The zero-based index of the page break to remove.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.PageBreakCollection`1">
      <summary>
            Generic base class for page break collections.
            </summary>
      <typeparam name="T">Type of the items in the collection, either <see cref="T:GemBox.Spreadsheet.HorizontalPageBreak" /> or <see cref="T:GemBox.Spreadsheet.VerticalPageBreak" />.</typeparam>
    </member>
    <member name="P:GemBox.Spreadsheet.PageBreakCollection`1.ItemsCore">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection`1.CreateItem(System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection`1.Add(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection`1.Add(System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="P:GemBox.Spreadsheet.PageBreakCollection`1.Item(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection`1.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.PaginatorOptions">
      <summary>
            Represents options used to specify which part of the workbook to paginate.
            </summary>
      <seealso cref="M:GemBox.Spreadsheet.ExcelFile.GetPaginator(GemBox.Spreadsheet.PaginatorOptions)" />
    </member>
    <member name="P:GemBox.Spreadsheet.PaginatorOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
      <value>
            A value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.PaginatorOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.PaginatorOptions" /> class.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PanePosition">
      <summary>
            Represents the position of the pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanePosition.BottomRight">
      <summary>
            Bottom right pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanePosition.TopRight">
      <summary>
            Top right pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanePosition.BottomLeft">
      <summary>
            Bottom left pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanePosition.TopLeft">
      <summary>
            Top left pane.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PanesState">
      <summary>
            Represents the state of the pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanesState.Frozen">
      <summary>
            Panes are frozen, but were not split being frozen. In this state, when the panes are unfrozen again, a single pane results, with no split. In this state, the split bars are not adjustable.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanesState.FrozenSplit">
      <summary>
            Panes are frozen and were split before being frozen. In this state, when the panes are unfrozen again, the split remains, but is adjustable.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanesState.Split">
      <summary>
            Panes are split, but not frozen. In this state, the split bars are adjustable by the user.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PaperType">
      <summary>
            Specifies the paper type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Custom">
      <summary>
            Custom paper type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Letter">
      <summary>
            Letter (8.5 inch X 11 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Legal">
      <summary>
            Legal (8.5 inch X 14 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Executive">
      <summary>
            Executive (7.25 inch X 10.5 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.A3">
      <summary>
            A3 (11.69 inch X 16.54 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.A4">
      <summary>
            A4 (8.27 inch X 11.69 inch). 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.A5">
      <summary>
            A5 (5.83 inch X 8.27 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.B4">
      <summary>
            B4 (JIS, 10.12 inch X 14.33 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Paper11x17">
      <summary>
            11x17 (11 inch X 17 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.EnvelopeDL">
      <summary>
            Envelope DL (4.33 inch X 8.66 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.EnvelopeC5">
      <summary>
            Envelope C5 (6.38 inch X 9.02 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.B5">
      <summary>
            B5 (ISO, 6.93 inch X 9.84 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.A2">
      <summary>
            A2 (16.54 inch X 23.39 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.A6">
      <summary>
            A6 (4.13 inch X 5.83 inch).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PdfConformanceLevel">
      <summary>
            Represents levels of conformance for PDF documents.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfConformanceLevel.None">
      <summary>
            No conformance.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfConformanceLevel.PdfA1a">
      <summary>
        <para>
            PDF/A-1 is based on PDF version 1.4, which first appeared in 2001. All resources (images, graphics, typographic characters) must be embedded 
            within the PDF/A document itself. A PDF/A file requires precise, platform-independent colour data using ICC profiles, and XMP for the document 
            metadata. Transparent elements, some forms of compression (LZW, JPEG2000), PDF layers, and certain actions or JavaScript are forbidden. A PDF/A 
            file must not be password-protected. PDF/A-1 expressly supports embedded digital signatures and the use of hyperlinks.
            </para>
        <para>
            Level A (Accessible) meets all requirements for the standard, including the logical structure of the document and its correct reading order. 
            Text must be extractable and the logical structure must match the natural reading order. Fonts used must meet stringent requirements. 
            This PDF/A level can usually only be met by converting born-digital documents.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfConformanceLevel.PdfA1b">
      <summary>
        <para>
            PDF/A-1 is based on PDF version 1.4, which first appeared in 2001. All resources (images, graphics, typographic characters) must be embedded 
            within the PDF/A document itself. A PDF/A file requires precise, platform-independent colour data using ICC profiles, and XMP for the document 
            metadata. Transparent elements, some forms of compression (LZW, JPEG2000), PDF layers, and certain actions or JavaScript are forbidden. A PDF/A 
            file must not be password-protected. PDF/A-1 expressly supports embedded digital signatures and the use of hyperlinks.
            </para>
        <para>
            Level B (Basic) guarantees that the content of the document can be unambiguously reproduced. Level B files are easier to create than Level A, but 
            Level B does not guarantee 100% text extraction or searchability. It does not necessarily mean that the content can be reused without any problems. 
            Scanned paper documents can usually be converted to PDF/A Conformance Level B without any extra work.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfConformanceLevel.PdfA2a">
      <summary>
        <para>
            PDF/A-2 was published in 2011 as "ISO 19005-2". Based on PDF version 1.7, which has since been standardised as "ISO 32000-1", it makes use of 
            this version’s new features. This means PDF/A-2 allows JPEG2000 compression, transparent elements and PDF layers. PDF/A-2 also allows you to 
            embed OpenType fonts and supports PAdES(PDF Advanced Electronic Signatures)-compliant digital signatures. One particularly important innovation 
            is the "container" function: PDF/A files can be embedded within a PDF/A-2 document.
            </para>
        <para>
            Level A (Accessible) meets all requirements for the standard, including the logical structure of the document and its correct reading order. 
            Text must be extractable and the logical structure must match the natural reading order. Fonts used must meet stringent requirements. 
            This PDF/A level can usually only be met by converting born-digital documents.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfConformanceLevel.PdfA2b">
      <summary>
        <para>
            PDF/A-2 was published in 2011 as "ISO 19005-2". Based on PDF version 1.7, which has since been standardised as "ISO 32000-1", it makes use of 
            this version’s new features. This means PDF/A-2 allows JPEG2000 compression, transparent elements and PDF layers. PDF/A-2 also allows you to 
            embed OpenType fonts and supports PAdES(PDF Advanced Electronic Signatures)-compliant digital signatures. One particularly important innovation 
            is the "container" function: PDF/A files can be embedded within a PDF/A-2 document.
            </para>
        <para>
            Level B (Basic) guarantees that the content of the document can be unambiguously reproduced. Level B files are easier to create than Level A, but 
            Level B does not guarantee 100% text extraction or searchability. It does not necessarily mean that the content can be reused without any problems. 
            Scanned paper documents can usually be converted to PDF/A Conformance Level B without any extra work.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfConformanceLevel.PdfA2u">
      <summary>
        <para>
            PDF/A-2 was published in 2011 as "ISO 19005-2". Based on PDF version 1.7, which has since been standardised as "ISO 32000-1", it makes use of 
            this version’s new features. This means PDF/A-2 allows JPEG2000 compression, transparent elements and PDF layers. PDF/A-2 also allows you to 
            embed OpenType fonts and supports PAdES(PDF Advanced Electronic Signatures)-compliant digital signatures. One particularly important innovation 
            is the "container" function: PDF/A files can be embedded within a PDF/A-2 document.
            </para>
        <para>
            Level U (Unicode) was introduced along with PDF/A-2. It expands Conformance Level B to specify that all text can be mapped to standard Unicode character codes.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfConformanceLevel.PdfA3a">
      <summary>
        <para>
            PDF/A-3 has been available since October 2012. A PDF/A-3 document allows you to embed any file format desired – not just PDF/A documents. 
            For example, a PDF/A-3 file can contain the original file from which it was generated. The PDF/A standard does not regulate the suitability of 
            these embedded files for archiving.
            </para>
        <para>
            Level A (Accessible) meets all requirements for the standard, including the logical structure of the document and its correct reading order. 
            Text must be extractable and the logical structure must match the natural reading order. Fonts used must meet stringent requirements. 
            This PDF/A level can usually only be met by converting born-digital documents.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfConformanceLevel.PdfA3b">
      <summary>
        <para>
            PDF/A-3 has been available since October 2012. A PDF/A-3 document allows you to embed any file format desired – not just PDF/A documents. 
            For example, a PDF/A-3 file can contain the original file from which it was generated. The PDF/A standard does not regulate the suitability of 
            these embedded files for archiving.
            </para>
        <para>
            Level B (Basic) guarantees that the content of the document can be unambiguously reproduced. Level B files are easier to create than Level A, but 
            Level B does not guarantee 100% text extraction or searchability. It does not necessarily mean that the content can be reused without any problems. 
            Scanned paper documents can usually be converted to PDF/A Conformance Level B without any extra work.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfConformanceLevel.PdfA3u">
      <summary>
        <para>
            PDF/A-3 has been available since October 2012. A PDF/A-3 document allows you to embed any file format desired – not just PDF/A documents. 
            For example, a PDF/A-3 file can contain the original file from which it was generated. The PDF/A standard does not regulate the suitability of 
            these embedded files for archiving.
            </para>
        <para>
            Level U (Unicode) was introduced along with PDF/A-2. It expands Conformance Level B to specify that all text can be mapped to standard Unicode character codes.
            </para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions">
      <summary>
            Represents a class that stores details for signing a workbook saved to a Portable Document Format (PDF) with a digital signature.
            </summary>
      <remarks>
        <para>Workbook will be digitally signed when saved to a PDF if <see cref="P:GemBox.Spreadsheet.DigitalSignatureSaveOptions.Certificate" />, <see cref="P:GemBox.Spreadsheet.DigitalSignatureSaveOptions.CertificateBytes" /> or <see cref="P:GemBox.Spreadsheet.DigitalSignatureSaveOptions.CertificatePath" /> is specified, if <see cref="T:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions" /> instance is created with <see cref="M:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions.FromSigner(System.Func{System.String},System.Func{System.Int32},System.Func{System.IO.Stream,System.Byte[]})" /> method or if <c>Sign(Stream)</c> method is overridden, otherwise it will be saved but not digitally signed.</para>
        <note type="note">
            If your project doesn't target Windows platform, to use <see cref="T:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions" />, make sure your project references NuGet package <see href="https://www.nuget.org/packages/System.Security.Cryptography.Pkcs/">System.Security.Cryptography.Pkcs</see>.
            </note>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/pdf-digital-signature/703">PDF digital signature examples</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions.IsAdvancedElectronicSignature">
      <summary>
            Gets or sets a value indicating whether the signature is <b>P</b>DF <b>Ad</b>vanced <b>E</b>lectronic <b>S</b>ignature (PAdES).
            </summary>
      <value>
        <see langword="true" /> if the signature is <b>P</b>DF <b>Ad</b>vanced <b>E</b>lectronic <b>S</b>ignature (PAdES); otherwise, <see langword="false" />.
            </value>
      <seealso href="https://www.etsi.org/deliver/etsi_en/319100_319199/31914201/01.01.01_60/en_31914201v010101p.pdf#page=15">PAdES baseline signatures</seealso>
      <seealso href="https://www.etsi.org/deliver/etsi_en/319100_319199/31914202/01.01.01_60/en_31914202v010101p.pdf#page=11">Extended PAdES signature profiles</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions.ContactInfo">
      <summary>
            Gets or sets the contact information.
            </summary>
      <value>
            Information provided by the signer to enable a recipient to contact the signer
            to verify the signature; for example, a phone number.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions.Location">
      <summary>
            Gets or sets the CPU host name or physical location of the signing.
            </summary>
      <value>
            The CPU host name or physical location of the signing.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions.FromSigner(System.Func{System.String},System.Func{System.Int32},System.Func{System.IO.Stream,System.Byte[]})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions" /> class from the specified signer.
            </summary>
      <param name="signatureFormatFunc">A delegate that returns the format of the signature content that the signer produces.</param>
      <param name="estimatedSignatureLengthFunc">A delegate that returns the estimated length of the signature content (in bytes) that should be large enough to contain the entire data returned by the <paramref name="computeSignatureFunc" /> delegate.</param>
      <param name="computeSignatureFunc">A delegate called when saving the PDF file that takes the PDF file stream (without signature's <b>Contents</b> entry) as an input and returns the signature that will be set as the value of the signature's <b>Contents</b> entry.</param>
      <returns>
            A new instance of the <see cref="T:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions" /> class from the specified signer.
            </returns>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/pdf-digital-signature/703#pades">PAdES signature (LTV enabled) example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions.EstimatedSignatureLength">
      <summary>
            Gets the estimated signature length.
            </summary>
      <value>
            The estimated signature length.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.PdfDigitalSignatureSaveOptions.Sign(System.IO.Stream)">
      <summary>
            Returns the digital signature for the PDF file stream.
            </summary>
      <param name="pdfFile">The PDF file stream that will be digitally signed.</param>
      <returns>
            The digital signature for the PDF file stream.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.PdfPermissions">
      <summary>
            Defines operations that are allowed to a user on an encrypted PDF document.
            </summary>
      <remarks>
            For more information about PDF encryption, see <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.Permissions" /> remarks.
            </remarks>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.None">
      <summary>
            Disallows all operations.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.Printing">
      <summary>
            Allows printing.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.HighResolutionPrinting">
      <summary>
            Allows high resolution printing.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.ChangingTheDocument">
      <summary>
            Allows changing the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.ContentCopying">
      <summary>
            Allows copying the content.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.ContentAccessibilityEnabled">
      <summary>
            Allow accessibility software to use the document contents.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.DocumentAssembly">
      <summary>
            If this is disabled, inserting, deleting or rotating pages, or creating bookmarks and thumbnails is prohibited.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.ModifyAnnotations">
      <summary>
            Allows adding or modifying text annotations, filling of interactive form fields (including signature fields).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.All">
      <summary>
            Allows all operations.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PdfSaveOptions">
      <summary>
            Represents options for saving to Portable Document Format (PDF) file.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.Permissions">
      <summary>
            Gets or sets the operations that are allowed to a user on an encrypted PDF document.
            </summary>
      <remarks>
        <para>
        Generated PDF document will be encrypted if any of the following conditions are satisfied:
      </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.Permissions" /> is different than <see cref="F:GemBox.Spreadsheet.PdfPermissions.All" />.
          </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> is not <see langword="null" /> or <see cref="F:System.String.Empty" />.
          </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> is not <see langword="null" /> or <see cref="F:System.String.Empty" />.
          </description>
          </item>
        </list>
        <para>
        Both <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> and <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> are optional but with the following consequences:
      </para>
        <list type="bullet">
          <item>
            <description>
            If <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.Permissions" /> is different than <see cref="F:GemBox.Spreadsheet.PdfPermissions.All" /> and <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> is not specified, component will generate random <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" />.
          </description>
          </item>
          <item>
            <description>
            Using <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" />, also known as <i>owner password</i>, without <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> is not secure. It relies on PDF viewer software to respect specified restrictions, but it may choose not to do so.
          </description>
          </item>
          <item>
            <description>
            Using <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" />, also known as <i>user password</i>, is potentially very secure. It or <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> is required for decrypting and viewing the document.
          </description>
          </item>
          <item>
            <description>
            When <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> is specified, PDF viewer application will prompt for password to decrypt and present the document. If entered password is <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" />, document will be decrypted and presented with specified <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.Permissions" /> enforced. Otherwise, if entered password is <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" />, document will be decrypted and presented without any restrictions.
          </description>
          </item>
        </list>
        <para>
          <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> and <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> cannot be equal, otherwise exception is thrown.
      </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword">
      <summary>
            Specifies the password required for opening the encrypted PDF document.
            </summary>
      <remarks>
        <para>
        Generated PDF document will be encrypted if any of the following conditions are satisfied:
      </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.Permissions" /> is different than <see cref="F:GemBox.Spreadsheet.PdfPermissions.All" />.
          </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> is not <see langword="null" /> or <see cref="F:System.String.Empty" />.
          </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> is not <see langword="null" /> or <see cref="F:System.String.Empty" />.
          </description>
          </item>
        </list>
        <para>
        Both <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> and <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> are optional but with the following consequences:
      </para>
        <list type="bullet">
          <item>
            <description>
            If <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.Permissions" /> is different than <see cref="F:GemBox.Spreadsheet.PdfPermissions.All" /> and <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> is not specified, component will generate random <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" />.
          </description>
          </item>
          <item>
            <description>
            Using <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" />, also known as <i>owner password</i>, without <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> is not secure. It relies on PDF viewer software to respect specified restrictions, but it may choose not to do so.
          </description>
          </item>
          <item>
            <description>
            Using <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" />, also known as <i>user password</i>, is potentially very secure. It or <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> is required for decrypting and viewing the document.
          </description>
          </item>
          <item>
            <description>
            When <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> is specified, PDF viewer application will prompt for password to decrypt and present the document. If entered password is <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" />, document will be decrypted and presented with specified <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.Permissions" /> enforced. Otherwise, if entered password is <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" />, document will be decrypted and presented without any restrictions.
          </description>
          </item>
        </list>
        <para>
          <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> and <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> cannot be equal, otherwise exception is thrown.
      </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword">
      <summary>
            Specifies the password for opening the encrypted PDF document without any access restrictions.
            </summary>
      <remarks>
        <para>
        Generated PDF document will be encrypted if any of the following conditions are satisfied:
      </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.Permissions" /> is different than <see cref="F:GemBox.Spreadsheet.PdfPermissions.All" />.
          </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> is not <see langword="null" /> or <see cref="F:System.String.Empty" />.
          </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> is not <see langword="null" /> or <see cref="F:System.String.Empty" />.
          </description>
          </item>
        </list>
        <para>
        Both <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> and <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> are optional but with the following consequences:
      </para>
        <list type="bullet">
          <item>
            <description>
            If <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.Permissions" /> is different than <see cref="F:GemBox.Spreadsheet.PdfPermissions.All" /> and <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> is not specified, component will generate random <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" />.
          </description>
          </item>
          <item>
            <description>
            Using <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" />, also known as <i>owner password</i>, without <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> is not secure. It relies on PDF viewer software to respect specified restrictions, but it may choose not to do so.
          </description>
          </item>
          <item>
            <description>
            Using <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" />, also known as <i>user password</i>, is potentially very secure. It or <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> is required for decrypting and viewing the document.
          </description>
          </item>
          <item>
            <description>
            When <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> is specified, PDF viewer application will prompt for password to decrypt and present the document. If entered password is <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" />, document will be decrypted and presented with specified <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.Permissions" /> enforced. Otherwise, if entered password is <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" />, document will be decrypted and presented without any restrictions.
          </description>
          </item>
        </list>
        <para>
          <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword" /> and <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword" /> cannot be equal, otherwise exception is thrown.
      </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.ImageDpi">
      <summary>
      Gets or sets the saved images DPI.
    </summary>
      <value>
      The saved images DPI.
    </value>
      <remarks>
      This property controls the image quality for all images in the file. Larger value results in better-quality images but increases the file size. Setting this property to 0 will disable image optimization. Standard DPI values are:
      <list type="bullet"><item><description>330 - Good quality for HD displays</description></item><item><description>220 - Good quality for most printers and displays</description></item><item><description>150 - Good quality for web pages and projectors</description></item><item><description>96 - Good quality for smaller file sizes</description></item></list></remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.ConformanceLevel">
      <summary>
            Gets or sets the level of conformance for PDF document.
            </summary>
      <value>
            The level of conformance for PDF document.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.RasterizeVectorPictures">
      <summary>
            Gets or sets a value indicating whether to rasterize vector pictures.
            </summary>
      <value>
            The value indicating whether to rasterize vector pictures.
            </value>
    </member>
    <member name="E:GemBox.Spreadsheet.PdfSaveOptions.ProgressChanged">
      <summary>
            Occurs when saving progress of a file has changed.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PdfSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.PdfSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.MetafileScaleFactor">
      <summary>
      Gets or sets the scaling factor for rendering metafile (WMF and EMF) images. Greater scaling factor improves quality but also increases file size. Default value is 1.
    </summary>
      <value>
      The metafile scale factor for rendering metafile (WMF and EMF) images.
    </value>
      <remarks>
        <para>Windows Metafile Format (WMF) and Enhanced Metafile Format (EMF) are vector image formats which contain a series of graphics drawing commands usually executed in Windows GDI layer.</para>
        <para>Metafile drawing commands could also be executed in PDF (or XPS) file which is also vector format, but for that Metafile drawing commands would have to be converted to PDF drawing commands.</para>
        <para>GemBox.Document currently doesn't perform this conversion of drawing commands, instead it uses Windows GDI to execute Metafile drawing commands into bitmap which is then encoded to PNG format and embedded into PDF file.</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.MetafileScaleFactor" /> specifies the size of the bitmap surface, based from the original Metafile surface size, into which Metafile should be drawn / rasterized.
      </para>
        <para>PDF viewer will still scale the bitmap to the original Metafile size, but if the page is zoomed or viewed on a larger surface, quality of the image will be better since it contains more pixels / dots which will become visible while PDF viewer scales down the image.</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.MetafileScaleFactor" /> increases the quality of the Metafile image in PDF file, but it also increases the size of the PDF file because greater <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.MetafileScaleFactor" /> means greater bitmap surface and more space to store bitmap pixel / color data.
        PNG encoding / compression helps in reducing the space requirement and for complex Metafiles (with a lot of drawing instructions), <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.MetafileScaleFactor" /> of 5 or even greater, might not incur any space overhead relative to the original (complex) Metafile.
      </para>
        <para>
        Default value for <see cref="P:GemBox.Spreadsheet.PdfSaveOptions.MetafileScaleFactor" /> is 1.
      </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.DigitalSignature">
      <summary>
            Gets or sets the digital signature options.
            </summary>
      <value>
            The digital signature options.
            </value>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/pdf-digital-signature/703">PDF digital signature examples</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.ContentType">
      <summary>
            Gets the content-type for PDF file format: <b>application/pdf</b>.
            </summary>
      <value>
            The content-type for PDF file format.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to PDF file format.
            </summary>
      <remarks>
            These are the limits:
            <list type="bullet"><item><description>MaxRows: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxColumns: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxColors: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxCellStyles: <see cref="F:System.Int32.MaxValue" /></description></item></list></remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.PdfSaveOptions.Save(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName">
      <summary>
            Represents a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> built-in styles.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.None">
      <summary>
            No built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight1">
      <summary>
            '<b>PivotStyleLight1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight2">
      <summary>
            '<b>PivotStyleLight2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight3">
      <summary>
            '<b>PivotStyleLight3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight4">
      <summary>
            '<b>PivotStyleLight4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight5">
      <summary>
            '<b>PivotStyleLight5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight6">
      <summary>
            '<b>PivotStyleLight6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight7">
      <summary>
            '<b>PivotStyleLight7</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight8">
      <summary>
            '<b>PivotStyleLight8</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight9">
      <summary>
            '<b>PivotStyleLight9</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight10">
      <summary>
            '<b>PivotStyleLight10</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight11">
      <summary>
            '<b>PivotStyleLight11</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight12">
      <summary>
            '<b>PivotStyleLight12</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight13">
      <summary>
            '<b>PivotStyleLight13</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight14">
      <summary>
            '<b>PivotStyleLight14</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight15">
      <summary>
            '<b>PivotStyleLight15</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight16">
      <summary>
            '<b>PivotStyleLight16</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight17">
      <summary>
            '<b>PivotStyleLight17</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight18">
      <summary>
            '<b>PivotStyleLight18</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight19">
      <summary>
            '<b>PivotStyleLight19</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight20">
      <summary>
            '<b>PivotStyleLight20</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight21">
      <summary>
            '<b>PivotStyleLight21</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight22">
      <summary>
            '<b>PivotStyleLight22</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight23">
      <summary>
            '<b>PivotStyleLight23</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight24">
      <summary>
            '<b>PivotStyleLight24</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight25">
      <summary>
            '<b>PivotStyleLight25</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight26">
      <summary>
            '<b>PivotStyleLight26</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight27">
      <summary>
            '<b>PivotStyleLight27</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleLight28">
      <summary>
            '<b>PivotStyleLight28</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium1">
      <summary>
            '<b>PivotStyleMedium1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium2">
      <summary>
            '<b>PivotStyleMedium2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium3">
      <summary>
            '<b>PivotStyleMedium3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium4">
      <summary>
            '<b>PivotStyleMedium4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium5">
      <summary>
            '<b>PivotStyleMedium5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium6">
      <summary>
            '<b>PivotStyleMedium6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium7">
      <summary>
            '<b>PivotStyleMedium7</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium8">
      <summary>
            '<b>PivotStyleMedium8</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium9">
      <summary>
            '<b>PivotStyleMedium9</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium10">
      <summary>
            '<b>PivotStyleMedium10</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium11">
      <summary>
            '<b>PivotStyleMedium11</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium12">
      <summary>
            '<b>PivotStyleMedium12</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium13">
      <summary>
            '<b>PivotStyleMedium13</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium14">
      <summary>
            '<b>PivotStyleMedium14</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium15">
      <summary>
            '<b>PivotStyleMedium15</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium16">
      <summary>
            '<b>PivotStyleMedium16</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium17">
      <summary>
            '<b>PivotStyleMedium17</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium18">
      <summary>
            '<b>PivotStyleMedium18</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium19">
      <summary>
            '<b>PivotStyleMedium19</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium20">
      <summary>
            '<b>PivotStyleMedium20</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium21">
      <summary>
            '<b>PivotStyleMedium21</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium22">
      <summary>
            '<b>PivotStyleMedium22</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium23">
      <summary>
            '<b>PivotStyleMedium23</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium24">
      <summary>
            '<b>PivotStyleMedium24</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium25">
      <summary>
            '<b>PivotStyleMedium25</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium26">
      <summary>
            '<b>PivotStyleMedium26</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium27">
      <summary>
            '<b>PivotStyleMedium27</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleMedium28">
      <summary>
            '<b>PivotStyleMedium28</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark1">
      <summary>
            '<b>PivotStyleDark1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark2">
      <summary>
            '<b>PivotStyleDark2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark3">
      <summary>
            '<b>PivotStyleDark3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark4">
      <summary>
            '<b>PivotStyleDark4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark5">
      <summary>
            '<b>PivotStyleDark5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark6">
      <summary>
            '<b>PivotStyleDark6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark7">
      <summary>
            '<b>PivotStyleDark7</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark8">
      <summary>
            '<b>PivotStyleDark8</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark9">
      <summary>
            '<b>PivotStyleDark9</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark10">
      <summary>
            '<b>PivotStyleDark10</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark11">
      <summary>
            '<b>PivotStyleDark11</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark12">
      <summary>
            '<b>PivotStyleDark12</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark13">
      <summary>
            '<b>PivotStyleDark13</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark14">
      <summary>
            '<b>PivotStyleDark14</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark15">
      <summary>
            '<b>PivotStyleDark15</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark16">
      <summary>
            '<b>PivotStyleDark16</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark17">
      <summary>
            '<b>PivotStyleDark17</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark18">
      <summary>
            '<b>PivotStyleDark18</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark19">
      <summary>
            '<b>PivotStyleDark19</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark20">
      <summary>
            '<b>PivotStyleDark20</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark21">
      <summary>
            '<b>PivotStyleDark21</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark22">
      <summary>
            '<b>PivotStyleDark22</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark23">
      <summary>
            '<b>PivotStyleDark23</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark24">
      <summary>
            '<b>PivotStyleDark24</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark25">
      <summary>
            '<b>PivotStyleDark25</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark26">
      <summary>
            '<b>PivotStyleDark26</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark27">
      <summary>
            '<b>PivotStyleDark27</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.BuiltInPivotStyleName.PivotStyleDark28">
      <summary>
            '<b>PivotStyleDark28</b>' built-in style.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection">
      <summary>
            Represents a collection of visible (row, column, page or data) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
            </summary>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">
      <summary>
            Adds the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> to this area collection.
            </summary>
      <param name="fieldIndex">The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> index in the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection.</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> added to this area collection.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> created from non-worksheet data source cannot be modified.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="fieldIndex" /> is less than 0 or is equal to or greater than <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> count.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.String)">
      <summary>
            Adds the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> to this area collection.
            </summary>
      <param name="fieldName">The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> name in the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection.</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> added to this area collection.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> created from non-worksheet data source cannot be modified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fieldName" /> can't be <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">Field with specified name doesn't exist.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(GemBox.Spreadsheet.PivotTables.PivotField)">
      <summary>
            Adds the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> to this area collection.
            </summary>
      <param name="pivotField">The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> in the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" />, <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" />,
            <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" />, <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> or <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> added to this area collection.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> created from non-worksheet data source cannot be modified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pivotField" /> can't be <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Field is not part of the parent <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Remove(System.Int32)">
      <summary>
            Removes <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> at the specified index from this area collection.
            </summary>
      <param name="fieldIndex">The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> index in this area collection.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> created from non-worksheet data source cannot be modified.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="fieldIndex" /> is less than 0 or is equal to or greater than field count.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Remove(System.String)">
      <summary>
            Removes <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> with the specified name from this area collection.
            </summary>
      <param name="fieldName">The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> name.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> created from non-worksheet data source cannot be modified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fieldName" /> can't be <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">Field with specified name doesn't exist.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Remove(GemBox.Spreadsheet.PivotTables.PivotField)">
      <summary>
            Removes <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> from this area collection.
            </summary>
      <param name="pivotField">The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> in this area collection.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> created from non-worksheet data source cannot be modified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pivotField" /> can't be <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Field is not part of this pivot area.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)">
      <summary>
            Moves the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> at the specified index to a new location in the collection.
            </summary>
      <param name="oldIndex">The zero-based index specifying the location of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="oldIndex" /> is less than 0 or is equal to or greater than field count.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newIndex" /> is less than 0 or is equal to or greater than field count.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> created from non-worksheet data source cannot be modified.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Clear">
      <summary>
            Removes all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s from this area collection.
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> created from non-worksheet data source cannot be modified.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotCache">
      <summary>
            Represents a memory cache for a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.
            </summary>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource">
      <summary>
            Gets the source of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />.
            </summary>
      <value>
            The source of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />.
            </value>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotCache.RefreshOnLoad">
      <summary>
        <para>Gets or sets a value indicating whether the data should be refreshed when opening the file.</para>
        <para>The default value is <see langword="true" />.</para>
      </summary>
      <value>
            The value indicating whether the data should be refreshed when opening the file.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotCache.ChangeWorksheetSource(System.String)">
      <summary>
            Changes the worksheet source of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />.
            </summary>
      <param name="reference">The worksheet data source reference which must refer either to a cell range or a named range.</param>
      <exception cref="T:System.ArgumentException">Reference must refer either to a cell range or a named range.</exception>
      <exception cref="T:System.InvalidOperationException">The source data has been changed substantially. Consider creating a new PivotTable.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh">
      <summary>
            Refreshes the pivot cache based on its <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" />.
            </summary>
      <remarks>
            Refreshing the pivot cache also automatically refreshes <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s that use this pivot cache.
            </remarks>
      <exception cref="T:System.InvalidOperationException">The cache source is not <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource" /></exception>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotCacheCollection">
      <summary>
            Represents a collection of all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> objects in the workbook.
            </summary>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotCacheCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> at the specified index.
            </value>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />.</param>
      <returns>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> at the specified index.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotCacheCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />s contained in the collection.
            </summary>
      <value>
            The number of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />s contained in the collection.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotCacheCollection.AddWorksheetSource(System.String)">
      <summary>
            Adds a new <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> from the worksheet data source.
            </summary>
      <param name="reference">The worksheet data source reference which must refer either to a cell range or a named range.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="reference" /> must refer either to a cell range or a named range.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotCacheCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotCacheCollection.System#Collections#IEnumerable#GetEnumerator">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource">
      <summary>
            Represents an abstract source of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> data.
            </summary>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotCacheSource.SourceType">
      <summary>
            Gets the type of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> source.
            </summary>
      <value>
            The type of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> source.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotCacheSourceType">
      <summary>
            Specifies the type of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> source.
            </summary>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotCacheSourceType.Worksheet">
      <summary>
            Indicates that the cache contains worksheet data.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotCacheSourceType.Consolidation">
      <summary>
            Indicates that the cache contains data that consolidates ranges.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotCacheSourceType.External">
      <summary>
            Indicates that the cache contains data from an external data source.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotCacheSourceType.Scenario">
      <summary>
            Indicates that the cache contains a scenario summary report.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotField">
      <summary>
            Represents a field within a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.
            </summary>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.DragToHide">
      <summary>
            Gets or sets a value indicating whether this field can be dragged to the hide position.
            </summary>
      <value>
        <see langword="true" /> if this field can be dragged to the hide position; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.DragToRow">
      <summary>
            Gets or sets a value indicating whether this field can be dragged to the row position.
            </summary>
      <value>
        <see langword="true" /> if this field can be dragged to the row position; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.DragToColumn">
      <summary>
            Gets or sets a value indicating whether this field can be dragged to the column position.
            </summary>
      <value>
        <see langword="true" /> if this field can be dragged to the column position; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.DragToPage">
      <summary>
            Gets or sets a value indicating whether this field can be dragged to the page position.
            </summary>
      <value>
        <see langword="true" /> if this field can be dragged to the page position; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.DragToData">
      <summary>
            Gets or sets a value indicating whether this field can be dragged to the data position.
            </summary>
      <value>
        <see langword="true" /> if this field can be dragged to the data position; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.EnableMultiplePageItems">
      <summary>
            Gets or sets a value indicating whether this field can have multiple items selected in the page field.
            </summary>
      <value>
        <see langword="true" /> if this field can have multiple items selected in the page field; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.InsertBlankRow">
      <summary>
            Gets or sets a value indicating whether to insert a blank row after each item.
            </summary>
      <value>
        <see langword="true" /> if a blank row will be inserted after each item; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.InsertPageBreak">
      <summary>
            Gets or sets a value indicating whether to insert a page break after each item.
            </summary>
      <value>
        <see langword="true" /> if a page break will be inserted after each item; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.LayoutForm">
      <summary>
            Gets or sets the layout form for this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </summary>
      <value>
            The layout form for this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.ShowAll">
      <summary>
            Gets or sets a value indicating whether to show all items for this field.
            </summary>
      <value>
        <see langword="true" /> to show all items for this field; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.RepeatItemLabels">
      <summary>
             Gets or sets a value indicating whether to repeat item labels.
             </summary>
      <value>
        <see langword="true" /> to repeat item labels for each nested item; otherwise, <see langword="false" />.
             </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.AllDrilled">
      <summary>
            Specifies a boolean value that indicates whether all items in the field are expanded. Applies only to OLAP PivotTables.
            </summary>
      <value>
        <para>
          <see langword="true" /> indicates all items in the field are expanded.</para>
        <para>
          <see langword="false" /> indicates all items are not expanded. However some items might be expanded.</para>
      </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.PivotTable">
      <summary>
            Gets the parent <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.
            </summary>
      <value>
            The parent <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.PivotItems">
      <summary>
            Gets the collection of all (visible and hidden) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s in this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </summary>
      <value>
            The collection of all (visible and hidden) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s in this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.SourceName">
      <summary>
            Gets the source name (cache field name) of this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </summary>
      <value>
            The source name (cache field name) of this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.Name">
      <summary>
            Gets or sets the custom name (label text) of this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </summary>
      <value>
            The custom name (label text) of this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </value>
      <exception cref="T:System.ArgumentException">Value cannot be <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.Formula">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />'s formula in A1-style notation.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />'s formula in A1-style notation.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated">
      <summary>
            Gets a value indicating whether this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is a calculated field.
            </summary>
      <value>
        <see langword="true" /> if this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is a calculated field; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.Subtotals">
      <summary>
        <para>Gets or sets the subtotals displayed with this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.</para>
        <para>This property is applicable only for non-data fields.</para>
      </summary>
      <value>
            The subtotals displayed with this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.Function">
      <summary>
        <para>Gets or sets the function used to summarize/aggregate this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.</para>
        <para>This property is applicable only for data fields.</para>
      </summary>
      <value>
            The function used to summarize/aggregate this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.ShowDataAs">
      <summary>
        <para>Gets or sets the display format for this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.</para>
        <para>This property is applicable only for data fields.</para>
      </summary>
      <value>
            The display format for this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.BaseField">
      <summary>
        <para>Gets or sets the base field used for a custom calculation.</para>
        <para>This property is applicable only for data fields.</para>
      </summary>
      <value>
            The base field used for a custom calculation.
            </value>
      <exception cref="T:System.ArgumentNullException">Value can't be <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Base field is not part of the parent <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.BaseItem">
      <summary>
        <para>Gets or sets the item in the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.BaseField" /> used for a custom calculation.</para>
        <para>This property is applicable only for data fields.</para>
        <para>Use <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.BaseItemPosition" /> property to specify <see cref="F:GemBox.Spreadsheet.PivotTables.PivotItemPosition.Previous" /> or <see cref="F:GemBox.Spreadsheet.PivotTables.PivotItemPosition.Next" /> item, otherwise use this property.</para>
      </summary>
      <value>
            The item in the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.BaseField" /> used for a custom calculation.
            </value>
      <exception cref="T:System.ArgumentNullException">Value can't be <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.BaseField" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Base item is not part of the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.BaseField" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.BaseItemPosition">
      <summary>
        <para>Gets or sets the item position in the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.BaseField" /> used for a custom calculation.</para>
        <para>This property is applicable only for data fields.</para>
        <para>Use this property to specify <see cref="F:GemBox.Spreadsheet.PivotTables.PivotItemPosition.Previous" /> or <see cref="F:GemBox.Spreadsheet.PivotTables.PivotItemPosition.Next" /> item, otherwise use <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.BaseItem" /> property.</para>
      </summary>
      <value>
            The item position in the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.BaseField" /> used for a custom calculation.
            </value>
      <exception cref="T:System.ArgumentException">
        <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.BaseField" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.CurrentPageItem">
      <summary>
        <para>Gets or sets the current page item showing for the page field.</para>
        <para>This property is applicable only for page fields.</para>
        <para>If set to <see langword="null" />, no current page item will be defined.</para>
      </summary>
      <value>
            The current page item showing for the page field.
            </value>
      <exception cref="T:System.ArgumentException">Page item is not part of this page field.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.NumberFormat">
      <summary>
        <para>Gets or sets the number format which indicates how to format the numeric value of this field.</para>
        <para>Default value is <b>General</b>.</para>
        <para>If set to <see langword="null" />, number format will be set to default.</para>
      </summary>
      <value>
            The number format which indicates how to format the numeric value of this field.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotField.SortOptions">
      <summary>
            Gets the sort options of this pivot field.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotField.ClearSort">
      <summary>
            Removes the sort options from this pivot field.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotField.Sort(System.Boolean)">
      <summary>
            Sorts this pivot field by the pivot items in it.
            </summary>
      <param name="descending">True to sort in descending order, false otherwise.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotField.Sort(System.Boolean,GemBox.Spreadsheet.PivotTables.PivotField,GemBox.Spreadsheet.PivotTables.PivotItem[])">
      <summary>
        <para>Sorts this pivot field by the data field.</para>
        <para>Pivot items can be used to specify the row (or column) that will be used to sort the pivot field.</para>
      </summary>
      <param name="descending">True to sort in descending order, false otherwise.</param>
      <param name="sortByDataField">Data field that is used to sort this pivot field.</param>
      <param name="sortByPivotItems">Pivot items that specify the row (or column) that will be used to sort the pivot field.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotField.Collapse(System.Boolean)">
      <summary>
            Collapse/expand entire <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </summary>
      <param name="collapsed">
        <see langword="true" /> if entire <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is collapsed; otherwise, <see langword="false" />.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotFieldBaseCollection">
      <summary>
            Represents a base collection of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotFieldBaseCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> at the specified index.
            </value>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.</param>
      <returns>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> at the specified index.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotFieldBaseCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> with the specified name.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> with the specified name.
            </value>
      <param name="fieldName">The name of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.</param>
      <returns>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> with the specified name.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotFieldBaseCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s contained in the collection.
            </summary>
      <value>
            The number of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s contained in the collection.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotFieldBaseCollection.IndexOf(GemBox.Spreadsheet.PivotTables.PivotField)">
      <summary>
            Searches for the specified <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> to locate in the collection.</param>
      <returns>The zero-based index of the first occurrence of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> within the entire collection, if found; otherwise, –1.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotFieldBaseCollection.Contains(GemBox.Spreadsheet.PivotTables.PivotField)">
      <summary>
            Determines whether the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is contained in the collection.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> to locate in the collection.</param>
      <returns>
        <see langword="true" /> if <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is contained in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotFieldBaseCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotFieldBaseCollection.System#Collections#IEnumerable#GetEnumerator">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotFieldCalculationType">
      <summary>
            Represents a data <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> subtotal function.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldCalculationType.Sum">
      <summary>
            The sum of the values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldCalculationType.Count">
      <summary>
            The number of data values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldCalculationType.Average">
      <summary>
            The average of the values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldCalculationType.Max">
      <summary>
            The largest value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldCalculationType.Min">
      <summary>
            The smallest value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldCalculationType.Product">
      <summary>
            The product of the values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldCalculationType.CountNums">
      <summary>
            The number of data values that are numbers.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldCalculationType.StdDev">
      <summary>
            An estimate of the standard deviation of a population, where the sample is a subset of the entire population.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldCalculationType.StdDevp">
      <summary>
            The standard deviation of a population, where the population is all of the data to be summarized.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldCalculationType.Var">
      <summary>
            An estimate of the variance of a population, where the sample is a subset of the entire population.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldCalculationType.Varp">
      <summary>
            The variance of a population, where the population is all of the data to be summarized.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotFieldCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)">
      <summary>
            Adds a calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> to the end of the collection of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> fields.
            </summary>
      <param name="fieldName">The name of the calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.</param>
      <param name="formula">The formula of the calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> created from non-worksheet data source cannot be modified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fieldName" /> can't be <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="formula" /> can't be <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fieldName" /> must be unique.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)">
      <summary>
            Removes the calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> from the collection of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> fields.
            </summary>
      <param name="fieldName">The name of the calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> created from non-worksheet data source cannot be modified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fieldName" /> can't be <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">Field with specified name doesn't exist.</exception>
      <exception cref="T:System.ArgumentException">Field with specified name is not a calculated field.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat">
      <summary>
            Represents a data <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> display format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.Normal">
      <summary>
            No calculation.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.Difference">
      <summary>
            The difference from the value of the Base item in the Base field.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.Index">
      <summary>
            Data calculated as ((value in cell) x (Grand Total of Grand Totals)) / ((Grand Row Total) x (Grand Column Total)).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.Percent">
      <summary>
            Percentage of the value of the Base item in the Base field.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.PercentageOfDifference">
      <summary>
            Percentage difference from the value of the Base item in the Base field.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.PercentageOfColumn">
      <summary>
            Percentage of the total for the column or series.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.PercentageOfRow">
      <summary>
            Percentage of the total for the row or category.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.PercentageOfTotal">
      <summary>
            Percentage of the grand total of all the data or data points in the report.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.PercentageOfParent">
      <summary>
            Percentage of the total of the specified parent Base field.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.PercentageOfParentColumn">
      <summary>
            Percentage of the total of the parent column.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.PercentageOfParentRow">
      <summary>
            Percentage of the total of the parent row.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.PercentageOfRunningTotal">
      <summary>
            Rank largest to smallest.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.RunTotal">
      <summary>
            Data for successive items in the Base field as a running total.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.RankAscending">
      <summary>
            Rank smallest to largest.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldDisplayFormat.RankDecending">
      <summary>
            Rank largest to smallest.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotFieldLayoutForm">
      <summary>
            Represents the way the specified <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> appear.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldLayoutForm.Compact">
      <summary>
            Show in Compact Form.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldLayoutForm.Outline">
      <summary>
            Show in Outline Form.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldLayoutForm.Tabular">
      <summary>
            Show in Tabular Form.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes">
      <summary>
            Represents a data <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> displayed subtotals.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes.None">
      <summary>
            No subtotals.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes.Automatic">
      <summary>
            Represents Automatic subtotal type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes.Sum">
      <summary>
            Represents Sum subtotal type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes.Count">
      <summary>
            Represents Count subtotal type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes.Average">
      <summary>
            Represents Average subtotal type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes.Max">
      <summary>
            Represents Max subtotal type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes.Min">
      <summary>
            Represents Min subtotal type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes.Product">
      <summary>
            Represents Product subtotal type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes.CountNums">
      <summary>
            Represents CountNums subtotal type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes.StdDev">
      <summary>
            Represents StdDev subtotal type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes.StdDevp">
      <summary>
            Represents StdDevp subtotal type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes.Var">
      <summary>
            Represents Var subtotal type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotFieldSubtotalTypes.Varp">
      <summary>
            Represents Varp subtotal type.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotFilter">
      <summary>
            Represents a filter for a single pivot field.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotFilter.Field">
      <summary>
            Gets the pivot field that this pivot filter applies to.
            </summary>
      <value>
            The pivot field that this pivot filter applies to.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotFilter.MeasureField">
      <summary>
            Gets the pivot field containing summary values being filtered.
            </summary>
      <value>
            The pivot field containing summary values being filtered.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotFilter.Filter">
      <summary>
            Gets the filter settings applied to this pivot field or <see langword="null" /> if no filter settings are applied to this pivot field.
            </summary>
      <value>
            The filter settings applied to this pivot field or <see langword="null" /> if no filter settings are applied to this pivot field.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotFilter.SetTop10Filter">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.Top10Filter" /> to this field.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Top10Filter" /> filters by a top N (percent or number of items).</para>
        <para>Use members of a returned <see cref="T:GemBox.Spreadsheet.Top10Filter" /> to specify filter settings.</para>
      </summary>
      <returns>A <see cref="T:GemBox.Spreadsheet.Top10Filter" />.</returns>
      <remarks>
            If this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotFilter.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotFilter.SetCustomFilter">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.CustomFilter" /> to this field.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.CustomFilter" /> filters by a one or two conditions (operators and values).</para>
        <para>Use members of a returned <see cref="T:GemBox.Spreadsheet.CustomFilter" /> to specify filter settings.</para>
      </summary>
      <returns>A <see cref="T:GemBox.Spreadsheet.CustomFilter" />.</returns>
      <remarks>
            If this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotFilter.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotFilter.SetDynamicFilter">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> to this field.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> filters by a dynamic criteria that can change, either with the data itself (e.g., "above average") or with the current system date (e.g., show values for "today").</para>
        <para>Use members of a returned <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> to specify filter settings.</para>
      </summary>
      <returns>A <see cref="T:GemBox.Spreadsheet.DynamicFilter" />.</returns>
      <remarks>
            If this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotFilter.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotFilter.ClearFilter">
      <summary>
            Clears the filter from this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotFilter.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotFilterCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" />s.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotFilterCollection.Count">
      <summary>
            Gets the total number of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" />s in the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilterCollection" />.
            </summary>
      <value>
            The total number of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" />s in the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilterCollection" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotFilterCollection.Item(GemBox.Spreadsheet.PivotTables.PivotField)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> for the specified pivot field.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> for the specified pivot field.
            </value>
      <param name="field">The pivot field of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> to get.</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> for the specified pivot field.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotFilterCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" />s.
            </summary>
      <returns>
            An enumerator that can be used to iterate through the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" />s.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotItem">
      <summary>
            Represents an item in a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </summary>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotItem.Hidden">
      <summary>
            Gets or sets a value indicating whether the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> is hidden.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> is hidden; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotItem.Collapsed">
      <summary>
            Gets or sets whether the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> is collapsed.
            </summary>
      <value>
        <see langword="true" /> if this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> is collapsed; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>To collapse/expand entire <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> use <see cref="M:GemBox.Spreadsheet.PivotTables.PivotField.Collapse(System.Boolean)" /> method.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotItem.PivotField">
      <summary>
            Gets the parent <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </summary>
      <value>
            The parent <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotItem.Name">
      <summary>
            Gets the name of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />.
            </summary>
      <value>
            The name of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotItem.Value">
      <summary>
            Gets the value of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />.
            </summary>
      <value>
            The value of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotItem.Formula">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />'s formula in A1-style notation.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />'s formula in A1-style notation.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated">
      <summary>
            Gets a value indicating whether the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> is a calculated item.
            </summary>
      <value>
        <see langword="true" /> if this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> is a calculated item; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotItemCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s.
            </summary>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> at the specified index.
            </value>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />.</param>
      <returns>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> at the specified index.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> with the specified name.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> with the specified name.
            </value>
      <param name="itemName">The name of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />.</param>
      <returns>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> with the specified name.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s contained in the collection.
            </summary>
      <value>
            The number of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s contained in the collection.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.IndexOf(GemBox.Spreadsheet.PivotTables.PivotItem)">
      <summary>
            Searches for the specified <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> to locate in the collection.</param>
      <returns>The zero-based index of the first occurrence of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> within the entire collection, if found; otherwise, –1.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Contains(GemBox.Spreadsheet.PivotTables.PivotItem)">
      <summary>
            Determines whether an <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> element is in the collection.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> to locate in the collection.</param>
      <returns>
        <see langword="true" /> if <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> is found in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)">
      <summary>
            Adds a calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> at the end of the collection.
            </summary>
      <param name="itemName">The name of the calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />.</param>
      <param name="formula">The formula of the calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> created from non-worksheet data source cannot be modified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="itemName" /> can't be <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="formula" /> can't be <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">Item with the specified name already exists.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)">
      <summary>
            Removes the calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> from the collection.
            </summary>
      <param name="itemName">The name of the calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> created from non-worksheet data source cannot be modified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="itemName" /> can't be <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">Item with the specified name doesn't exist.</exception>
      <exception cref="T:System.ArgumentException">Item with the specified name is not a calculated item.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)">
      <summary>
            Moves the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> at the specified index to a new location in the collection.
            </summary>
      <param name="oldIndex">The zero-based index specifying the location of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="oldIndex" /> is less than 0 or is equal to or greater than item count.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newIndex" /> is less than 0 or is equal to or greater than item count.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.System#Collections#IEnumerable#GetEnumerator">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotItemPosition">
      <summary>
            Represents base item Next/Previous/All position in the base field.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotItemPosition.None">
      <summary>
            No base item position.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotItemPosition.Previous">
      <summary>
            Represents Previous pivot field base item.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotItemPosition.Next">
      <summary>
            Represents Next pivot field base item.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotTable">
      <summary>
            Represents a pivot table.
            </summary>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnGrandTotals">
      <summary>
            Gets or sets a value indicating whether the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> shows grand totals for columns.
            </summary>
      <value>
        <see langword="true" /> to show grand totals for columns; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowGrandTotals">
      <summary>
            Gets or sets a value indicating whether the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> shows grand totals for rows.
            </summary>
      <value>
        <see langword="true" /> to show grand totals for rows; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnHeaderCaption">
      <summary>
            Gets or sets the <see cref="T:System.String" /> to be displayed in column header in compact mode.
            </summary>
      <value>
            The <see cref="T:System.String" /> to be displayed in column header in compact mode.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowHeaderCaption">
      <summary>
            Gets or sets the <see cref="T:System.String" /> to be displayed in row header in compact mode.
            </summary>
      <value>
            The <see cref="T:System.String" /> to be displayed in row header in compact mode.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.FieldListSortAscending">
      <summary>
            Gets or sets a value indicating whether fields in the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> are sorted in non-default order in the field list.
            </summary>
      <value>
        <see langword="true" /> if fields in the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> are sorted in non-default order in the field list; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageOverThenDown">
      <summary>
            Gets or sets a value indicating how the page fields are laid out when there are multiple <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s in the page area.
            </summary>
      <value>
        <see langword="true" /> to lay out page fields over then down; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.ClassicPivotTableLayout">
      <summary>
            Gets or sets a value indicating whether the classic layout should be used for <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> display.
            </summary>
      <value>
        <see langword="true" /> to display <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> with classic layout; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.ShowDrill">
      <summary>
            Gets or sets a value indicating whether drill indicators should be shown.
            </summary>
      <value>
        <see langword="true" /> to show drill indicators; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.BuiltInStyle">
      <summary>
            Gets or sets the built-in style used in the body of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.
            </summary>
      <value>
            The built-in style used in the body of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.StyleOptions">
      <summary>
            Gets or sets the options to be applied to the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> style.
            </summary>
      <value>
            The options to be applied to the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> style.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.ErrorCaption">
      <summary>
            Gets or sets the <see cref="T:System.String" /> to be displayed in cells that contain errors.
            </summary>
      <value>
            The <see cref="T:System.String" /> to be displayed in cells that contain errors.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.MissingCaption">
      <summary>
            Gets or sets the <see cref="T:System.String" /> to be displayed in cells with no value.
            </summary>
      <value>
            The <see cref="T:System.String" /> to be displayed in cells with no value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> associated with this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> associated with this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.Name">
      <summary>
            Gets the name of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.
            </summary>
      <value>
            The name of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.
            </value>
      <exception cref="T:System.ArgumentException">Value cannot be <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.Filter">
      <summary>
            Gets the pivot table <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTableFilter" />.
            </summary>
      <value>
            The pivot table <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTableFilter" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.TopLeftCell">
      <summary>
            Gets the location of this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> in the worksheet.
            </summary>
      <value>
            The location of this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> in the worksheet.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataRange">
      <summary>
            Gets the location of the data in this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.
            </summary>
      <value>
            The location of the data in this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.
            </value>
      <remarks>
            The value is set if the location was read from the file or if the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> was calculated.
            Otherwise the value is <see langword="null" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataPivotField">
      <summary>
        <para>Gets a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> object that represents all the data fields in this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.</para>
        <para>It contains non-<see langword="null" /> value only if there are two or more data fields in the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" />.</para>
        <para>It is only used to add <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataPivotField" /> to the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> row/column area.</para>
        <para>By default, it is added in the row area (automatically, when there are two or more data fields in the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" />).</para>
      </summary>
      <value>
            A <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> object that represents all the data fields in this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> if there are two or more data fields in the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> or <see langword="null" /> otherwise.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields">
      <summary>
            Gets the collection of all (visible and hidden) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
            </summary>
      <value>
            The collection of all (visible and hidden) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields">
      <summary>
            Gets the collection of all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s that are currently showing as row fields.
            </summary>
      <value>
            The collection of all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s that are currently showing as row fields.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields">
      <summary>
            Gets the collection of all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s that are currently shown as column fields.
            </summary>
      <value>
            The collection of all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s that are currently shown as column fields.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields">
      <summary>
            Gets the collection of all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s that are currently showing as page fields.
            </summary>
      <value>
            the collection of all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s that are currently showing as page fields.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields">
      <summary>
            Gets the collection of all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s that are currently shown as data fields.
            </summary>
      <value>
            The collection of all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s that are currently shown as data fields.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate">
      <summary>
            Calculates the values of this <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />. 
            </summary>
      <remarks>
        <para>If the data source or pivot table changed since it was created or loaded from a file, <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" /> needs to be refreshed.</para>
        <para>The following features are currently not supported when calculating pivot tables:</para>
        <list type="bullet">
          <item>
            <description>Calculated pivot fields and pivot items.</description>
          </item>
          <item>
            <description>Grouped fields.</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotTableCollection">
      <summary>
            Represents a collection of all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> objects in the worksheet.
            </summary>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> at the specified index.
            </value>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.</param>
      <returns>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> at the specified index.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s contained in the collection.
            </summary>
      <value>
            The number of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s contained in the collection.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)">
      <summary>
            Adds a new <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> to the collection.
            </summary>
      <param name="pivotCache">The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> on which the new <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is based.</param>
      <param name="tableName">The name of the new <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.</param>
      <param name="cellReference">The location where <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> will be placed in the sheet.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pivotCache" /> can't be <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pivotCache" /> must belong to the parent workbook.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tableName" /> can't be <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cellReference" /> can't be <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,GemBox.Spreadsheet.ExcelCell)">
      <summary>
            Adds a new <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> to the collection.
            </summary>
      <param name="pivotCache">The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> on which the new <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is based.</param>
      <param name="tableName">The name of the new <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.</param>
      <param name="topLeftCell">The location where <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> will be placed in the sheet.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pivotCache" /> can't be <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pivotCache" /> must belong to the parent workbook.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tableName" /> can't be null or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="topLeftCell" /> can't be <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="topLeftCell" /> must belong to the parent sheet.</exception>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="T:GemBox.Spreadsheet.CellRange">cell range</see>, <see cref="T:GemBox.Spreadsheet.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> at the specified index.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or is equal to or greater than <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Clear">
      <summary>
            Removes all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s from the collection.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.System#Collections#IEnumerable#GetEnumerator">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotTableFilter">
      <summary>
            Represents <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> filter settings and provides filter functionality.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTableFilter.PivotTable">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> to filter.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> to filter.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTableFilter.PivotFilters">
      <summary>
            Gets the filter fields.
            </summary>
      <value>
            The filter fields.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableFilter.ByTop10(GemBox.Spreadsheet.PivotTables.PivotField,System.Boolean,System.Boolean,System.Double)">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.Top10Filter" /> to a pivot field.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Top10Filter" /> filters by a top N (percent or number of items).</para>
      </summary>
      <param name="field">The pivot field that a set <see cref="T:GemBox.Spreadsheet.Top10Filter" /> applies to.</param>
      <param name="top">a value indicating whether or not to filter by top order. A <see langword="false" /> value filters by bottom order.</param>
      <param name="percent">A value indicating whether or not to filter by percent value of the pivot field. A <see langword="false" /> value filters by number of items.</param>
      <param name="value">The top or bottom value to use as the filter criteria. For example "Filter by Top 10 Percent" or "Filter by Top 5 Items".</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTableFilter" /> to specify additional filters or to apply filter.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> must be greater than zero.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotFilter.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableFilter.ByTop10(GemBox.Spreadsheet.PivotTables.PivotField,GemBox.Spreadsheet.PivotTables.PivotField,System.Boolean,System.Boolean,System.Double)">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.Top10Filter" /> to a pivot field.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Top10Filter" /> filters by a top N (percent or number of items).</para>
      </summary>
      <param name="field">The pivot field that a set <see cref="T:GemBox.Spreadsheet.Top10Filter" /> applies to.</param>
      <param name="measureField">The pivot field containing summary values being filtered.</param>
      <param name="top">a value indicating whether or not to filter by top order. A <see langword="false" /> value filters by bottom order.</param>
      <param name="percent">A value indicating whether or not to filter by percent value of the pivot field. A <see langword="false" /> value filters by number of items.</param>
      <param name="value">The top or bottom value to use as the filter criteria. For example "Filter by Top 10 Percent" or "Filter by Top 5 Items".</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTableFilter" /> to specify additional filters or to apply filter.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> must be greater than zero.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotFilter.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableFilter.ByCustom(GemBox.Spreadsheet.PivotTables.PivotField,GemBox.Spreadsheet.FilterOperator,System.Object)">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.CustomFilter" /> to a pivot field.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.CustomFilter" /> filters by a one or two conditions (operators and values).</para>
      </summary>
      <param name="field">The pivot field that a set <see cref="T:GemBox.Spreadsheet.Top10Filter" /> applies to.</param>
      <param name="operator">The operator used by the filter condition.</param>
      <param name="value">The value used by the filter condition.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTableFilter" /> to specify additional filters or to apply filter.</returns>
      <exception cref="T:System.NotSupportedException">Value's type is not supported.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotFilter.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableFilter.ByCustom(GemBox.Spreadsheet.PivotTables.PivotField,GemBox.Spreadsheet.PivotTables.PivotField,GemBox.Spreadsheet.FilterOperator,System.Object)">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.CustomFilter" /> to a pivot field.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.CustomFilter" /> filters by a one or two conditions (operators and values).</para>
      </summary>
      <param name="field">The pivot field that a set <see cref="T:GemBox.Spreadsheet.Top10Filter" /> applies to.</param>
      <param name="measureField">The pivot field containing summary values being filtered.</param>
      <param name="operator">The operator used by the filter condition.</param>
      <param name="value">The value used by the filter condition.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTableFilter" /> to specify additional filters or to apply filter.</returns>
      <exception cref="T:System.NotSupportedException">Value's type is not supported.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotFilter.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableFilter.ByCustom(GemBox.Spreadsheet.PivotTables.PivotField,GemBox.Spreadsheet.FilterOperator,System.Object,System.Boolean,GemBox.Spreadsheet.FilterOperator,System.Object)">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.CustomFilter" /> to a pivot field.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.CustomFilter" /> filters by a one or two conditions (operators and values).</para>
      </summary>
      <param name="field">The pivot field that a set <see cref="T:GemBox.Spreadsheet.CustomFilter" /> applies to.</param>
      <param name="operator">The operator used by the (first) filter condition.</param>
      <param name="value">The value used by the (first) filter condition.</param>
      <param name="and">The value indicating whether the two conditions have an "and" relationship. <see langword="true" /> indicates "and" and <see langword="false" /> indicates "or".</param>
      <param name="operator2">The operator used by the second filter condition.</param>
      <param name="value2">The value used by the second filter condition.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTableFilter" /> to specify additional filters or to apply filter.</returns>
      <exception cref="T:System.NotSupportedException">Value's type is not supported.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotFilter.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableFilter.ByCustom(GemBox.Spreadsheet.PivotTables.PivotField,GemBox.Spreadsheet.PivotTables.PivotField,GemBox.Spreadsheet.FilterOperator,System.Object,System.Boolean,GemBox.Spreadsheet.FilterOperator,System.Object)">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.CustomFilter" /> to a pivot field.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.CustomFilter" /> filters by a one or two conditions (operators and values).</para>
      </summary>
      <param name="field">The pivot field that a set <see cref="T:GemBox.Spreadsheet.CustomFilter" /> applies to.</param>
      <param name="measureField">The pivot field containing summary values being filtered.</param>
      <param name="operator">The operator used by the (first) filter condition.</param>
      <param name="value">The value used by the (first) filter condition.</param>
      <param name="and">The value indicating whether the two conditions have an "and" relationship. <see langword="true" /> indicates "and" and <see langword="false" /> indicates "or".</param>
      <param name="operator2">The operator used by the second filter condition.</param>
      <param name="value2">The value used by the second filter condition.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTableFilter" /> to specify additional filters or to apply filter.</returns>
      <exception cref="T:System.NotSupportedException">Value's type is not supported.</exception>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotFilter.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableFilter.ByDynamic(GemBox.Spreadsheet.PivotTables.PivotField,GemBox.Spreadsheet.DynamicFilterType)">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> to a pivot field.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> filters by a dynamic criteria that can change, either with the data itself (e.g., "above average") or with the current system date (e.g., show values for "today").</para>
      </summary>
      <param name="field">The pivot field that a set <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> applies to.</param>
      <param name="dynamicFilterType">The dynamic filter type.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTableFilter" /> to specify additional filters or to apply filter.</returns>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotFilter.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.PivotTables.PivotTableFilter.ByDynamic(GemBox.Spreadsheet.PivotTables.PivotField,GemBox.Spreadsheet.PivotTables.PivotField,GemBox.Spreadsheet.DynamicFilterType)">
      <summary>
        <para>Sets a <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> to a pivot field.</para>
        <para>
          <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> filters by a dynamic criteria that can change, either with the data itself (e.g., "above average") or with the current system date (e.g., show values for "today").</para>
      </summary>
      <param name="field">The pivot field that a set <see cref="T:GemBox.Spreadsheet.DynamicFilter" /> applies to.</param>
      <param name="measureField">The pivot field containing summary values being filtered.</param>
      <param name="dynamicFilterType">The dynamic filter type.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTableFilter" /> to specify additional filters or to apply filter.</returns>
      <remarks>
            If <see cref="T:GemBox.Spreadsheet.PivotTables.PivotFilter" /> already specifies a filter (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotFilter.Filter" /> is not equal to <see langword="null" />), it will be overridden.
            </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotTableSortOptions">
      <summary>
            Represents the sort options of a pivot field.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTableSortOptions.Descending">
      <summary>
            Gets a value indicating whether the sort is descending.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTableSortOptions.DataField">
      <summary>
            Gets a data field that is used to sort the pivot field.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.PivotTableSortOptions.PivotItems">
      <summary>
            Gets the pivot items that specify the row (or column) that will be used to sort the pivot field.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.PivotTableStyleOptions">
      <summary>
            Specifies which options are applied to a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotTableStyleOptions.None">
      <summary>
            Do not apply any option.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotTableStyleOptions.RowHeaders">
      <summary>
            Show row headers for the table.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotTableStyleOptions.ColumnHeaders">
      <summary>
            Show column headers for the table.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotTableStyleOptions.BandedRows">
      <summary>
            Show row stripe formatting for the table.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotTableStyleOptions.BandedColumns">
      <summary>
            Show column stripe formatting for the table.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PivotTables.PivotTableStyleOptions.LastColumn">
      <summary>
            Show the last column.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">
      <summary>
            Represents a worksheet source of <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> data.
            </summary>
      <remarks>
        <para>
          <b>Pivot Tables</b> are used to arrange and aggregate complicated data and drill down on details.
      </para>
        <para>Source of data for Pivot Table can be:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">Worksheet</see> - <see cref="P:GemBox.Spreadsheet.PivotTables.WorksheetSource.CellRange">cell range</see>, <see cref="P:GemBox.Spreadsheet.PivotTables.WorksheetSource.NamedRange">named range</see>, table, etc.
          </description>
          </item>
          <item>
            <description>External - database, OLAP cube, textual file, web query, etc.</description>
          </item>
          <item>
            <description>Other - multiple consolidation ranges in the workbook, another Pivot Table, etc.</description>
          </item>
        </list>
        <note type="note">
          <para>
            <b>GemBox.Spreadsheet</b> currently supports creating only <see cref="T:GemBox.Spreadsheet.PivotTables.WorksheetSource">worksheet source</see>.
        </para>
          <para>All other sources are supported through preservation (to correctly round-trip to XLSX format).</para>
        </note>
        <para>Source of the data for Pivot Table contains following information:</para>
        <list type="bullet">
          <item>
            <description>Scheme - data source fields/columns, its data types, etc.</description>
          </item>
          <item>
            <description>Data - actual data source records.</description>
          </item>
        </list>
        <para>
        Pivot Table does not directly reference its data source, but instead it references a <i>cache of a data source</i>.
        Cache of a data source contains an in-memory copy of data source scheme and, optionally, data and is stored in a workbook which may contain multiple caches of various sources of data.
      </para>
        <para>
        Cache can be updated/refreshed from a data source automatically (for example, when opening a workbook) or on request.
        Cache is used to provide better performance of Pivot Table functionality which requires frequent access to data records and their values and to enable sharing the same data source between multiple Pivot Tables.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> represents cache with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> type.
        Cache source is represented with a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCacheSource" /> type (and its sub-types) and can be accessed from a <see cref="P:GemBox.Spreadsheet.PivotTables.PivotCache.CacheSource" /> property.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> instances are stored in a <see cref="P:GemBox.Spreadsheet.ExcelFile.PivotCaches" /> collection.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> can be refreshed by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
      </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> is created from a <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> with the specified name and the specified cell in the worksheet where it is placed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTableCollection.Add(GemBox.Spreadsheet.PivotTables.PivotCache,System.String,System.String)" /> method.
        <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" /> contains the <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotFields" /> collection which <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> elements can be <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Add(System.Int32)">moved</see> into the following Pivot Table areas:
      </para>
        <list type="bullet">
          <item>
            <description>
              <b>Report Filter Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PageFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Row Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.RowFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Column Axis</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.ColumnFields" /> collection.
          </description>
          </item>
          <item>
            <description>
              <b>Values Area</b> represented by <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection.
          </description>
          </item>
        </list>
        <para>
        Each (non-calculated) <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can contain zero or more <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which are used for filtering and grouping by a specific value.
      </para>
        <para>
        Except using fields defined in Pivot Table data source (more precisely, in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />) which cannot be removed, Pivot Table can also define <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s and <i>calculated</i> <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s which use a formula to specify their values.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotFieldCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotField.IsCalculated" /> tells if a field is calculated or is a field from the data source.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is automatically moved to a <b>Values Area</b> (<see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.DataFields" /> collection) and only <b>Values Area</b> can contain calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s.
        Calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" /> can be added using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.AddCalculated(System.String,System.String)" /> method and removed using a <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.RemoveCalculated(System.String)" /> method. Property <see cref="P:GemBox.Spreadsheet.PivotTables.PivotItem.IsCalculated" /> tells if an item is calculated.
      </para>
        <note type="note">
          <para>
          If calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" /> is added/removed in one <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />, then it is also added/removed from all other <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which reference the same <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />.
        </para>
          <para>
          Since adding/removing calculated <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s means changing the data scheme, which is defined in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" />, actual modification is made in <see cref="T:GemBox.Spreadsheet.PivotTables.PivotCache" /> and propagated to all <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s which are referencing it.
        </para>
        </note>
        <para>
          <see cref="T:GemBox.Spreadsheet.PivotTables.PivotField" />s can be re-ordered in a specific area using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotAreaFieldCollection.Move(System.Int32,System.Int32)" /> method. <see cref="T:GemBox.Spreadsheet.PivotTables.PivotItem" />s can be re-ordered using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotItemCollection.Move(System.Int32,System.Int32)" /> method.
      </para>
        <para>
          <b>GemBox.Spreadsheet</b> provides functionality to calculate <see cref="T:GemBox.Spreadsheet.PivotTables.PivotTable" />s by using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method which updates the cells in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />. The <see cref="M:GemBox.Spreadsheet.PivotTables.PivotTable.Calculate" /> method uses values stored in <see cref="P:GemBox.Spreadsheet.PivotTables.PivotTable.PivotCache" />. If the cache is currently empty, or the values are outdated (because the underlying data source has changed), the cache needs to be refreshed using the <see cref="M:GemBox.Spreadsheet.PivotTables.PivotCache.Refresh" /> method.
	  </para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-create-excel-pivot-tables/114">Create Excel Pivot Tables in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.WorksheetSource.SourceType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.PivotTables.PivotCacheSourceType.Worksheet" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.PivotTables.PivotCacheSourceType.Worksheet" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.WorksheetSource.CellRange">
      <summary>
            Gets the cell range that is the source of the data.
            </summary>
      <value>
            The cell range that is the source of the data.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.PivotTables.WorksheetSource.NamedRange">
      <summary>
            Gets the named range that is the source of the data.
            </summary>
      <value>
            The named range that is the source of the data.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.PixelFormat">
      <summary>
            An enumeration of supported pixel formats when saving an <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to an image using an <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Default">
      <summary>
            Pixel format that is best suited for the particular operation.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Bgr101010">
      <summary>
            Bgr101010 is a sRGB format with 32 bits per pixel (BPP). Each color channel (blue, green, and red) is allocated 10 bits per pixel (BPP).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Bgr24">
      <summary>
            Bgr24 is a sRGB format with 24 bits per pixel (BPP). Each color channel (blue, green, and red) is allocated 8 bits per pixel (BPP).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Bgr32">
      <summary>
            Bgr32 is a sRGB format with 32 bits per pixel (BPP). Each color channel (blue, green, and red) is allocated 8 bits per pixel (BPP).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Bgr555">
      <summary>
            Bgr555 is a sRGB format with 16 bits per pixel (BPP). Each color channel (blue, green, and red) is allocated 5 bits per pixel (BPP).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Bgr565">
      <summary>
            Bgr565 is a sRGB format with 16 bits per pixel (BPP). Each color channel (blue, green, and red) is allocated 5, 6, and 5 bits per pixel (BPP) respectively.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Bgra32">
      <summary>
            Bgra32 is a sRGB format with 32 bits per pixel (BPP). Each channel (blue, green, red, and alpha) is allocated 8 bits per pixel (BPP).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.BlackWhite">
      <summary>
            Black and white pixel format which displays one bit of data per pixel as either black or white.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Cmyk32">
      <summary>
            Cmyk32 pixel format which displays 32 bits per pixel (BPP) with each color channel (cyan, magenta, yellow, and black) allocated 8 bits per pixel (BPP).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Gray16">
      <summary>
            Gray16 pixel format which displays a 16 bits-per-pixel grayscale channel, allowing 65536 shades of gray. This format has a gamma of 1.0.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Gray2">
      <summary>
            Gray2 pixel format which displays a 2 bits-per-pixel grayscale channel, allowing 4 shades of gray.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Gray32Float">
      <summary>
            Gray32Float displays a 32 bits per pixel (BPP) grayscale channel, allowing over 4 billion shades of gray. This format has a gamma of 1.0.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Gray4">
      <summary>
            Gray4 pixel format which displays a 4 bits-per-pixel grayscale channel, allowing 16 shades of gray.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Gray8">
      <summary>
            Gray8 pixel format which displays an 8 bits-per-pixel grayscale channel, allowing 256 shades of gray.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Pbgra32">
      <summary>
            Pbgra32 is a sRGB format with 32 bits per pixel (BPP). Each channel (blue, green, red, and alpha) is allocated 8 bits per pixel (BPP). 
            Each color channel is pre-multiplied by the alpha value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Prgba128Float">
      <summary>
            Prgba128Float is a ScRGB format with 128 bits per pixel (BPP). Each channel (red, green, blue, and alpha) is allocated 32 bits per pixel (BPP). 
            Each color channel is pre-multiplied by the alpha value. This format has a gamma of 1.0.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Prgba64">
      <summary>
            Prgba64 is a sRGB format with 64 bits per pixel (BPP). Each channel (blue, green, red, and alpha) is allocated 32 bits per pixel (BPP). 
            Each color channel is pre-multiplied by the alpha value. This format has a gamma of 1.0.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Rgb128Float">
      <summary>
            Rgb128Float is a ScRGB format with 128 bits per pixel (BPP). Each color channel is allocated 32 BPP. This format has a gamma of 1.0.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Rgb24">
      <summary>
            Rgb24 is a sRGB format with 24 bits per pixel (BPP). Each color channel (red, green, and blue) is allocated 8 bits per pixel (BPP).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Rgb48">
      <summary>
            Rgb48 is a sRGB format with 48 bits per pixel (BPP). Each color channel (red, green, and blue) is allocated 16 bits per pixel (BPP). This format has a gamma of 1.0.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Rgba128Float">
      <summary>
            Rgba128Float is a ScRGB format with 128 bits per pixel (BPP). Each color channel is allocated 32 bits per pixel (BPP). This format has a gamma of 1.0.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PixelFormat.Rgba64">
      <summary>
            Rgba64 is an sRGB format with 64 bits per pixel (BPP). Each channel (red, green, blue, and alpha) is allocated 16 bits per pixel (BPP). This format has a gamma of 1.0.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PositioningMode">
      <summary>
            Option that specify the moving and sizing behavior of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) in the worksheet. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PositioningMode.FreeFloating">
      <summary>
        <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) will not move nor size with cells.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PositioningMode.Move">
      <summary>
        <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) will move but not size with cells.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize">
      <summary>
        <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) will move and size with cells.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PrintOptions">
      <summary>
            Specifies information about how a spreadsheet is printed.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-print-excel/451">Print Excel in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-print-excel/451">Print Excel in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PrintOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.PrintOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.PrintOptions" /> class by using an XML stream (that contains a PrintTicket document) that complies with the XML Print Schema.
            </summary>
      <param name="xmlStream">An XML stream that describes a print job and conforms to the Print Schema.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlStream" /> is <see langword="null" />.</exception>
      <seealso cref="T:System.Printing.PrintTicket" />
      <seealso cref="M:System.Printing.PrintTicket.GetXmlStream" />
      <seealso href="https://docs.microsoft.com/en-us/windows/win32/printdocs/printschema">Print Schema</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-print-excel/451">Print Excel in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.CopyCount">
      <summary>
            Gets or sets the number of copies of the document to print.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.PagesPerSheet">
      <summary>
            Gets or sets the number of pages that print on each printed side of a sheet of paper.
            </summary>
      <remarks>
            Only a limited range of 1, 2, 4, 6, 8 or 16 pages per sheet side are supported.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.FromPage">
      <summary>
            Gets or sets the page index of the first page to print.
            </summary>
      <remarks>
            Spreadsheet pages are zero-indexed meaning that first page in the spreadsheet has index 0 (zero).
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.ToPage">
      <summary>
            Gets or sets the index of the last page to print.
            </summary>
      <remarks>
            Use <see cref="F:System.Int32.MaxValue" /> value to print to the last page. 
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.MetafileScaleFactor">
      <summary>
      Gets or sets the scaling factor for rendering metafile (WMF and EMF) images. Greater scaling factor improves quality but also increases file size. Default value is 1.
    </summary>
      <value>
      The metafile scale factor for rendering metafile (WMF and EMF) images.
    </value>
      <remarks>
        <para>Windows Metafile Format (WMF) and Enhanced Metafile Format (EMF) are vector image formats which contain a series of graphics drawing commands usually executed in Windows GDI layer.</para>
        <para>Metafile drawing commands could also be executed in PDF (or XPS) file which is also vector format, but for that Metafile drawing commands would have to be converted to PDF drawing commands.</para>
        <para>GemBox.Document currently doesn't perform this conversion of drawing commands, instead it uses Windows GDI to execute Metafile drawing commands into bitmap which is then encoded to PNG format and embedded into PDF file.</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.PrintOptions.MetafileScaleFactor" /> specifies the size of the bitmap surface, based from the original Metafile surface size, into which Metafile should be drawn / rasterized.
      </para>
        <para>PDF viewer will still scale the bitmap to the original Metafile size, but if the page is zoomed or viewed on a larger surface, quality of the image will be better since it contains more pixels / dots which will become visible while PDF viewer scales down the image.</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.PrintOptions.MetafileScaleFactor" /> increases the quality of the Metafile image in PDF file, but it also increases the size of the PDF file because greater <see cref="P:GemBox.Spreadsheet.PrintOptions.MetafileScaleFactor" /> means greater bitmap surface and more space to store bitmap pixel / color data.
        PNG encoding / compression helps in reducing the space requirement and for complex Metafiles (with a lot of drawing instructions), <see cref="P:GemBox.Spreadsheet.PrintOptions.MetafileScaleFactor" /> of 5 or even greater, might not incur any space overhead relative to the original (complex) Metafile.
      </para>
        <para>
        Default value for <see cref="P:GemBox.Spreadsheet.PrintOptions.MetafileScaleFactor" /> is 1.
      </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.DocumentName">
      <summary>
        <para>Gets or sets the name of the printed document in the print queue.</para>
        <para>Default value is '<b>Spreadsheet</b>'.</para>
      </summary>
      <value>
            The name of the printed document in the print queue.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.ProtectedRange">
      <summary>
            Represents a range of cells to be protected.
            </summary>
      <remarks>
        <para>Ranges listed here are protected only when the sheet protection is ON and
            the cell is flagged as being locked.If no password is specified here, then read/write permissions are
            automatically given to all users, regardless of additional security descriptor information. In other words, the
            security descriptor information (specific types of access) at the user level is only applied if a password for this
            range is specified.</para>
        <para>When a password is specified, then users not listed specifically as having access should be prompted with a
            password.If that user supplies the correct password, then they can edit the range or cell in question.This
            protection is optional and can be ignored by applications that choose not to support this functionality.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.ProtectedRange.Title">
      <summary>
            Gets or sets the <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> title.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> title.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ProtectedRange.RefersToCells">
      <summary>
            Gets or sets the range to be protected.
            </summary>
      <value>
            The range to be protected.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ProtectedRange.SetPassword(System.String)">
      <summary>
            Sets the <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> password.
            </summary>
      <param name="password">The <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> password.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ProtectedRange.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> instance.
            </returns>
      <remarks>
            This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).
            </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.ProtectedRangeCollection">
      <summary>
            Represents a collection of all protected ranges on the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ProtectedRangeCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.ProtectedRange" />s actually contained in the <see cref="T:GemBox.Spreadsheet.ProtectedRangeCollection" />.
            </summary>
      <value>
            The number of <see cref="T:GemBox.Spreadsheet.ProtectedRange" />s actually contained in the <see cref="T:GemBox.Spreadsheet.ProtectedRangeCollection" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ProtectedRangeCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> at the specified index.
            </value>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> to get.</param>
      <returns>
            The <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> at the specified index.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.ProtectedRangeCollection.Count" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ProtectedRangeCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> with the specified title or <see langword="null" />.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> with the specified title or <see langword="null" />.
            </value>
      <param name="title">The <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> title.</param>
      <returns>
            The <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> with the specified title or <see langword="null" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ProtectedRangeCollection.AddNew(System.String,System.String,System.String)">
      <summary>
            Adds the new <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> to the current <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <param name="title">The <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> title.</param>
      <param name="refersToCells">A reference to a range of cells that should be protected.</param>
      <param name="password">The optional password.</param>
      <returns>
            A new <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> added to the current <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="title" /> or <paramref name="refersToCells" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ProtectedRangeCollection.AddNew(System.String,System.String)">
      <summary>
            Adds the new <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> to the current <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <param name="title">The <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> title.</param>
      <param name="refersToCells">A reference to a range of cells that should be protected.</param>
      <returns>
            A new <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> added to the current <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="title" /> or <paramref name="refersToCells" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ProtectedRangeCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> at the specified index of the <see cref="T:GemBox.Spreadsheet.ProtectedRangeCollection" />.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.ProtectedRange" /> to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.ProtectedRangeCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ProtectedRangeCollection.Clear">
      <summary>
            Removes all <see cref="T:GemBox.Spreadsheet.ProtectedRange" />s from the current <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ProtectedRangeCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.ProtectedRangeCollection" />.
            </summary>
      <returns>
            An enumerator for the <see cref="T:GemBox.Spreadsheet.ProtectedRangeCollection" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ProtectedRangeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.ProtectedRangeCollection" />.
            </summary>
      <returns>
            An enumerator for the <see cref="T:GemBox.Spreadsheet.ProtectedRangeCollection" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.RangeIndexingMode">
      <summary>
            Indexing modes used by <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </summary>
      <seealso cref="P:GemBox.Spreadsheet.CellRange.IndexingMode" />
    </member>
    <member name="F:GemBox.Spreadsheet.RangeIndexingMode.Rectangular">
      <summary>
            Rectangular indexing mode. Rectangular cell range is higher than one row and wider than one column.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RangeIndexingMode.Horizontal">
      <summary>
            Horizontal indexing mode. Horizontal cell range has 
            <see cref="P:GemBox.Spreadsheet.CellRange.Height">CellRange.Height</see> equal to 1.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RangeIndexingMode.Vertical">
      <summary>
            Vertical indexing mode. Vertical cell range has 
            <see cref="P:GemBox.Spreadsheet.CellRange.Width">CellRange.Width</see> equal to 1.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.RemoveShiftDirection">
      <summary>
            Represents the possible cell remove shift directions.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RemoveShiftDirection.Left">
      <summary>
            Shift cells left.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RemoveShiftDirection.Up">
      <summary>
            Shift cells up.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SaveOptions">
      <summary>
            Represents a base class for saving options of various file formats.
            </summary>
      <remarks>
            Following classes inherit from this base class:
            <list type="bullet"><item><description><see cref="T:GemBox.Spreadsheet.XlsxSaveOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.XlsbSaveOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.XlsSaveOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.OdsSaveOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.CsvSaveOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.FixedWidthSaveOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.HtmlSaveOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.PdfSaveOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.XpsSaveOptions" /></description></item><item><description><see cref="T:GemBox.Spreadsheet.ImageSaveOptions" /></description></item></list></remarks>
      <seealso cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)" />
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.XlsxDefault">
      <summary>
            Gets the default options for saving to XLSX file format (Microsoft Excel Open XML Spreadsheet; Excel 2007 and later).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.XlsbDefault">
      <summary>
            Gets the default options for saving to XLSB file format (Microsoft Excel Binary File Format).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.XlsDefault">
      <summary>
            Gets the default options for saving to, XLS file format (Microsoft Excel Spreadsheet format; Excel 2003 and prior versions) .
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.OdsDefault">
      <summary>
            Gets the default options for saving to OpenDocument Spreadsheet file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.CsvDefault">
      <summary>
            Gets the default options for saving to Character Separated Values file format.
            </summary>
      <remarks>
        <b>MS Excel</b> uses ';' as default if current culture uses ',' for decimal separator. <b>GemBox.Spreadsheet</b> always uses ','.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.TxtDefault">
      <summary>
            Gets the default options for saving to Tab delimited file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.PdfDefault">
      <summary>
            Gets the default options for saving to Portable Document Format file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.HtmlDefault">
      <summary>
            Gets the default options for saving to HyperText Markup Language File format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.XpsDefault">
      <summary>
            Gets the default options for saving to XML Paper Specification file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.ImageDefault">
      <summary>
            Gets the default options for saving to image formats.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.Limitations">
      <summary>
            Gets limitations for saving to a file formats.
            </summary>
      <remarks>
            This is the table for all limitations of each format:
            <para><font face="Arial" size="1"><table border="1" cellpadding="5" cellspacing="0"><tr><td></td><th>Rows</th><th>Columns</th><th>Colors</th><th>CellStyles</th></tr><tr><th>XLSX</th><td>1048576</td><td>16384</td><td>16000000</td><td>64000</td></tr><tr><th>XLS</th><td>65536</td><td>256</td><td>56</td><td>3979</td></tr><tr><th>ODS</th><td>1048576</td><td>16384</td><td>16000000</td><td>64000</td></tr><tr><th>CSV</th><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td></tr><tr><th>TXT</th><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td></tr><tr><th>HTML</th><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td></tr><tr><th>PDF</th><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td></tr><tr><th>XPS</th><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td></tr><tr><th>IMAGE</th><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td><td><see cref="F:System.Int32.MaxValue" /></td></tr></table></font></para></remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.ContentType">
      <summary>
            Gets the content-type for this specific file format as defined in the RFC 2616.
            </summary>
      <value>
            The content-type for this specific file format.
            </value>
      <seealso href="https://www.ietf.org/rfc/rfc2616.txt">RFC 2616</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.SaveOptions.Save(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.SaveOptions.SaveToDirectoryCore(GemBox.Spreadsheet.ExcelFile,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.ScriptPosition">
      <summary>
            Defines the possible settings for vertical alignment of a text and is used in <see cref="P:GemBox.Spreadsheet.ExcelFont.ScriptPosition" /> member to get superscript or subscript text without altering the font size.
            </summary>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelFont.ScriptPosition" />
    </member>
    <member name="F:GemBox.Spreadsheet.ScriptPosition.Normal">
      <summary>
            Returns the text to the baseline, default, alignment, and returns it to the original font size.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ScriptPosition.Superscript">
      <summary>
        <para>Specifies that text should be superscript.</para>
        <para>Raises the text above the baseline and changes it to a smaller size.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ScriptPosition.Subscript">
      <summary>
        <para>Specifies that text should be subscript.</para>
        <para>Lowers the text below the baseline and changes it to a smaller size.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Security.Certificate">
      <summary>
            Represents an <see href="https://tools.ietf.org/html/rfc5280#section-4">X.509 certificate</see> sent to others so that they can verify your digital signature with a public key contained in the certificate.
            </summary>
      <remarks>
        <para>
          <b>GemBox.Spreadsheet</b> doesn't use <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class to represent a certificate because <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> creates a file that holds the certificate with the public key (in various locations on a hard drive) and on some operating systems and platforms that file is not deleted unless <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset" /> method is called.
            This creation of a file prevents usages of certificates in <b>Medium Trust</b>.</para>
        <para>Another reason why <b>GemBox.Spreadsheet</b> abstracts a certificate with a <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> class instead of using <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> directly is to enable different implementations of a certificate. For example, either <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> implementation from .NET or <see href="https://github.com/bcgit/bc-csharp/blob/master/crypto/src/x509/X509Certificate.cs">Org.BouncyCastle.X509.X509Certificate</see> implementation from <see href="https://github.com/bcgit/bc-csharp">Bouncy Castle</see> could be used.</para>
      </remarks>
      <seealso href="https://tools.ietf.org/html/rfc5280">RFC 5280: Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.Security.Certificate.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> class from a file with the specified file name.
            </summary>
      <param name="fileName">The name of a certificate file.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Security.Certificate.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> class from the specified source.</para>
        <para>The certificate source is an instance of a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</para>
      </summary>
      <param name="source">The certificate source that is an instance of a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="source" /> parameter is not an instance of a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Security.Certificate.Subject">
      <summary>
            Gets the subject distinguished name from the certificate.
            </summary>
      <value>
            The subject distinguished name from the certificate.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Security.Certificate.SubjectCommonName">
      <summary>
            Gets the value of a <b>Common Name</b> attribute from <see cref="P:GemBox.Spreadsheet.Security.Certificate.Subject" />'s distinguished name.
            </summary>
      <value>
            The value of a <b>Common Name</b> attribute from <see cref="P:GemBox.Spreadsheet.Security.Certificate.Subject" />'s distinguished name.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Security.Certificate.GetRawData">
      <summary>
            Gets the copy of raw data of a <see cref="T:GemBox.Spreadsheet.Security.Certificate" />.
            </summary>
      <returns>
            The copy of raw data of the <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> as a byte array.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Security.Certificate.Equals(GemBox.Spreadsheet.Security.Certificate)">
      <summary>
            Determines whether the specified <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> is equal to this <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> instance.
            </summary>
      <param name="other">The <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> to compare with this <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> is equal to this <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Security.Certificate.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Security.Certificate.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> instance.
            </summary>
      <returns>
            A hash code for this <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Security.Certificate.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Security.Certificate" /> instance.
            </returns>
      <remarks>
            This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).
            </remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.Security.DigitalSignatureCommitmentType">
      <summary>
            Represents a commitment type when signing the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Security.DigitalSignatureCommitmentType.None">
      <summary>
            No commitment type
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Security.DigitalSignatureCommitmentType.Created">
      <summary>
            Created this document
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Security.DigitalSignatureCommitmentType.Approved">
      <summary>
            Approved this document
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Security.DigitalSignatureCommitmentType.CreatedAndApproved">
      <summary>
            Created and approved this document
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SelectionType">
      <summary>
            Defines the selection which will be saved or printed.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SelectionType.ActiveSheet">
      <summary>
            Select <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SelectionType.EntireFile">
      <summary>
            Select all sheets in <see cref="T:GemBox.Spreadsheet.ExcelFile" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SheetType">
      <summary>
            Specifies the sheet type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SheetType.Worksheet">
      <summary>
            The most common type of sheet is the worksheet, which is represented as a grid of cells.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SheetType.Chart">
      <summary>
            Represents a chart that is stored in its own sheet.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SheetVisibility">
      <summary>
            Script positions used in <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Visibility">ExcelWorksheet.Visibility</see>.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SheetVisibility.Visible">
      <summary>
            Sheet is visible.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SheetVisibility.Hidden">
      <summary>
            Sheet is hidden, but is displayed in unhide dialog.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SheetVisibility.VeryHidden">
      <summary>
            Sheet is very hidden and can be made visible only programmatically.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SortLevel">
      <summary>
            Represents sort settings for a single sort level.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/excel-sort/113">Excel Sorting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.SortLevel.Descending">
      <summary>
        <para>Gets or sets a value indicating whether to sort the values in the descending order.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> to sort the values in the descending order; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.SortLevel.ColumnRowIndex">
      <summary>
        <para>Gets or sets the column (or the row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) index relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" /> that this sort level applies to.</para>
        <para>Value is equal to or greater than zero and less than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> (or <see cref="P:GemBox.Spreadsheet.CellRange.Height" />, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) of the <see cref="P:GemBox.Spreadsheet.SortState.Range" />.</para>
      </summary>
      <value>
            The column (or the row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) index relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" /> that this sort level applies to.
            </value>
      <exception cref="T:System.InvalidOperationException">Sort level is removed from the sort state.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> (or <see cref="P:GemBox.Spreadsheet.CellRange.Height" />, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) of the <see cref="P:GemBox.Spreadsheet.SortState.Range" />.</exception>
      <exception cref="T:System.ArgumentException">Column/row at the specified index is being sorted by the same criteria more than once. Delete the duplicate sort criteria and try again.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.SortLevel.CustomList">
      <summary>
        <para>Gets the custom list by which order of items to sort by.</para>
        <para>If <see cref="P:GemBox.Spreadsheet.SortLevel.Descending" /> is set to <see langword="true" />, then sorting will be performed based on the reverse order of items.</para>
      </summary>
      <value>
            The custom list by which order of items to sort by.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.SortLevel.Comparison">
      <summary>
        <para>Gets or sets the comparison method that compares two <see cref="T:GemBox.Spreadsheet.ExcelCell" />s.</para>
        <para>Default value is default comparison method based on the settings of this sort level.</para>
      </summary>
      <value>
            The comparison method that compares two <see cref="T:GemBox.Spreadsheet.ExcelCell" />s.
            </value>
      <remarks>
        <para>Use this property to override default comparison method based on the settings of this sort level.</para>
        <para>This member is not loaded from and saved to XLSX file since it is not supported by <b>Office Open XML</b> specification.
            It is used to customize <b>GemBox.Spreadsheet</b> functionality.</para>
        <para>If set to <see langword="null" />, reverts to default comparison method based on the settings of this sort level.</para>
      </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.SortLevel.SetCustomList(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        <para>Sets the custom list by which order of items to sort by.</para>
      </summary>
      <param name="items">The custom list by which order of items to sort by.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.SortLevel.SetCustomList(System.String[])">
      <summary>
        <para>Sets the custom list by which order of items to sort by.</para>
      </summary>
      <param name="items">The custom list by which order of items to sort by.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.SortLevel.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.SortLevel" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.SortLevel" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.SortLevelCollection">
      <summary>
            Represents a collection of sort levels.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SortLevelCollection.Count">
      <summary>
            Gets the number of sort levels actually contained in the <see cref="T:GemBox.Spreadsheet.SortLevelCollection" />.
            </summary>
      <value>
            The number of sort levels actually contained in the <see cref="T:GemBox.Spreadsheet.SortLevelCollection" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.SortLevelCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.SortLevel" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.SortLevel" /> at the specified index.
            </value>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.SortLevel" /> to get.</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.SortLevel" /> at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.SortLevelCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SortLevelCollection.Get(System.Int32)">
      <summary>
            Gets the sort level applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" />) or <see langword="null" /> if such sort level doesn't exist.
            </summary>
      <param name="columnRowIndex">The index of a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" /> that a returned <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <returns>The sort level applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" />) or <see langword="null" /> if such sort level doesn't exist.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SortLevelCollection.Insert(System.Int32,System.Int32)">
      <summary>
            Inserts a new <see cref="T:GemBox.Spreadsheet.SortLevel" /> applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index into the <see cref="T:GemBox.Spreadsheet.SortLevelCollection" /> at the specified index.
            </summary>
      <param name="index">The zero-based index at which new <see cref="T:GemBox.Spreadsheet.SortLevel" /> should be inserted.</param>
      <param name="columnRowIndex">Index of the column (or the row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" /> that an inserted <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <returns>A new <see cref="T:GemBox.Spreadsheet.SortLevel" /> applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.SortLevelCollection.Count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnRowIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> (or <see cref="P:GemBox.Spreadsheet.CellRange.Height" />, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) of the <see cref="P:GemBox.Spreadsheet.SortState.Range" />.</exception>
      <exception cref="T:System.ArgumentException">Column/row at the specified index is being sorted by the same criteria more than once. Delete the duplicate sort criteria and try again.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SortLevelCollection.Add(System.Int32)">
      <summary>
            Adds a new <see cref="T:GemBox.Spreadsheet.SortLevel" /> applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index into the <see cref="T:GemBox.Spreadsheet.SortLevelCollection" />.
            </summary>
      <param name="columnRowIndex">Index of the column (or the row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <returns>A new <see cref="T:GemBox.Spreadsheet.SortLevel" /> applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnRowIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> (or <see cref="P:GemBox.Spreadsheet.CellRange.Height" />, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) of the <see cref="P:GemBox.Spreadsheet.SortState.Range" />.</exception>
      <exception cref="T:System.ArgumentException">Column/row at the specified index is being sorted by the same criteria more than once. Delete the duplicate sort criteria and try again.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SortLevelCollection.Remove(GemBox.Spreadsheet.SortLevel)">
      <summary>
            Removes the specific <see cref="T:GemBox.Spreadsheet.SortLevel" /> from the <see cref="T:GemBox.Spreadsheet.SortLevelCollection" />.
            </summary>
      <param name="sortLevel">The <see cref="T:GemBox.Spreadsheet.SortLevel" /> to remove from the <see cref="T:GemBox.Spreadsheet.SortLevelCollection" />.</param>
      <returns>
        <see langword="true" /> if <see cref="T:GemBox.Spreadsheet.SortLevel" /> is successfully removed; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <see cref="T:GemBox.Spreadsheet.SortLevel" /> was <see langword="null" /> or was not found in the original <see cref="T:GemBox.Spreadsheet.SortLevelCollection" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SortLevelCollection.Remove(System.Int32)">
      <summary>
            Removes a <see cref="T:GemBox.Spreadsheet.SortLevel" /> applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index from the <see cref="T:GemBox.Spreadsheet.SortLevelCollection" />.
            </summary>
      <param name="columnRowIndex">Index of the column (or the row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" /> that a removed <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <returns>
        <see langword="true" /> if <see cref="T:GemBox.Spreadsheet.SortLevel" /> is successfully removed; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <see cref="T:GemBox.Spreadsheet.SortLevel" /> with the specified column/row index was not found in the original <see cref="T:GemBox.Spreadsheet.SortLevelCollection" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SortLevelCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:GemBox.Spreadsheet.SortLevel" /> at the specified index of the <see cref="T:GemBox.Spreadsheet.SortLevelCollection" />.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.SortLevel" /> to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.SortLevelCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SortLevelCollection.Move(System.Int32,System.Int32)">
      <summary>
            Moves the <see cref="T:GemBox.Spreadsheet.SortLevel" /> at the specified index to a new location in the <see cref="T:GemBox.Spreadsheet.SortLevelCollection" />.
            </summary>
      <param name="oldIndex">The zero-based index specifying the location of the <see cref="T:GemBox.Spreadsheet.SortLevel" /> to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the <see cref="T:GemBox.Spreadsheet.SortLevel" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="oldIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.SortLevelCollection.Count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.SortLevelCollection.Count" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SortLevelCollection.Clear">
      <summary>
            Removes all <see cref="T:GemBox.Spreadsheet.SortLevel" />s from the <see cref="T:GemBox.Spreadsheet.SortLevelCollection" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SortLevelCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the sort levels.
            </summary>
      <returns>
            An enumerator that can be used to iterate through the sort levels.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SortLevelCollection.System#Collections#IEnumerable#GetEnumerator">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.SortState">
      <summary>
            Represents sort settings and provides sort functionality.
            </summary>
      <remarks>
        <para>Use <see cref="M:GemBox.Spreadsheet.CellRange.Sort(System.Boolean)" /> method to create or get a <see cref="T:GemBox.Spreadsheet.SortState" /> instance.</para>
        <para>Active <see cref="T:GemBox.Spreadsheet.SortState" /> is stored in the parent worksheet (<see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Sort" />) and is loaded from and saved to XLSX file.</para>
      </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/excel-sort/113">Excel Sorting example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.SortState.Range">
      <summary>
            Gets the range to sort.
            </summary>
      <value>
            The range to sort.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.SortState.Levels">
      <summary>
            Gets the sort levels.
            </summary>
      <value>
            The sort levels.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.SortState.CaseSensitive">
      <summary>
        <para>Gets or sets a value indicating whether the sort is case-sensitive.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> if the sort is case-sensitive; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.SortState.LeftToRight">
      <summary>
        <para>Gets or sets a value indicating whether to sort from left to right (whether to sort columns instead of rows).</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> to sort from left to right (to sort columns); otherwise, <see langword="false" /> to sort from top to bottom (to sort rows).
            </value>
      <exception cref="T:System.InvalidOperationException">Sorting columns is not supported for the current sort state.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SortState.By(System.Int32)">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" />).
            </summary>
      <param name="columnRowIndex">The index of a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.SortState" /> to specify additional sort levels or to apply sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnRowIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> (or <see cref="P:GemBox.Spreadsheet.CellRange.Height" />, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) of the <see cref="P:GemBox.Spreadsheet.SortState.Range" />.</exception>
      <exception cref="T:System.ArgumentException">Column/row at the specified index is being sorted by the same criteria more than once. Delete the duplicate sort criteria and try again.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SortState.By(System.Int32,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" />) and with the specified custom list by which order of items to sort by.
            </summary>
      <param name="columnRowIndex">The index of a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <param name="customList">The custom list by which order of items to sort by.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.SortState" /> to specify additional sort levels or to apply sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnRowIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> (or <see cref="P:GemBox.Spreadsheet.CellRange.Height" />, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) of the <see cref="P:GemBox.Spreadsheet.SortState.Range" />.</exception>
      <exception cref="T:System.ArgumentException">Column/row at the specified index is being sorted by the same criteria more than once. Delete the duplicate sort criteria and try again.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SortState.By(System.Int32,System.String[])">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" />) and with the specified custom list by which order of items to sort by.
            </summary>
      <param name="columnRowIndex">The index of a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <param name="customList">The custom list by which order of items to sort by.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.SortState" /> to specify additional sort levels or to apply sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnRowIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> (or <see cref="P:GemBox.Spreadsheet.CellRange.Height" />, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) of the <see cref="P:GemBox.Spreadsheet.SortState.Range" />.</exception>
      <exception cref="T:System.ArgumentException">Column/row at the specified index is being sorted by the same criteria more than once. Delete the duplicate sort criteria and try again.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SortState.By(System.Int32,System.Boolean)">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" />) and with the specified order to sort by.
            </summary>
      <param name="columnRowIndex">The index of a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <param name="descending">
        <see langword="true" /> to sort the values in the descending order; otherwise, <see langword="false" />.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.SortState" /> to specify additional sort levels or to apply sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnRowIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> (or <see cref="P:GemBox.Spreadsheet.CellRange.Height" />, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) of the <see cref="P:GemBox.Spreadsheet.SortState.Range" />.</exception>
      <exception cref="T:System.ArgumentException">Column/row at the specified index is being sorted by the same criteria more than once. Delete the duplicate sort criteria and try again.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SortState.By(System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" />) and with the specified order and custom list by which order of items to sort by.
            </summary>
      <param name="columnRowIndex">The index of a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <param name="descending">
        <see langword="true" /> to sort the values in the descending order; otherwise, <see langword="false" />.</param>
      <param name="customList">The custom list by which order of items to sort by.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.SortState" /> to specify additional sort levels or to apply sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnRowIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> (or <see cref="P:GemBox.Spreadsheet.CellRange.Height" />, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) of the <see cref="P:GemBox.Spreadsheet.SortState.Range" />.</exception>
      <exception cref="T:System.ArgumentException">Column/row at the specified index is being sorted by the same criteria more than once. Delete the duplicate sort criteria and try again.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SortState.By(System.Int32,System.Boolean,System.String[])">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" />) and with the specified order and custom list by which order of items to sort by.
            </summary>
      <param name="columnRowIndex">The index of a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <param name="descending">
        <see langword="true" /> to sort the values in the descending order; otherwise, <see langword="false" />.</param>
      <param name="customList">The custom list by which order of items to sort by.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.SortState" /> to specify additional sort levels or to apply sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnRowIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> (or <see cref="P:GemBox.Spreadsheet.CellRange.Height" />, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) of the <see cref="P:GemBox.Spreadsheet.SortState.Range" />.</exception>
      <exception cref="T:System.ArgumentException">Column/row at the specified index is being sorted by the same criteria more than once. Delete the duplicate sort criteria and try again.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SortState.By(System.Int32,System.Comparison{GemBox.Spreadsheet.ExcelCell})">
      <summary>
            Adds a <see cref="T:GemBox.Spreadsheet.SortLevel" /> applied to a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) with the specified index (relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" />) and with the specified comparison method to sort by.
            </summary>
      <param name="columnRowIndex">The index of a column (or a row, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) relative to the <see cref="P:GemBox.Spreadsheet.SortState.Range" /> that an added <see cref="T:GemBox.Spreadsheet.SortLevel" /> applies to.</param>
      <param name="comparison">The comparison method to sort by.</param>
      <returns>This <see cref="T:GemBox.Spreadsheet.SortState" /> to specify additional sort levels or to apply sort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnRowIndex" /> is less than zero or is equal to or greater than <see cref="P:GemBox.Spreadsheet.CellRange.Width" /> (or <see cref="P:GemBox.Spreadsheet.CellRange.Height" />, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) of the <see cref="P:GemBox.Spreadsheet.SortState.Range" />.</exception>
      <exception cref="T:System.ArgumentException">Column/row at the specified index is being sorted by the same criteria more than once. Delete the duplicate sort criteria and try again.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SortState.Apply">
      <summary>
            Performs the sorting of this <see cref="P:GemBox.Spreadsheet.SortState.Range" /> based on this <see cref="T:GemBox.Spreadsheet.SortState" /> settings.
            </summary>
      <exception cref="T:System.InvalidOperationException">Sort range contains merged cells.</exception>
      <remarks>
            Hidden (<see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Hidden" /> is <see langword="true" />) rows (or columns, if <see cref="P:GemBox.Spreadsheet.SortState.LeftToRight" /> is <see langword="true" />) won't be sorted.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.SortState.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.SortState" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.SortState" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetColor">
      <summary>
            Represents a spreadsheet color.
            </summary>
      <remarks>
        <para>Spreadsheet color can either be empty / none, automatic, theme, standard or custom.</para>
        <para>Empty, automatic, theme and standard colors can be created using the factory method <see cref="M:GemBox.Spreadsheet.SpreadsheetColor.FromName(GemBox.Spreadsheet.ColorName)" /> which accepts <see cref="T:GemBox.Spreadsheet.ColorName" /> parameter.</para>
        <para>
          <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color">System.Drawing.Color</see> nor any other, technology-specific, color type wasn't deliberately used, because GemBox.Spreadsheet public interface is exposed only through GemBox.Spreadsheet and .NET BCL (base class library) types.</para>
        <para>To maintain backward compatibility <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> implements implicit conversion operators to and from <see href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color">System.Drawing.Color</see>.</para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelFont.Color" />
      <seealso cref="P:GemBox.Spreadsheet.CellBorder.LineColor" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternBackgroundColor" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelFillPattern.GradientColor1" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelFillPattern.GradientColor2" />
      <seealso cref="P:GemBox.Spreadsheet.ExcelWorksheet.TabColor" />
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetColor.IsEmpty">
      <summary>
            Specifies whether this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure is uninitialized.
            </summary>
      <value>
        <see langword="true" /> if this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure is uninitialized; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetColor.R">
      <summary>
            Gets the red component value of this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure.
            </summary>
      <value>
            The red component value of this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetColor.G">
      <summary>
            Gets the green component value of this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure.
            </summary>
      <value>
            The green component value of this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetColor.B">
      <summary>
            Gets the blue component value of this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure.
            </summary>
      <value>
            The blue component value of this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.FromArgb(System.Int32)">
      <summary>
            Creates a <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure from a 32-bit ARGB value.
            </summary>
      <param name="argb">A value specifying the 32-bit ARGB value.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure with the specified value.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.FromArgb(System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure from the specified 8-bit color values (red, green, and blue). The alpha value is implicitly 255 (fully opaque). Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits.
            </summary>
      <param name="red">The red component value for the new <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />. Valid values are 0 through 255.</param>
      <param name="green">The green component value for the new <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />. Valid values are 0 through 255.</param>
      <param name="blue">The blue component value for the new <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />. Valid values are 0 through 255.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure with the specified values.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Parameter <paramref name="red" />, <paramref name="green" />, or <paramref name="blue" /> is less than 0 or greater than 255.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.FromName(GemBox.Spreadsheet.ColorName)">
      <summary>
            Creates a <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure from the specified predefined color.
            </summary>
      <param name="name">An element of the <see cref="T:GemBox.Spreadsheet.ColorName" /> enumeration.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure with the specified value.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.ToArgb">
      <summary>
            Gets the 32-bit ARGB value of this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure.
            </summary>
      <returns>The 32-bit ARGB value of this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.Equals(GemBox.Spreadsheet.SpreadsheetColor)">
      <summary>
            Determines whether the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.
            </summary>
      <param name="other">The other <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> to compare with this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.</param>
      <returns>
        <see langword="true" /> if the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> and is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.op_Equality(GemBox.Spreadsheet.SpreadsheetColor,GemBox.Spreadsheet.SpreadsheetColor)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.op_Inequality(GemBox.Spreadsheet.SpreadsheetColor,GemBox.Spreadsheet.SpreadsheetColor)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.op_Implicit(GemBox.Spreadsheet.SpreadsheetColor)~System.Drawing.Color">
      <summary>
            Performs an implicit conversion from <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> to <see cref="T:GemBox.Drawing.Color" />.
            </summary>
      <param name="color">The input <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.</param>
      <returns>
            The output <see cref="T:GemBox.Drawing.Color" /> which is the result of the conversion.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.op_Implicit(System.Drawing.Color)~GemBox.Spreadsheet.SpreadsheetColor">
      <summary>
            Performs an implicit conversion from <see cref="T:GemBox.Drawing.Color" /> to <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.
            </summary>
      <param name="color">The input <see cref="T:GemBox.Drawing.Color" /> color.</param>
      <returns>
            The output <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> which is the result of the conversion.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetException">
      <summary>
            Represents errors that can occur in the GemBox.Spreadsheet component. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SpreadsheetException" /> class. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SpreadsheetException" /> class with a specified error message. 
            </summary>
      <param name="msg">Message string.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SpreadsheetException" /> class with a specified error message 
            and a reference to the inner exception that is the cause of this exception. 
            </summary>
      <param name="msg">Message string.</param>
      <param name="inner">Inner exception.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SpreadsheetException" /> class with serialized data. 
            </summary>
      <param name="info">Serialization info.</param>
      <param name="context">Serialization context.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetHyperlink">
      <summary>
            Hyperlink class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlink.Exists">
      <summary>
            If hyperlink exists returns true, otherwise returns false.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlink.IsExternal">
      <summary>
            Defines if hyperlink location is in this excel file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlink.ToolTip">
      <summary>
            Gets or sets ToolTip for hyperlink.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlink.Location">
      <summary>
            Gets or sets the location string for hyperlink.
            <remarks>URL has to be in escaped format (you can use <see cref="M:System.Uri.EscapeUriString(System.String)">System.Uri.EscapeUriString</see> method).</remarks></summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlink.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> and is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlink.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlink.op_Equality(GemBox.Spreadsheet.SpreadsheetHyperlink,GemBox.Spreadsheet.SpreadsheetHyperlink)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlink.op_Inequality(GemBox.Spreadsheet.SpreadsheetHyperlink,GemBox.Spreadsheet.SpreadsheetHyperlink)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection">
      <summary>
            Collection of hyperlinks (<see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />).
            </summary>
      <remarks>
            You can set cell style to underline and font color to blue in order to appear as hyperlink, that is not done automatically.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.Item(System.Int32)">
      <summary>
            Gets the hyperlink at the specified index.
            </summary>
      <param name="index">The zero-based index of the hyperlink.</param>
      <returns>The hyperlink at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument <paramref name="index" /> is out of range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.Count">
      <summary>
            Gets the number of hyperlinks contained in the collection. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.Clear">
      <summary>
            Removes all hyperlinks. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the hyperlink at the specified index.
            </summary>
      <param name="index">The zero-based index of the hyperlink to remove.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.Remove(GemBox.Spreadsheet.SpreadsheetHyperlink)">
      <summary>
            Removes the first occurrence of a specific <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> from the collection.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> to remove from the collection.</param>
      <returns>
        <see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the original collection.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetIcon">
      <summary>
            Represents a spreadsheet icon.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIcon.None">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> instance whose <see cref="P:GemBox.Spreadsheet.SpreadsheetIcon.IconStyle" /> is equal to <see cref="F:GemBox.Spreadsheet.SpreadsheetIconStyle.None" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetIcon.#ctor(GemBox.Spreadsheet.SpreadsheetIconStyle,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" />.
            </summary>
      <param name="iconStyle">The icon style.</param>
      <param name="id">The identifier of the icon from the set of icons specified by <paramref name="iconStyle" /> (usually a value between 0 and 4).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="iconStyle" /> cannot be set to <see cref="F:GemBox.Spreadsheet.SpreadsheetIconStyle.Custom" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="id" /> must be equal to 0 if <paramref name="iconStyle" /> is <see cref="F:GemBox.Spreadsheet.SpreadsheetIconStyle.None" /> or must be equal to or greater than 0 and less than then number of icons defined in the <paramref name="iconStyle" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetIcon.IconStyle">
      <summary>
            Gets the icon style.
            </summary>
      <value>
            The icon style.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetIcon.Id">
      <summary>
            Gets the identifier of the icon from the set of icons specified in <see cref="P:GemBox.Spreadsheet.SpreadsheetIcon.IconStyle" />.
            </summary>
      <value>
            The identifier of the icon from the set of icons specified in <see cref="P:GemBox.Spreadsheet.SpreadsheetIcon.IconStyle" />.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetIcon.Equals(GemBox.Spreadsheet.SpreadsheetIcon)">
      <summary>
            Determines whether the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> instance.
            </summary>
      <param name="other">The other <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> to compare with this <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> instance.</param>
      <returns>
        <see langword="true" /> if the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetIcon.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> and is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetIcon.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetIcon.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetIcon.op_Equality(GemBox.Spreadsheet.SpreadsheetIcon,GemBox.Spreadsheet.SpreadsheetIcon)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetIcon.op_Inequality(GemBox.Spreadsheet.SpreadsheetIcon,GemBox.Spreadsheet.SpreadsheetIcon)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetIcon" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetIconStyle">
      <summary>
            Represents an enumeration of visually distinct icon sets.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.None">
      <summary>
            No Cell Icon.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.Custom">
      <summary>
        <para>The custom icon set.</para>
        <para>Used only as a return value of <see cref="P:GemBox.Spreadsheet.ConditionalFormatting.IconSetCondition.IconStyle" /> if icon set conditional formatting rule contains icons of different styles or icons are not ordered.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.ThreeArrows">
      <summary>
            3 Arrows.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.ThreeArrowsGray">
      <summary>
            3 Arrows (Gray).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.ThreeFlags">
      <summary>
            3 Flags.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.ThreeTrafficLights">
      <summary>
            3 Traffic Lights.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.ThreeTrafficLightsRimmed">
      <summary>
            3 Traffic Lights (Rimmed).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.ThreeSigns">
      <summary>
            3 Signs.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.ThreeSymbolsCircled">
      <summary>
            3 Symbols (Circled).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.ThreeSymbols">
      <summary>
            3 Symbols.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.ThreeStars">
      <summary>
            3 Stars.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.ThreeTriangles">
      <summary>
            3 Triangles.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.FourArrows">
      <summary>
            4 Arrows.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.FourArrowsGray">
      <summary>
            4 Arrows (Gray).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.FourRedToBlack">
      <summary>
            Red To Black.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.FourRatings">
      <summary>
            4 Ratings.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.FourTrafficLights">
      <summary>
            4 Traffic Lights.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.FiveArrows">
      <summary>
            5 Arrows.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.FiveArrowsGray">
      <summary>
            5 Arrows (Gray).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.FiveRatings">
      <summary>
            5 Ratings.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.FiveQuarters">
      <summary>
            5 Quarters.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetIconStyle.FiveBoxes">
      <summary>
            Five Boxes.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetInfo">
      <summary>
            Contains static licensing methods and diagnostic information about executing GemBox.Spreadsheet assembly.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.SpreadsheetInfo.FreeLimitReached">
      <summary>
            Occurs in loading or saving <see cref="T:GemBox.Spreadsheet.ExcelFile" /> when GemBox.Spreadsheet assembly is used with <b>FREE-LIMITED-KEY</b> license key and free limit is reached.
            </summary>
      <remarks>
            This event is raised when GemBox.Spreadsheet assembly is used with <b>FREE-LIMITED-KEY</b> license key and maximum number of rows (150 rows) or sheets (5 sheets) are reached.
            <para>Free mode will read / write first 150 rows/5 sheets normally and, if file has more than 150 rows or 5 sheets, it will throw <see cref="T:GemBox.Spreadsheet.FreeLimitReachedException" />.</para><para>You can use this event to continue using the assembly in a trial mode for performance testing (set <see cref="P:GemBox.Spreadsheet.FreeLimitEventArgs.FreeLimitReachedAction" /> to 
            <see cref="F:GemBox.Spreadsheet.FreeLimitReachedAction.ContinueAsTrial" />) or to stop further reading/writing (set <see cref="P:GemBox.Spreadsheet.FreeLimitEventArgs.FreeLimitReachedAction" /> to 
            <see cref="F:GemBox.Spreadsheet.FreeLimitReachedAction.Stop" />).</para><para>Trial mode will read and write all file content but will insert word "TRIAL" on random places in the file.</para><para>For more information about GemBox.Spreadsheet evaluation and licensing, see <see href="https://www.gemboxsoftware.com/spreadsheet/docs/evaluation-and-licensing.html" target="_self">evaluation and licensing</see>.</para></remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetInfo.Title">
      <summary>
            GemBox.Spreadsheet assembly title.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetInfo.FullVersion">
      <summary>
            GemBox.Spreadsheet assembly full version.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetInfo.SetLicense(System.String)">
      <summary>
            Call this method from your application to set GemBox.Spreadsheet serial key.
            </summary>
      <remarks>
        <para>You should call this method before using any other class from GemBox.Spreadsheet library. 
            Key can only be set once (if you try second key, it will be ignored).
            The best place to call this method is from static constructor of your application's main class.</para>
        <para>Valid serial key has multiple groups of alphanumeric characters, separated with dashes.</para>
        <para>Free version serial key is: <b>FREE-LIMITED-KEY</b>.</para>
      </remarks>
      <param name="serialKey">Serial key.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.Style">
      <summary>
            Represents a workbook (master) style which can be shared by multiple cells.
            </summary>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="T:GemBox.Spreadsheet.CellStyleCollection" />
    </member>
    <member name="P:GemBox.Spreadsheet.Style.Hidden">
      <summary>
            Gets or sets a value indicating whether this style is hidden in the application UI.
            </summary>
      <value>
        <see langword="true" /> if this style is hidden in the application UI; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.IncludeNumber">
      <summary>
            Gets or sets a value indicating whether the number formatting specified for this style will be used when this style is applied to a cell.
            </summary>
      <value>
        <see langword="true" /> if number formatting specified for this style will be used when this style is applied to a cell; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.IncludeAlignment">
      <summary>
            Gets or sets a value indicating whether the alignment formatting specified for this style will be used when this style is applied to a cell.
            </summary>
      <value>
        <see langword="true" /> if alignment formatting specified for this style will be used when this style is applied to a cell; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.IncludeFont">
      <summary>
            Gets or sets a value indicating whether the font formatting specified for this style will be used when this style is applied to a cell.
            </summary>
      <value>
        <see langword="true" /> if font formatting specified for this style will be used when this style is applied to a cell; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.IncludeBorder">
      <summary>
            Gets or sets a value indicating whether the border formatting specified for this style will be used when this style is applied to a cell.
            </summary>
      <value>
        <see langword="true" /> if border formatting specified for this style will be used when this style is applied to a cell; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.IncludeFill">
      <summary>
            Gets or sets a value indicating whether the fill formatting specified for this style will be used when this style is applied to a cell.
            </summary>
      <value>
        <see langword="true" /> if fill formatting specified for this style will be used when this style is applied to a cell; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.IncludeProtection">
      <summary>
            Gets or sets a value indicating whether the protection formatting specified for this style will be used when this style is applied to a cell.
            </summary>
      <value>
        <see langword="true" /> if protection formatting specified for this style will be used when this style is applied to a cell; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.Language">
      <summary>
            Gets or sets the language for this style.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.Name">
      <summary>
            Gets or sets the name of this style.
            </summary>
      <value>
            The name of this style.
            </value>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <exception cref="T:System.InvalidOperationException">Name cannot be changed if style is built-in.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.Tables.BuiltInTableStyleName">
      <summary>
            Represents a <see cref="T:GemBox.Spreadsheet.Tables.Table" /> built-in styles.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.None">
      <summary>
            No built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight1">
      <summary>
            '<b>TableStyleLight1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight2">
      <summary>
            '<b>TableStyleLight2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight3">
      <summary>
            '<b>TableStyleLight3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight4">
      <summary>
            '<b>TableStyleLight4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight5">
      <summary>
            '<b>TableStyleLight5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight6">
      <summary>
            '<b>TableStyleLight6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight7">
      <summary>
            '<b>TableStyleLight7</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight8">
      <summary>
            '<b>TableStyleLight8</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight9">
      <summary>
            '<b>TableStyleLight9</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight10">
      <summary>
            '<b>TableStyleLight10</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight11">
      <summary>
            '<b>TableStyleLight11</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight12">
      <summary>
            '<b>TableStyleLight12</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight13">
      <summary>
            '<b>TableStyleLight13</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight14">
      <summary>
            '<b>TableStyleLight14</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight15">
      <summary>
            '<b>TableStyleLight15</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight16">
      <summary>
            '<b>TableStyleLight16</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight17">
      <summary>
            '<b>TableStyleLight17</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight18">
      <summary>
            '<b>TableStyleLight18</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight19">
      <summary>
            '<b>TableStyleLight19</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight20">
      <summary>
            '<b>TableStyleLight20</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleLight21">
      <summary>
            '<b>TableStyleLight21</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium1">
      <summary>
            '<b>TableStyleMedium1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium2">
      <summary>
            '<b>TableStyleMedium2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium3">
      <summary>
            '<b>TableStyleMedium3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium4">
      <summary>
            '<b>TableStyleMedium4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium5">
      <summary>
            '<b>TableStyleMedium5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium6">
      <summary>
            '<b>TableStyleMedium6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium7">
      <summary>
            '<b>TableStyleMedium7</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium8">
      <summary>
            '<b>TableStyleMedium8</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium9">
      <summary>
            '<b>TableStyleMedium9</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium10">
      <summary>
            '<b>TableStyleMedium10</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium11">
      <summary>
            '<b>TableStyleMedium11</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium12">
      <summary>
            '<b>TableStyleMedium12</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium13">
      <summary>
            '<b>TableStyleMedium13</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium14">
      <summary>
            '<b>TableStyleMedium14</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium15">
      <summary>
            '<b>TableStyleMedium15</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium16">
      <summary>
            '<b>TableStyleMedium16</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium17">
      <summary>
            '<b>TableStyleMedium17</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium18">
      <summary>
            '<b>TableStyleMedium18</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium19">
      <summary>
            '<b>TableStyleMedium19</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium20">
      <summary>
            '<b>TableStyleMedium20</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium21">
      <summary>
            '<b>TableStyleMedium21</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium22">
      <summary>
            '<b>TableStyleMedium22</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium23">
      <summary>
            '<b>TableStyleMedium23</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium24">
      <summary>
            '<b>TableStyleMedium24</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium25">
      <summary>
            '<b>TableStyleMedium25</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium26">
      <summary>
            '<b>TableStyleMedium26</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium27">
      <summary>
            '<b>TableStyleMedium27</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleMedium28">
      <summary>
            '<b>TableStyleMedium28</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleDark1">
      <summary>
            '<b>TableStyleDark1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleDark2">
      <summary>
            '<b>TableStyleDark2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleDark3">
      <summary>
            '<b>TableStyleDark3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleDark4">
      <summary>
            '<b>TableStyleDark4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleDark5">
      <summary>
            '<b>TableStyleDark5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleDark6">
      <summary>
            '<b>TableStyleDark6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleDark7">
      <summary>
            '<b>TableStyleDark7</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleDark8">
      <summary>
            '<b>TableStyleDark8</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleDark9">
      <summary>
            '<b>TableStyleDark9</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleDark10">
      <summary>
            '<b>TableStyleDark10</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.BuiltInTableStyleName.TableStyleDark11">
      <summary>
            '<b>TableStyleDark11</b>' built-in style.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Tables.Table">
      <summary>
            Represents a worksheet table.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.Table.Name">
      <summary>
            Gets the table name.
            </summary>
      <value>
            The table name.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.Table.Columns">
      <summary>
            Gets the collection of table columns.
            </summary>
      <value>
            The collection of table columns.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.Table.Rows">
      <summary>
            Gets the collection of table rows.
            </summary>
      <value>
            The collection of table rows.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.Table.BuiltInStyle">
      <summary>
            Gets or sets the built-in style used in the body of the <see cref="T:GemBox.Spreadsheet.Tables.Table" />.
            </summary>
      <value>
            The built-in style used in the body of the <see cref="T:GemBox.Spreadsheet.Tables.Table" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.Table.StyleOptions">
      <summary>
            Gets or sets the options to be applied to the <see cref="T:GemBox.Spreadsheet.Tables.Table" /> style.
            </summary>
      <value>
            The options to be applied to the <see cref="T:GemBox.Spreadsheet.Tables.Table" /> style.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.Table.Range">
      <summary>
            Gets the table range.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </value>
      <remarks>
            Property returns complete table range which includes header row and, if enabled, totals row.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.Table.DataRange">
      <summary>
            Gets the table data range.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </value>
      <remarks>
            Property returns table range without header row and, if enabled, totals row.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.Table.HasHeaderRow">
      <summary>
            Gets if table has header row or not
            </summary>
      <value>
        <c>True</c> if this table has header row; otherwise, <c>false</c></value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.Table.HasTotalsRow">
      <summary>
            Gets or sets a value indicating whether this table has a totals row.
            </summary>
      <value>
        <c>True</c> if this table has totals row; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.Table.Filter">
      <summary>
            Gets or sets the table filter. Returns <see langword="null" /> if no <see cref="T:GemBox.Spreadsheet.AutoFilter" /> is active.
            </summary>
      <value>
            The table filter.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.Table.Sort">
      <summary>
            Gets the table sort.
            </summary>
      <value>
            The table sort.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.Table.AlternativeText">
      <summary>
            Gets the table alternative text.
            </summary>
      <value>
            The alternative text.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.Table.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Tables.Table" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Tables.Table" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.Table.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.Tables.Table" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.Tables.Table" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.Tables.Table" /> and is equal to this <see cref="T:GemBox.Spreadsheet.Tables.Table" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.Table.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.Tables.Table" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.Tables.Table" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Tables.TableAlternativeText">
      <summary>
            Represents alternative, text-based representation of the information contained in the parent <see cref="T:GemBox.Spreadsheet.Tables.Table" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableAlternativeText.Title">
      <summary>
            Gets or sets the alternative title.
            </summary>
      <value>
            The alternative title.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableAlternativeText.Description">
      <summary>
            Gets or sets the alternative description.
            </summary>
      <value>
            The alternative description.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Tables.TableCollection">
      <summary>
            A collection of <see cref="T:GemBox.Spreadsheet.Tables.Table" /> items.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.Tables.Table" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.Tables.Table" /> at the specified index.
            </value>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.Tables.Table" />.</param>
      <returns>
            The <see cref="T:GemBox.Spreadsheet.Tables.Table" /> at the specified index.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableCollection.Item(System.String)">
      <summary>
            Gets <see cref="T:GemBox.Spreadsheet.Tables.Table" /> described by name from the collection.
            </summary>
      <param name="name">Name of the table.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.Tables.Table" />s contained in the collection.
            </summary>
      <value>
            The number of <see cref="T:GemBox.Spreadsheet.Tables.Table" />s contained in the collection.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableCollection.GetEnumerator">
      <summary>
            Gets the collection enumerator.
            </summary>
      <returns>
            The collection enumerator.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableCollection.Add(System.String,System.String,System.Boolean)">
      <summary>
            Adds a new <see cref="T:GemBox.Spreadsheet.Tables.Table" /> to the collection.
            </summary>
      <param name="name">The name of the <see cref="T:GemBox.Spreadsheet.Tables.Table" />.</param>
      <param name="range">The <see cref="T:GemBox.Spreadsheet.Tables.Table" /> cell range.</param>
      <param name="hasHeaders">Specifies whether the range contains a header row.</param>
      <returns>
            Newly added <see cref="T:GemBox.Spreadsheet.Tables.Table" />.
            </returns>
      <remarks>
            Method creates and adds a new table to the worksheet.
            If <paramref name="hasHeaders" /> is <c>true</c> first row in specified range will be used as header row; otherwise, table's range will be expanded by inserting a header row.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableCollection.Add(System.String,GemBox.Spreadsheet.CellRange,System.Boolean)">
      <summary>
            Adds a new <see cref="T:GemBox.Spreadsheet.Tables.Table" /> to the collection.
            </summary>
      <param name="name">The name of the <see cref="T:GemBox.Spreadsheet.Tables.Table" />.</param>
      <param name="range">The <see cref="T:GemBox.Spreadsheet.Tables.Table" /> cell range.</param>
      <param name="hasHeaders">Specifies whether the range contains a header row.</param>
      <returns>
            Newly added <see cref="T:GemBox.Spreadsheet.Tables.Table" />.
            </returns>
      <remarks>
            Method creates and adds a new table to the worksheet.
            If <paramref name="hasHeaders" /> is <c>true</c> first row in specified range will be used as header row; otherwise, table's range will be expanded by inserting a header row.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="range" /> is null.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="range" /> doesn't belong to the parent worksheet.
            </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:GemBox.Spreadsheet.Tables.Table" /> or <see cref="T:GemBox.Spreadsheet.DefinedName" /> with same name already exists.
            </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableCollection.RemoveAt(System.Int32,GemBox.Spreadsheet.RemoveShiftDirection)">
      <summary>
            Removes the <see cref="T:GemBox.Spreadsheet.Tables.Table" /> at the specified index.
            </summary>
      <param name="index">The table index.</param>
      <param name="direction">The removal shift direction.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableCollection.Remove(GemBox.Spreadsheet.Tables.Table,GemBox.Spreadsheet.RemoveShiftDirection)">
      <summary>
            Removes the specified <see cref="T:GemBox.Spreadsheet.Tables.Table" />.
            </summary>
      <param name="table">The table.</param>
      <param name="direction">The removal shift direction.</param>
      <returns>
        <c>True</c> if <see cref="T:GemBox.Spreadsheet.Tables.Table" /> was removed from the collection; otherwise, <c>false</c>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="table" /> is null.
            </exception>
    </member>
    <member name="T:GemBox.Spreadsheet.Tables.TableColumn">
      <summary>
            Represents a <see cref="T:GemBox.Spreadsheet.Tables.Table" /> column.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableColumn.Parent">
      <summary>
            Gets the parent <see cref="T:GemBox.Spreadsheet.Tables.Table" />.
            </summary>
      <value>
            The parent <see cref="T:GemBox.Spreadsheet.Tables.Table" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableColumn.NameCore">
      <summary>
            Gets the colum name without filling any value if it is null
            </summary>
      <value>
            The colum name
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableColumn.Index">
      <summary>
            Gets the column index.
            </summary>
      <value>
            The column index.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableColumn.Range">
      <summary>
            Gets the column range.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </value>
      <remarks>
            Property returns complete column range which includes header row and, if enabled, totals row.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableColumn.DataRange">
      <summary>
            Gets the column data range.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </value>
      <remarks>
            Property returns column range without header row and, if enabled, totals row.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableColumn.Name">
      <summary>
            Gets or sets the column name.
            </summary>
      <value>
            The column name.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableColumn.TotalsRowFunction">
      <summary>
            Gets or sets the totals row function.
            </summary>
      <value>
            The totals row function.
            </value>
      <exception cref="T:System.InvalidOperationException">
            Parent table doesn't have totals row.
            </exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableColumn.TotalsRowFormula">
      <summary>
            Gets or sets the totals row formula.
            </summary>
      <value>
            The totals row formula.
            </value>
      <exception cref="T:System.InvalidOperationException">
            Parent table doesn't have totals row.
            </exception>
    </member>
    <member name="T:GemBox.Spreadsheet.Tables.TableColumnCollection">
      <summary>
            A collection of <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" /> items.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableColumnCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" />s contained in the collection.
            </summary>
      <value>
            The number of <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" />s contained in the collection.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableColumnCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" />.
            </value>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" />.</param>
      <returns>
            The <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" /> at the specified index.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableColumnCollection.Item(System.String)">
      <summary>
            Gets <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" /> described by name from the collection.
            </summary>
      <param name="name">Name of the table column.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableColumnCollection.GetEnumerator">
      <summary>
            Gets the collection enumerator.
            </summary>
      <returns>
            The collection enumerator.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableColumnCollection.Add">
      <summary>
            Adds a new <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" /> to the collection.
            </summary>
      <returns>
            Newly added <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableColumnCollection.Insert(System.Int32)">
      <summary>
            Inserts a new <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" /> at the specified index.
            </summary>
      <param name="index">The column index.</param>
      <returns>
            Newly added <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is out of range.
            </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableColumnCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" /> at the specified index.
            </summary>
      <param name="index">The column index.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableColumnCollection.Remove(GemBox.Spreadsheet.Tables.TableColumn)">
      <summary>
            Removes the specified <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" />.
            </summary>
      <param name="column">The table column.</param>
      <returns>
        <see langword="true" /> if <see cref="T:GemBox.Spreadsheet.Tables.TableColumn" /> was removed from the collection; otherwise, <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> is null.
            </exception>
    </member>
    <member name="T:GemBox.Spreadsheet.Tables.TableRow">
      <summary>
            Represents a <see cref="T:GemBox.Spreadsheet.Tables.Table" /> row.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableRow.Parent">
      <summary>
            Gets the parent <see cref="T:GemBox.Spreadsheet.Tables.Table" />.
            </summary>
      <value>
            The parent <see cref="T:GemBox.Spreadsheet.Tables.Table" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableRow.Index">
      <summary>
            Gets the row index.
            </summary>
      <value>
            The row index.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableRow.DataRange">
      <summary>
            Gets the row data range.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </value>
    </member>
    <member name="T:GemBox.Spreadsheet.Tables.TableRowCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.Tables.Table" /> rows, not including header and, if enabled, totals row.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableRowCollection.Count">
      <summary>
            Gets the number of rows contained in the table, not including the header row and, if enabled, totals row.
            </summary>
      <value>
            The number of rows contained in the table.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Tables.TableRowCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.Tables.TableRow" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:GemBox.Spreadsheet.Tables.TableRow" />.
            </value>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.Tables.TableRow" />.</param>
      <returns>
            The <see cref="T:GemBox.Spreadsheet.Tables.TableRow" /> at the specified index.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableRowCollection.Add">
      <summary>
            Adds a new <see cref="T:GemBox.Spreadsheet.Tables.TableRow" />.
            </summary>
      <returns>
            Added <see cref="T:GemBox.Spreadsheet.Tables.TableRow" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableRowCollection.Add(System.Object[])">
      <summary>
            Adds a new <see cref="T:GemBox.Spreadsheet.Tables.TableRow" /> with the specified cell values.
            </summary>
      <param name="cellValues">The values for row's cells.</param>
      <returns>
            Added <see cref="T:GemBox.Spreadsheet.Tables.TableRow" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableRowCollection.Add(System.Int32)">
      <summary>
            Adds the specified number of new <see cref="T:GemBox.Spreadsheet.Tables.TableRow" />s.
            </summary>
      <param name="count">The number of <see cref="T:GemBox.Spreadsheet.Tables.TableRow" />s to add.</param>
      <returns>
            Added <see cref="T:GemBox.Spreadsheet.Tables.TableRow" />s.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableRowCollection.Insert(System.Int32)">
      <summary>
            Inserts a new <see cref="T:GemBox.Spreadsheet.Tables.TableRow" /> at the specified index.
            </summary>
      <param name="index">The row index.</param>
      <returns>
            Inserted <see cref="T:GemBox.Spreadsheet.Tables.TableRow" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is out of range.
            </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableRowCollection.Insert(System.Int32,System.Object[])">
      <summary>
            Inserts a new <see cref="T:GemBox.Spreadsheet.Tables.TableRow" /> with the specified cell values.
            </summary>
      <param name="index">The row index.</param>
      <param name="cellValues">The values for row's cells.</param>
      <returns>
            Inserted <see cref="T:GemBox.Spreadsheet.Tables.TableRow" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is out of range.
            </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableRowCollection.Insert(System.Int32,System.Int32)">
      <summary>
            Inserts the specified number of new <see cref="T:GemBox.Spreadsheet.Tables.TableRow" />s at the specified index.
            </summary>
      <returns>
            Inserted <see cref="T:GemBox.Spreadsheet.Tables.TableRow" />s.
            </returns>
      <param name="index">The row index.</param>
      <param name="count">The number of rows to insert.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is out of range
            or
            <paramref name="count" /> is less than 1.
            </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableRowCollection.Remove(GemBox.Spreadsheet.Tables.TableRow)">
      <summary>
            Removes the specified <see cref="T:GemBox.Spreadsheet.Tables.TableRow" />.
            </summary>
      <param name="row">The table row.</param>
      <returns>
        <see langword="true" /> if <see cref="T:GemBox.Spreadsheet.Tables.TableRow" /> was removed from the collection; otherwise, <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="row" /> is null.
            </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableRowCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the row at the specified index.
            </summary>
      <param name="index">The row index.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is out of range.
            </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableRowCollection.RemoveAt(System.Int32,System.Int32)">
      <summary>
            Removes the specified number of rows at the specified index.
            </summary>
      <param name="index">The row index.</param>
      <param name="count">The number of rows to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is out of range.
            or
            <paramref name="count" /> is less than 1.
            </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Tables.TableRowCollection.GetEnumerator">
      <summary>
            Gets the collection enumerator.
            </summary>
      <returns>
            The collection enumerator.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Tables.TableStyleOptions">
      <summary>
            Specifies which options are applied to a <see cref="T:GemBox.Spreadsheet.Tables.Table" /> style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TableStyleOptions.None">
      <summary>
            Do not apply any option.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TableStyleOptions.FirstColumn">
      <summary>
            Show the first column.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TableStyleOptions.LastColumn">
      <summary>
            Show the last column.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TableStyleOptions.BandedRows">
      <summary>
            Show row stripe formatting for the table.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TableStyleOptions.BandedColumns">
      <summary>
            Show column stripe formatting for the table.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Tables.TotalsRowFunction">
      <summary>
            Total row functions.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TotalsRowFunction.Custom">
      <summary>
            Custom function.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TotalsRowFunction.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TotalsRowFunction.Average">
      <summary>
            Average.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TotalsRowFunction.CountNumber">
      <summary>
            Count of number cells.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TotalsRowFunction.Count">
      <summary>
            Count of number and non-empty cells.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TotalsRowFunction.Max">
      <summary>
            Maximum value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TotalsRowFunction.Min">
      <summary>
            Minimum value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TotalsRowFunction.StdDev">
      <summary>
            Standard deviation.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TotalsRowFunction.Sum">
      <summary>
            Sum.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Tables.TotalsRowFunction.Var">
      <summary>
            Variance.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.TextDirection">
      <summary>
            Represents available reading order options used in <see cref="P:GemBox.Spreadsheet.CellStyle.TextDirection" /> member. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.TextDirection.Context">
      <summary>
            Context Dependent if the first non-whitespace character is a strong right-to-left character, 
            the reading order is right-to-left; otherwise, the reading order is left-to-right.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.TextDirection.LeftToRight">
      <summary>
            The reading order is left-to-right.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.TextDirection.RightToLeft">
      <summary>
            The reading order is right-to-left.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.TiffCompression">
      <summary>
            An enumeration of supported compression schemes for Tagged Image File Format (TIFF) when saving an <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to an image using an <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.TiffCompression.Default">
      <summary>
            The encoder attempts to save the bitmap with the best possible compression schema.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.TiffCompression.None">
      <summary>
            The Tagged Image File Format (TIFF) image will not be compressed.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.TiffCompression.Ccitt3">
      <summary>
            The CCITT3 compression schema.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.TiffCompression.Ccitt4">
      <summary>
            The CCITT4 compression schema.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.TiffCompression.Lzw">
      <summary>
            The LZW compression schema.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.TiffCompression.Rle">
      <summary>
            The RLE compression schema.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.TiffCompression.Zip">
      <summary>
            Zip compression schema.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Top10Filter">
      <summary>
            Represents a filter that filters by a top N (percent or number of items).
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-autofilter/112">Excel AutoFiltering example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.Top10Filter.Top">
      <summary>
        <para>Gets or sets a value indicating whether or not to filter by top order. A <see langword="false" /> value filters by bottom order.</para>
        <para>Default value is <see langword="true" />.</para>
      </summary>
      <value>
        <see langword="true" /> to filter by top order; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Top10Filter.Percent">
      <summary>
        <para>Gets or sets a value indicating whether or not to filter by percent value of the column. A <see langword="false" /> value filters by number of items.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
      <value>
        <see langword="true" /> to filter by percent value of the column; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Top10Filter.FilterType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.FilterType.Top10" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.FilterType.Top10" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.Top10Filter.Value">
      <summary>
            Gets or sets the top or bottom value to use as the filter criteria. For example "Filter by Top 10 Percent" or "Filter by Top 5 Items".
            </summary>
      <value>
            The top or bottom value to use as the filter criteria.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Value must be greater than zero.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Top10Filter.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Top10Filter" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Top10Filter" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="T:GemBox.Spreadsheet.UnderlineStyle">
      <summary>
            Represents the different types of possible underline formatting used in <see cref="P:GemBox.Spreadsheet.ExcelFont.UnderlineStyle" /> member.
            </summary>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.ExcelFont.UnderlineStyle" />
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.None">
      <summary>
            No underline.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.Single">
      <summary>
            Single-line underlining under each character in the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.Double">
      <summary>
            Double-line underlining under each character in the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.SingleAccounting">
      <summary>
        <para>Single-line accounting underlining under each character in the cell.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.UnderlineStyle.Single" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.DoubleAccounting">
      <summary>
        <para>Double-line accounting underlining under each character in the cell.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.UnderlineStyle.Double" />.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ValuesFilter">
      <summary>
            Represents a filter that filters by a list of values.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-autofilter/112">Excel AutoFiltering example</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.ValuesFilter.FilterType">
      <summary>
            Gets the <see cref="F:GemBox.Spreadsheet.FilterType.Values" /> value.
            </summary>
      <value>
            The <see cref="F:GemBox.Spreadsheet.FilterType.Values" /> value.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.ValuesFilter.Values">
      <summary>
        <para>Gets the list of values to filter by.</para>
        <para>The list can contain <see langword="null" />, <see cref="T:System.String" /> and <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> values.</para>
      </summary>
      <value>
            The list of values to filter by.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.ValuesFilter.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ValuesFilter" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ValuesFilter" /> instance.
            </returns>
      <remarks>This method should be used primarily for debugging purposes and should be considered volatile (format of its return value might change in future versions).</remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.ValuesFilter.SetValues(System.Collections.IEnumerable)">
      <summary>
        <para>Sets the list of values to filter by.</para>
        <para>The list can contain <see langword="null" />, <see cref="T:System.String" /> and <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> values.</para>
      </summary>
      <param name="items">The list of values to filter by.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="items" /> contains an item which is not <see langword="null" />, <see cref="T:System.String" /> or <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ValuesFilter.SetValues(System.Object[])">
      <summary>
        <para>Sets the list of values to filter by.</para>
        <para>The list can contain <see langword="null" />, <see cref="T:System.String" /> and <see cref="T:GemBox.Spreadsheet.DateTimeGroup" /> values.</para>
      </summary>
      <param name="items">The list of values to filter by.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="items" /> contains an item which is not <see langword="null" />, <see cref="T:System.String" /> or <see cref="T:GemBox.Spreadsheet.DateTimeGroup" />.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.Vba.VbaModule">
      <summary>
            Represents the module in <see cref="T:GemBox.Spreadsheet.Vba.VbaProject" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Vba.VbaModule.Name">
      <summary>
            Gets or sets the name of <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Vba.VbaModule.Code">
      <summary>
            Gets or sets the code of <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Vba.VbaModule.Type">
      <summary>
            Gets the type of <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModule.Equals(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModule.GetHashCode">
      <inheritdoc />
    </member>
    <member name="T:GemBox.Spreadsheet.Vba.VbaModuleCollection">
      <summary>
            Represents the collection of <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.
            </summary>
      <summary>
            Represents the collection of <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Vba.VbaModuleCollection.Count">
      <summary>
            Gets the number of elements contained.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Vba.VbaModuleCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> at the specified index.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> to get.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> that corresponds to the given index.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Vba.VbaModuleCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> with the given name.
            </summary>
      <param name="name">Name of the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> to get.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> that corresponds to the given name.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModuleCollection.Add(System.String)">
      <summary>
            Creates and returns a new <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> with the given name and with the type of <see cref="F:GemBox.Spreadsheet.Vba.VbaModuleType.Procedural" />.
            </summary>
      <param name="name">Name of the returning <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> that is created and added to the collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModuleCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModuleCollection.Contains(System.String)">
      <summary>
            Indicates whether this collection contains the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> object with the specified <paramref name="name" />.
            </summary>
      <param name="name">The name of the module to locate.</param>
      <returns>
        <see langword="true" /> if the collection contains an item with the <paramref name="name" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModuleCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModuleCollection.Remove(System.String)">
      <summary>
            Removes the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> by name.
            </summary>
      <param name="name">Name of the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> contained in the collection.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModuleCollection.Remove(GemBox.Spreadsheet.Vba.VbaModule)">
      <summary>
            Removes the given <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.
            </summary>
      <param name="vbaModule">The <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> that will be removed from this collection.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModuleCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> from the given index.
            </summary>
      <param name="index">The index of the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> that will be removed.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModuleCollection.TryGet(System.String,GemBox.Spreadsheet.Vba.VbaModule@)">
      <summary>
            Tries to get the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> with the specified <paramref name="name" />.
            </summary>
      <param name="name">Name of the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> contained in the collection.</param>
      <param name="vbaModule">The found <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> with the given <paramref name="name" />.</param>
      <returns>
        <see langword="true" /> if the collection contains an item with the <paramref name="name" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Vba.VbaModuleCollection.Item(GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> that is bound to the given <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <param name="worksheet">The <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> that has the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> being bound.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> that is bound to the given worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModuleCollection.Add(GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Creates and returns a new <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> bound to the given <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <param name="worksheet">The worksheet to bind the module.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> that is created and added to the collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModuleCollection.Add(GemBox.Spreadsheet.ExcelWorksheet,System.String)">
      <summary>
            Creates and returns a new <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> with the given name and bound to the given <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <param name="worksheet">The <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> to bind <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.</param>
      <param name="name">Name of the returning <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> that is created and added to the collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModuleCollection.Add(System.String,GemBox.Spreadsheet.Vba.VbaModuleType)">
      <summary>
        <para>Creates and returns a new <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> with the given name and type.</para>
        <para>If the given <paramref name="vbaModuleType" /> is <see cref="F:GemBox.Spreadsheet.Vba.VbaModuleType.Document" />, returning <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> will be bound to <see cref="T:GemBox.Spreadsheet.ExcelFile" />.</para>
      </summary>
      <param name="name">Name of the returning <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.</param>
      <param name="vbaModuleType">Type of the returning <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> that is created and added to the collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModuleCollection.Contains(GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Indicates whether this collection contains the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> object with the specified <paramref name="excelWorksheet" />.
            </summary>
      <param name="excelWorksheet">The <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> that binds <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.</param>
      <returns>
        <see langword="true" /> if the collection contains an item bound to the <paramref name="excelWorksheet" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Vba.VbaModuleCollection.TryGet(GemBox.Spreadsheet.ExcelWorksheet,GemBox.Spreadsheet.Vba.VbaModule@)">
      <summary>
            Tries to get the <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> with the specified <paramref name="excelWorksheet" />.
            </summary>
      <param name="excelWorksheet">The <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> that binds <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.</param>
      <param name="vbaModule">The found <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> with the given <paramref name="excelWorksheet" />.</param>
      <returns>
        <see langword="true" /> if the collection contains an item that is bound to the <paramref name="excelWorksheet" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Vba.VbaModuleType">
      <summary>
            Represents the type of <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Vba.VbaModuleType.Procedural">
      <summary>
            A collection of subroutines and functions.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Vba.VbaModuleType.Document">
      <summary>
            A type of VBA project item that specifies a module for embedded macros and programmatic access operations that are associated with a document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Vba.VbaModuleType.Class">
      <summary>
            A module that contains the definition for a new object. Each instance of a class creates a new object, and procedures that are defined in the module become properties and methods of the object.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Vba.VbaModuleType.Designer">
      <summary>
            A VBA module that extends the methods and properties of an ActiveX control that has been registered with the project.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Vba.VbaProject">
      <summary>
            Represents the VBA project.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Vba.VbaProject.Modules">
      <summary>
            Gets all <see cref="T:GemBox.Spreadsheet.Vba.VbaModule" /> objects.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Vba.VbaProject.Name">
      <summary>
            Gets or sets the name of the <see cref="T:GemBox.Spreadsheet.Vba.VbaProject" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.VerticalAlignmentStyle">
      <summary>
            Represents available vertical alignment options used in <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" /> member. 
            </summary>
      <remarks>
        <para>Conceptually, cell formatting is divided into following groups:</para>
        <list type="bullet">
          <item>
            <description>
              <b>Number</b> - indicates how to format and render the numeric value of a cell. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat" />.
        </description>
          </item>
          <item>
            <description>
              <b>Alignment</b> - formatting information pertaining to text alignment in cells. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" />, <see cref="P:GemBox.Spreadsheet.CellStyle.Rotation" />, <see cref="P:GemBox.Spreadsheet.CellStyle.IsTextVertical" />, <see cref="P:GemBox.Spreadsheet.CellStyle.WrapText" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit" />.
        </description>
          </item>
          <item>
            <description>
              <b>Font</b> - defines the properties for the used font. Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Font" />.
        </description>
          </item>
          <item>
            <description>
              <b>Border</b> - expresses a single set of cell border formats (left, right, top, bottom and diagonal). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.Borders" />.
        </description>
          </item>
          <item>
            <description>
              <b>Fill</b> - specifies fill formatting (pattern or gradient). Associated property is <see cref="P:GemBox.Spreadsheet.CellStyle.FillPattern" />.
        </description>
          </item>
          <item>
            <description>
              <b>Protection</b> - contains protection properties associated with the cell. Associated properties are <see cref="P:GemBox.Spreadsheet.CellStyle.Locked" /> and <see cref="P:GemBox.Spreadsheet.CellStyle.FormulaHidden" />.
        </description>
          </item>
        </list>
        <para>
      Additional <see cref="T:GemBox.Spreadsheet.CellStyle" /> properties not associated with any formatting group are:
    </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.Name" /> - name of the referenced <see cref="T:GemBox.Spreadsheet.Style">workbook style</see>.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.QuotePrefix" /> - <see langword="true" /> to store numeric value of a cell as text; otherwise, <see langword="false" />.
        </description>
          </item>
          <item>
            <description>
              <see cref="P:GemBox.Spreadsheet.CellStyle.IsDefault" /> - <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook style</see> is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting; otherwise, <see langword="false" />.
        </description>
          </item>
        </list>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> contains a set of <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">master styles</see> which can be referenced by multiple cells.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.ExcelFile">Workbook</see> must always contain at least one <see cref="T:GemBox.Spreadsheet.Style">master style</see> which cannot be removed and is, by default, referenced by all cells. This default style is <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>.
    </para>
        <para>
          <see cref="T:GemBox.Spreadsheet.Style">Workbook style</see> can either be built-in or user-defined. Built-in style is accessible from <see cref="P:GemBox.Spreadsheet.ExcelFile.Styles">workbook styles</see> via <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> enumeration.
    </para>
        <para>
      Cell formatting group (Number, Alignment, Font, Border, Fill or Protection) (and its associated properties) is resolved from <see cref="P:GemBox.Spreadsheet.CellStyle.Name">referenced</see> <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see>, unless cell formatting group or its associated property is modified.
    </para>
        <para>
      Cell formatting is available for one or more cells through <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property which is available on <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and <see cref="T:GemBox.Spreadsheet.CellRange" /> types.
      Cell formatting specified on <see cref="T:GemBox.Spreadsheet.ExcelColumn" /> and <see cref="T:GemBox.Spreadsheet.ExcelRow" /> types through <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style" /> property is simply propagated to cell formatting of its <see cref="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells" />.
    </para>
        <note type="note">
          <para>
        For performance reasons, cell formatting on <see cref="T:GemBox.Spreadsheet.CellRange" /> is resolved based just on its top-left cell formatting, except borders which are resolved based on corner cells depending on border side.
      </para>
          <para>
        Setting cell formatting property on <see cref="T:GemBox.Spreadsheet.CellRange" /> is propagated to each cell in a range.
      </para>
        </note>
        <para>
      To set <see cref="T:GemBox.Spreadsheet.Style">workbook (master) style</see> to one or more cells, simply assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property.
    </para>
        <note type="tip">
          <para>
      Preferable way to modify formatting property of multiple cells is to get <see cref="T:GemBox.Spreadsheet.CellRange" /> to which all those cells belong, and use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range to make the modification.
    </para>
          <para>
      If modifying multiple formatting properties of a <see cref="T:GemBox.Spreadsheet.CellRange" />, without preserving unmodified formatting properties, preferable way is to create new instance of <see cref="T:GemBox.Spreadsheet.CellStyle" />, make modifications on it, and assign it to <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property of that range.
    </para>
        </note>
        <para>
      GemBox.Spreadsheet internally takes care not to allocate unnecessary cells when formatting a range of cells (for example, when formatting <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">all worksheet cells</see>) and to cache formatting information of equally formatted cells, at the appropriate time, to reduce memory footprint.
    </para>
      </remarks>
      <seealso cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" />
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Top">
      <summary>
            The vertical alignment is aligned-to-top.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Center">
      <summary>
            The vertical alignment is centered across the height of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Bottom">
      <summary>
            The vertical alignment is aligned-to-bottom.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Justify">
      <summary>
        <para>When text direction is horizontal: the vertical alignment of lines of text is distributed vertically, where each line of text inside the cell is evenly distributed across the height of the cell, with flush top and bottom margins.</para>
        <para>When text direction is vertical: similar behavior as horizontal justification. The alignment is justified (flush top and bottom in this case). For each line of text, each line of the wrapped text in a cell is aligned to the top and bottom (except the last line). If no single line of text wraps in the cell, then the text is not justified.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Top" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Distributed">
      <summary>
        <para>When text direction is horizontal: the vertical alignment of lines of text is distributed vertically, where each line of text inside the cell is evenly distributed across the height of the cell, with flush top and bottom margins.</para>
        <para>When text direction is vertical: behaves exactly as distributed horizontal alignment. The first words in a line of text (appearing at the top of the cell) are flush with the top edge of the cell, and the last words of a line of text are flush with the bottom edge of the cell, and the line of text is distributed evenly from top to bottom.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Center" />.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.VerticalPageBreak">
      <summary>
            Specifies a vertical position where the new page begins when the worksheet is printed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.VerticalPageBreak.Column">
      <summary>
            Index of the first column of the new page.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.VerticalPageBreak.FirstRow">
      <summary>
            Index of the first row of the new page.
            </summary>
      <remarks>
            Use 0 (first row) if you don't care.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.VerticalPageBreak.LastRow">
      <summary>
            Index of the last row of the new page.
            </summary>
      <remarks>
            Use 65535 (last row) if you don't care.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.VerticalPageBreak.CheckBreakIndex(System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.VerticalPageBreak.CheckLimit(System.Int32)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.VerticalPageBreakCollection">
      <summary>
            Collection of vertical page breaks (<see cref="T:GemBox.Spreadsheet.VerticalPageBreak" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.VerticalPageBreakCollection.CreateItem(System.Int32,System.Int32,System.Int32)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.VerticalPageBreakCollection.Add(System.Int32)">
      <summary>
            Adds a new vertical page break left to the specified column.
            </summary>
      <param name="column">The zero-based index of the column.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.VerticalPageBreakCollection.Add(System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a new vertical page break left to the specified column and within specified rows.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="firstRow">The zero-based index of the first row.</param>
      <param name="lastRow">The zero-based index of the last row.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.VerticalPageBreakCollection.Item(System.Int32)">
      <summary>
            Gets or sets the vertical page break at the specified index.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ViewType">
      <summary>
            Specifies the view type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ViewType.Normal">
      <summary>
            Normal view
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ViewType.PageBreakPreview">
      <summary>
            Page break preview
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ViewType.PageLayout">
      <summary>
            Page Layout View
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.WinFormsUtilities.DataGridViewConverter">
      <summary>
        <see cref="T:GemBox.Spreadsheet.WinFormsUtilities.DataGridViewConverter" /> is used for importing <see cref="T:System.Windows.Forms.DataGridView" /> control into <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> and
            exporting a <see cref="T:GemBox.Spreadsheet.CellRange" /> from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> into <see cref="T:System.Windows.Forms.DataGridView" /> control.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-import-export-excel-datagridview/5301">Import and Export Excel to DataGridView in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.WinFormsUtilities.DataGridViewConverter.ImportFromDataGridView(GemBox.Spreadsheet.ExcelWorksheet,System.Windows.Forms.DataGridView,GemBox.Spreadsheet.WinFormsUtilities.ImportFromDataGridViewOptions)">
      <summary>
            Imports data from <see cref="T:System.Windows.Forms.DataGridView" /> control into <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> using specified <see cref="T:GemBox.Spreadsheet.WinFormsUtilities.ImportFromDataGridViewOptions">options</see>.
            </summary>
      <param name="worksheet">Destination <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="dataGridView">Source <see cref="T:System.Windows.Forms.DataGridView" />.</param>
      <param name="options">
        <see cref="T:GemBox.Spreadsheet.WinFormsUtilities.ImportFromDataGridViewOptions" />.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-import-export-excel-datagridview/5301">Import and Export Excel to DataGridView in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.WinFormsUtilities.DataGridViewConverter.ExportToDataGridView(GemBox.Spreadsheet.ExcelWorksheet,System.Windows.Forms.DataGridView,GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions)">
      <summary>
            Imports data from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> to <see cref="T:System.Windows.Forms.DataGridView" /> using specified <see cref="T:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions">options</see>.
            </summary>
      <param name="worksheet">Source <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="dataGridView">Destination <see cref="T:System.Windows.Forms.DataGridView" />.</param>
      <param name="options">
        <see cref="T:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions" />.</param>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-import-export-excel-datagridview/5301">Import and Export Excel to DataGridView in C# and VB.NET</seealso>
    </member>
    <member name="T:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions">
      <summary>
            Represents options for exporting data from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> to <see cref="T:System.Windows.Forms.DataGridView" />.
            </summary>
      <remarks>
            Use default constructor to export used cell range.
            </remarks>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-import-export-excel-datagridview/5301">Import and Export Excel to DataGridView in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of data being exported from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions.StartColumn">
      <summary>
            Gets or sets the index of the first column of data being exported from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions.NumberOfRows">
      <summary>
            Gets or sets the number of rows being exported from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions.NumberOfColumns">
      <summary>
            Gets or sets the number of columns being exported from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions.ColumnHeaders">
      <summary>
            Gets or sets a value indicating whether to use first row of exported data for column headers.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions.HeaderCellPredicate">
      <summary>
            Gets or sets a predicate that determines if the given <see cref="T:GemBox.Spreadsheet.ExcelCell" /> is part of the header.
            This is useful when you don't know in which row a header has been placed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions.HeaderRowSearchingDirection">
      <summary>
            Gets or sets the direction in which the header row will be searched.
            Default value is <see cref="F:GemBox.Spreadsheet.WinFormsUtilities.SearchingDirection.TopToBottom" /></summary>
    </member>
    <member name="M:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions.#ctor">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions" /> class.
            </summary>
      <remarks>
            Use this constructor to export used cell range.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions" /> class.
            </summary>
      <param name="startRow">Index of the first row of data being exported from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="startColumn">Index of the first column of data being exported from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being exported from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfColumns">Number of columns being exported from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.WinFormsUtilities.ExportToDataGridViewOptions" /> class.
            </summary>
      <param name="startCell">Name of the first (top left) cell of data being exported from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being exported from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfColumns">Number of columns being exported from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.WinFormsUtilities.ImportFromDataGridViewOptions">
      <summary>
            Represents options for importing data from <see cref="T:System.Windows.Forms.DataGridView" /> to <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-import-export-excel-datagridview/5301">Import and Export Excel to DataGridView in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.WinFormsUtilities.ImportFromDataGridViewOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of imported data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WinFormsUtilities.ImportFromDataGridViewOptions.StartColumn">
      <summary>
            Gets or sets the index of the first column of imported data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WinFormsUtilities.ImportFromDataGridViewOptions.ColumnHeaders">
      <summary>
            Gets or sets a value indicating whether to import column headers into first row.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.WinFormsUtilities.ImportFromDataGridViewOptions.#ctor">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.WinFormsUtilities.ImportFromDataGridViewOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.WinFormsUtilities.ImportFromDataGridViewOptions.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.WinFormsUtilities.ImportFromDataGridViewOptions" /> class.
            </summary>
      <param name="startRow">Index of the first row of imported data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="startColumn">Index of the first column of imported data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.WinFormsUtilities.ImportFromDataGridViewOptions.#ctor(System.String)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.WinFormsUtilities.ImportFromDataGridViewOptions" /> class.
            </summary>
      <param name="startCell">Name of the first (top left) cell of imported data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.WinFormsUtilities.SearchingDirection">
      <summary>
            Represents a direction in which the header row will be searched.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.WinFormsUtilities.SearchingDirection.TopToBottom">
      <summary>
            Search from top to bottom.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.WinFormsUtilities.SearchingDirection.BottomToTop">
      <summary>
            Search from bottom to top.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.WorkbookProtection">
      <summary>
            Protection settings.
            Supported in XLSX only.
            </summary>
      <remarks>
            Properties in this class are simply written to Excel file and have no effect on the behavior of this library.
            For more information on workbook protection, consult Microsoft Excel documentation.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.WorkbookProtection.PasswordHash">
      <summary>
            Gets or sets the password hash for protected workbook.
            </summary>
      <remarks>
            This property needs to be set to value of type ushort (property is of type int because ushort is not CLS compliant). 
            For setting password it can be also used <see cref="M:GemBox.Spreadsheet.WorkbookProtection.SetPassword(System.String)" /> method. 
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.WorkbookProtection.ProtectStructure">
      <summary>
            Gets or sets if workbook structure is protected.
            Default value is <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorkbookProtection.ProtectWindows">
      <summary>
            Gets or sets if workbook window is protected.
            Default value is <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorkbookProtection.HasPassword">
      <summary>
            Gets a value indicating whether the protected workbook has a passoword.
            </summary>
      <return>
        <see langword="true" /> if the workbook is password protected; otherwise, <see langword="false" />.
            </return>
    </member>
    <member name="M:GemBox.Spreadsheet.WorkbookProtection.SetPassword(System.String)">
      <summary>
            Sets the password for protected workbook.
            </summary>
      <param name="password">The password.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.WorksheetPanes">
      <summary>
            Represents the worksheet panes.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.WorksheetPanes.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.WorksheetPanes" /> class with frozen state.
            </summary>
      <param name="freezedRows">Number of rows visible in the top pane.</param>
      <param name="freezedColumns">Number of columns visible in the left pane.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.WorksheetPanes.#ctor(GemBox.Spreadsheet.PanesState,System.Single,System.Single,System.String,GemBox.Spreadsheet.PanePosition)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.WorksheetPanes" /> class.
            </summary>
      <param name="state">State of the panes.</param>
      <param name="xSplit">If the panes are frozen, xSplit represents the number of columns visible in the left pane. If the panes are not frozen, xSplit represents the position of the split, in 1/20th of a point, 0 (zero) if none.</param>
      <param name="ySplit">If the panes are frozen, ySplit represents the number of rows visible in the top pane. If the panes are not frozen, ySplit represents the position of the split, in 1/20th of a point, 0 (zero) if none.</param>
      <param name="topLeftCell">Top left visible cell in the bottom right pane.</param>
      <param name="activePane">Position of the active pane.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.WorksheetPanes.#ctor(GemBox.Spreadsheet.WorksheetPanes)">
      <summary>
            Copy constructor.
            </summary>
      <param name="sourcePane">Source pane.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.State">
      <summary>
            Gets or sets the state of the panes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.XSplit">
      <summary>
            Gets or sets the XSplit value.
            </summary>
      <remarks>
            If the panes are frozen, xSplit represents the number of columns visible in the top right pane. If the panes are not frozen, xSplit represents the position of the split, in 1/20th of a point, 0 (zero) if none.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.YSplit">
      <summary>
            Gets or sets the XSplit value.
            </summary>
      <remarks>
            If the panes are frozen, ySplit represents the number of rows visible in the top right pane. If the panes are not frozen, ySplit represents the position of the split, in 1/20th of a point, 0 (zero) if none.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.TopLeftCell">
      <summary>
            Gets or sets the top left visible cell in the bottom right pane. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.ActivePane">
      <summary>
            Gets or sets the active pane.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.WorksheetProtection">
      <summary>
            Protection settings.
            Supported in XLSX, XLSB and XLS only.
            </summary>
      <remarks>
            Properties in this class are simply written to Excel file and have no effect on the behavior of this library.
            For more information on worksheet protection, consult Microsoft Excel documentation.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.PasswordHash">
      <summary>
            Gets or sets the password hash for protected sheet.
            </summary>
      <remarks>
            This property needs to be set to <see langword="ushort" /> value (property is of type <see langword="int" /> because <see langword="ushort" /> is not CLS compliant).
            For setting a password, the <see cref="M:GemBox.Spreadsheet.WorksheetProtection.SetPassword(System.String)" /> method can also be used.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.HasPassword">
      <summary>
            Gets a value indicating whether the protected sheet has a passoword.
            </summary>
      <return>
        <see langword="true" /> if the worksheet is password protected; otherwise, <see langword="false" />.
            </return>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowSelectingLockedCells">
      <summary>
            Gets or sets if selecting locked cells is allowed.
            Default value is <see langword="true" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowSelectingUnlockedCells">
      <summary>
            Gets or sets if selecting unlocked cells is allowed.
            Default value is <see langword="true" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowFormattingCells">
      <summary>
            Gets or sets if formatting cells is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowFormattingColumns">
      <summary>
            Gets or sets if formatting columns is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowFormattingRows">
      <summary>
            Gets or sets if formatting rows is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowInsertingColumns">
      <summary>
            Gets or sets if inserting columns is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowInsertingRows">
      <summary>
            Gets or sets if inserting rows is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowInsertingHyperlinks">
      <summary>
            Gets or sets if inserting hyperlinks is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowDeletingColumns">
      <summary>
            Gets or sets if deleting columns is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowDeletingRows">
      <summary>
            Gets or sets if deleting rows is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowSorting">
      <summary>
            Gets or sets if sorting is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowUsingAutoFilter">
      <summary>
            Gets or sets if using autofilter is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowUsingPivotTableReports">
      <summary>
            Gets or sets if using pivot table reports is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowEditingObjects">
      <summary>
            Gets or sets if editing objects is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowEditingScenarios">
      <summary>
            Gets or sets if editing scenarios is allowed.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.WorksheetProtection.SetPassword(System.String)">
      <summary>
            Sets the password for protected sheet.
            </summary>
      <param name="password">The password.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsbLoadOptions">
      <summary>
            Represent options for loading from XLSB file format (Microsoft Excel Binary File Format).
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsbLoadOptions.PreserveUnsupportedFeatures">
      <summary>
            Gets or sets a value indicating whether to preserve XLSB file format features that are not directly supported through GemBox.Spreadsheet object model.
            </summary>
      <value>
        <see langword="true" /> to preserve XLSB file format features that are not directly supported through GemBox.Spreadsheet object model; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Default value is set to <see langword="true" />.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsbLoadOptions.Password">
      <summary>
            Gets or sets the password to open protected / encrypted workbook.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-encryption/701">Excel Encryption for XLSB in C# and VB.NET</seealso>
    </member>
    <member name="E:GemBox.Spreadsheet.XlsbLoadOptions.ProgressChanged">
      <summary>
            Occurs when the loading progress of a file has changed.
            </summary>
      <remarks>
            The file path or stream that was provided as a file source is used as a <see cref="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsbLoadOptions.IsEncrypted(System.String)">
      <summary>
            Determines whether the file is an encrypted XLSB.
            </summary>
      <param name="path">The path from which to read a file.</param>
      <returns>
        <see langword="true" /> if file is an encrypted XLSB; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsbLoadOptions.IsEncrypted(System.IO.Stream)">
      <summary>
            Determines whether the file is an encrypted XLSB.
            </summary>
      <param name="stream">The stream from which to read a file.</param>
      <returns>
        <see langword="true" /> if file is an encrypted XLSB; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsbLoadOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsbLoadOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsbLoadOptions.LoadCore(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.XlsbSaveOptions">
      <summary>
            Represent options for saving to XLSB file format (Microsoft Excel Binary File Format).
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsbSaveOptions.Password">
      <summary>
            Gets or sets the password used to protect / encrypt the workbook.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-encryption/701">Excel Encryption for XLSB in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsbSaveOptions.EnableZip64">
      <summary>
            Gets or sets a value indicating whether to use ZIP64 extensions when saving an XLSB file.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.XlsbSaveOptions.ProgressChanged">
      <summary>
            Occurs when the saving progress of a file has changed.
            </summary>
      <remarks>
            The file path or stream that was provided as a file destination is used as a <see cref="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsbSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsbSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsbSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to XLSB file format.
            </summary>
      <remarks>
            These are the limits:
            <list type="bullet"><item><description>MaxRows: 1048576</description></item><item><description>MaxColumns: 16384</description></item><item><description>MaxColors: 16000000</description></item><item><description>MaxCellStyles: 64000</description></item></list></remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsbSaveOptions.ImageDpi">
      <summary>
      Gets or sets the saved images DPI.
    </summary>
      <value>
      The saved images DPI.
    </value>
      <remarks>
      This property controls the image quality for all images in the file. Larger value results in better-quality images but increases the file size. Setting this property to 0 will disable image optimization. Standard DPI values are:
      <list type="bullet"><item><description>330 - Good quality for HD displays</description></item><item><description>220 - Good quality for most printers and displays</description></item><item><description>150 - Good quality for web pages and projectors</description></item><item><description>96 - Good quality for smaller file sizes</description></item></list></remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsbSaveOptions.ContentType">
      <summary>
            Gets the content-type for PDF file format: <b>application/vnd.ms-excel.sheet.binary.macroEnabled.12</b>.
            </summary>
      <value>
            The content-type for PDF file format.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsbSaveOptions.Save(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.XlsSaveOptions">
      <summary>
            Represents options for saving to, XLS file format (Microsoft Excel Spreadsheet format; Excel 2003 and prior versions) .
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to XLS file format.
            </summary>
      <remarks>
            These are the limits:
            <list type="bullet"><item><description>MaxRows: 65536</description></item><item><description>MaxColumns: 256</description></item><item><description>MaxColors: 56</description></item><item><description>MaxCellStyles: 3979</description></item></list></remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsSaveOptions.ContentType">
      <summary>
            Gets the content-type for XLS file format: <b>application/vnd.ms-excel</b>.
            </summary>
      <value>
            The content-type for XLS file format.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsSaveOptions.Save(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions">
      <summary>
            Represents a class that stores details for signing a workbook saved to XLSX file with a digital signature.
            </summary>
      <remarks>
        <para>Workbook will be digitally signed when saved to a XLSX if <see cref="P:GemBox.Spreadsheet.DigitalSignatureSaveOptions.Certificate" />, <see cref="P:GemBox.Spreadsheet.DigitalSignatureSaveOptions.CertificateBytes" /> or <see cref="P:GemBox.Spreadsheet.DigitalSignatureSaveOptions.CertificatePath" /> is specified, otherwise it will be saved but not digitally signed.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.IsAdvancedElectronicSignature">
      <summary>
            Gets or sets a value indicating whether the signature is <b>X</b>MS <b>Ad</b>vanced <b>E</b>lectronic <b>S</b>ignature (XAdES).
            The default value of this property is <see langword="true" />.
            </summary>
      <value>
        <see langword="true" /> if the signature is <b>X</b>ML <b>Ad</b>vanced <b>E</b>lectronic <b>S</b>ignature (XAdES); otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.CommitmentType">
      <summary>
            Gets or sets the commitment type when signing a document.
            </summary>
      <value>
            The commitment type when signing a document.
            </value>
      <remarks>
            This property is saved to the document only when <see cref="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.IsAdvancedElectronicSignature" /> is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.SignerRole">
      <summary>
            Gets or sets the signer role.
            </summary>
      <value>
            The signer role.
            </value>
      <remarks>
            This property is saved to the document only when <see cref="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.IsAdvancedElectronicSignature" /> is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.Address">
      <summary>
            Get or sets the location at which the signature was created
            </summary>
      <value>
            The location at which the signature was created
            </value>
      <remarks>
            This property is displayed in document only when <see cref="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.IsAdvancedElectronicSignature" /> is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.Address2">
      <summary>
            Get or sets the additional location at which the signature was created
            </summary>
      <value>
            The additional location at which the signature was created
            </value>
      <remarks>
            This property is displayed in document only when <see cref="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.IsAdvancedElectronicSignature" /> is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.City">
      <summary>
            Gets or sets the city associated with the signer
            </summary>
      <value>
            The city associated with the signer
            </value>
      <remarks>
            This property is saved to the document only when <see cref="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.IsAdvancedElectronicSignature" /> is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.State">
      <summary>
            Gets or sets the state or province associated with the signer
            </summary>
      <value>
            The state or province associated with the signer
            </value>
      <remarks>
            This property is saved to the document only when <see cref="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.IsAdvancedElectronicSignature" /> is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.PostalCode">
      <summary>
            Gets or sets the postal or zip code associated with the signer
            </summary>
      <value>
            The postal or zip code associated with the signer
            </value>
      <remarks>
            This property is saved to the document only when <see cref="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.IsAdvancedElectronicSignature" /> is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.Country">
      <summary>
            Gets or sets the country associated with the signer
            </summary>
      <value>
            The country associated with the signer
            </value>
      <remarks>
            This property is saved to the document only when <see cref="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.IsAdvancedElectronicSignature" /> is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.Certificates">
      <summary>
            Gets additional certificates to be embedded in the signature.
            </summary>
      <value>
            The additional certificates to be embedded in the signature.
            </value>
      <remarks>
            This property is saved to the document only when <see cref="P:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.IsAdvancedElectronicSignature" /> is <see langword="true" />.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsxDigitalSignatureSaveOptions" /> class.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsxLoadOptions">
      <summary>
            Represent options for loading from XLSX file format (Microsoft Excel Open XML Spreadsheet; Strict Open XML Spreadsheet; Excel 2007 and later).
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxLoadOptions.PreserveUnsupportedFeatures">
      <summary>
            Gets or sets a value indicating whether to preserve XLSX file format features that are not directly supported through GemBox.Spreadsheet object model.
            </summary>
      <value>
        <see langword="true" /> to preserve XLSX file format features that are not directly supported through GemBox.Spreadsheet object model; otherwise, <see langword="false" />.
            </value>
      <remarks>
        <para>Default value is set to <see langword="true" />.</para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxLoadOptions.Password">
      <summary>
            Gets or sets the password to open protected / encrypted workbook.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-encryption/701">Excel Encryption for XLSX in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxLoadOptions.StreamingMode">
      <summary>
        <para>Gets or sets the streaming mode that allows streamlined reading of <see cref="T:GemBox.Spreadsheet.ExcelRow" />s of each <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> of a loaded <see cref="T:GemBox.Spreadsheet.ExcelFile" />.</para>
        <para>Default value: <see cref="F:GemBox.Spreadsheet.LoadStreamingMode.None" />.</para>
      </summary>
      <value>
            The streaming mode.
            </value>
    </member>
    <member name="E:GemBox.Spreadsheet.XlsxLoadOptions.ProgressChanged">
      <summary>
            Occurs when the loading progress of a file has changed.
            </summary>
      <remarks>
            The file path or stream that was provided as a file source is used as a <see cref="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />.
            </remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsxLoadOptions.IsEncrypted(System.String)">
      <summary>
            Determines whether the file is an encrypted XLSX.
            </summary>
      <param name="path">The path from which to read a file.</param>
      <returns>
        <see langword="true" /> if file is an encrypted XLSX; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsxLoadOptions.IsEncrypted(System.IO.Stream)">
      <summary>
            Determines whether the file is an encrypted XLSX.
            </summary>
      <param name="stream">The stream from which to read a file.</param>
      <returns>
        <see langword="true" /> if file is an encrypted XLSX; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsxLoadOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsxLoadOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsxLoadOptions.LoadCore(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.XlsxLoadOptions.LoadFromDirectoryCore(GemBox.Spreadsheet.ExcelFile,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.XlsxSaveOptions">
      <summary>
            Represent options for saving to XLSX file format (Microsoft Excel Open XML Spreadsheet; Excel 2007 and later).
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-create-write-excel-file/402">Create and write Excel file in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.Type">
      <summary>
            Specifies type of generated file. Set this property only if you want to override default type.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.Password">
      <summary>
            Gets or sets the password used to protect / encrypt the workbook.
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-vb-net-excel-encryption/701">Excel Encryption for XLSX in C# and VB.NET</seealso>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.EnableZip64">
      <summary>
            Gets or sets a value indicating whether to use ZIP64 extensions when saving an XLSX file.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.XlsxSaveOptions.ProgressChanged">
      <summary>
            Occurs when the saving progress of a file has changed.
            </summary>
      <remarks>
            The file path or stream that was provided as a file destination is used as a <see cref="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />.
            </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.DigitalSignatures">
      <summary>
            Gets the digital signature options.
            </summary>
      <value>
            The digital signature options.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsxSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsxSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to XLSX file format.
            </summary>
      <remarks>
            These are the limits:
            <list type="bullet"><item><description>MaxRows: 1048576</description></item><item><description>MaxColumns: 16384</description></item><item><description>MaxColors: 16000000</description></item><item><description>MaxCellStyles: 64000</description></item></list></remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.ImageDpi">
      <summary>
      Gets or sets the saved images DPI.
    </summary>
      <value>
      The saved images DPI.
    </value>
      <remarks>
      This property controls the image quality for all images in the file. Larger value results in better-quality images but increases the file size. Setting this property to 0 will disable image optimization. Standard DPI values are:
      <list type="bullet"><item><description>330 - Good quality for HD displays</description></item><item><description>220 - Good quality for most printers and displays</description></item><item><description>150 - Good quality for web pages and projectors</description></item><item><description>96 - Good quality for smaller file sizes</description></item></list></remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.ContentType">
      <summary>
            Gets the content-type for XLSX file format:
            <list type="bullet"><item><description><b>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</b> if <see cref="P:GemBox.Spreadsheet.XlsxSaveOptions.Type" /> is <see cref="F:GemBox.Spreadsheet.XlsxType.Xlsx" />,</description></item><item><description><b>application/vnd.ms-excel.sheet.macroenabled.12</b> if <see cref="P:GemBox.Spreadsheet.XlsxSaveOptions.Type" /> is <see cref="F:GemBox.Spreadsheet.XlsxType.Xlsm" />,</description></item><item><description><b>application/vnd.openxmlformats-officedocument.spreadsheetml.template</b> if <see cref="P:GemBox.Spreadsheet.XlsxSaveOptions.Type" /> is <see cref="F:GemBox.Spreadsheet.XlsxType.Xltx" />,</description></item><item><description><b>application/vnd.ms-excel.template.macroenabled.12</b> if <see cref="P:GemBox.Spreadsheet.XlsxSaveOptions.Type" /> is <see cref="F:GemBox.Spreadsheet.XlsxType.Xltm" />.</description></item></list></summary>
      <value>
            The content-type for XLSX file format.
            </value>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsxSaveOptions.Save(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="M:GemBox.Spreadsheet.XlsxSaveOptions.SaveToDirectoryCore(GemBox.Spreadsheet.ExcelFile,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.XmlLoadOptions">
      <summary>
            Represents options for loading from XML file format (XML Spreadsheet 2003, also called SpreadsheetML).
            </summary>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-open-read-excel-file/401">Open and read Excel file in C# and VB.NET</seealso>
      <seealso href="https://www.gemboxsoftware.com/spreadsheet/examples/c-sharp-convert-excel-to-pdf/404">Convert Excel files to PDF in C# and VB.NET</seealso>
    </member>
    <member name="M:GemBox.Spreadsheet.XmlLoadOptions.LoadCore(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <member name="T:GemBox.Spreadsheet.XpsSaveOptions">
      <summary>
            Represents options for saving to XML Paper Specification file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XpsSaveOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XpsSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XpsSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XpsSaveOptions.MetafileScaleFactor">
      <summary>
      Gets or sets the scaling factor for rendering metafile (WMF and EMF) images. Greater scaling factor improves quality but also increases file size. Default value is 1.
    </summary>
      <value>
      The metafile scale factor for rendering metafile (WMF and EMF) images.
    </value>
      <remarks>
        <para>Windows Metafile Format (WMF) and Enhanced Metafile Format (EMF) are vector image formats which contain a series of graphics drawing commands usually executed in Windows GDI layer.</para>
        <para>Metafile drawing commands could also be executed in PDF (or XPS) file which is also vector format, but for that Metafile drawing commands would have to be converted to PDF drawing commands.</para>
        <para>GemBox.Document currently doesn't perform this conversion of drawing commands, instead it uses Windows GDI to execute Metafile drawing commands into bitmap which is then encoded to PNG format and embedded into PDF file.</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.XpsSaveOptions.MetafileScaleFactor" /> specifies the size of the bitmap surface, based from the original Metafile surface size, into which Metafile should be drawn / rasterized.
      </para>
        <para>PDF viewer will still scale the bitmap to the original Metafile size, but if the page is zoomed or viewed on a larger surface, quality of the image will be better since it contains more pixels / dots which will become visible while PDF viewer scales down the image.</para>
        <para>
          <see cref="P:GemBox.Spreadsheet.XpsSaveOptions.MetafileScaleFactor" /> increases the quality of the Metafile image in PDF file, but it also increases the size of the PDF file because greater <see cref="P:GemBox.Spreadsheet.XpsSaveOptions.MetafileScaleFactor" /> means greater bitmap surface and more space to store bitmap pixel / color data.
        PNG encoding / compression helps in reducing the space requirement and for complex Metafiles (with a lot of drawing instructions), <see cref="P:GemBox.Spreadsheet.XpsSaveOptions.MetafileScaleFactor" /> of 5 or even greater, might not incur any space overhead relative to the original (complex) Metafile.
      </para>
        <para>
        Default value for <see cref="P:GemBox.Spreadsheet.XpsSaveOptions.MetafileScaleFactor" /> is 1.
      </para>
      </remarks>
    </member>
    <member name="P:GemBox.Spreadsheet.XpsSaveOptions.ContentType">
      <summary>
            Gets the content-type for XPS file format: <b>application/vnd.ms-xpsdocument</b>.
            </summary>
      <value>
            The content-type for XPS file format.
            </value>
    </member>
    <member name="P:GemBox.Spreadsheet.XpsSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to XPS file format.
            </summary>
      <remarks>
            These are the limits:
            <list type="bullet"><item><description>MaxRows: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxColumns: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxColors: <see cref="F:System.Int32.MaxValue" /></description></item><item><description>MaxCellStyles: <see cref="F:System.Int32.MaxValue" /></description></item></list></remarks>
    </member>
    <member name="M:GemBox.Spreadsheet.XpsSaveOptions.Save(GemBox.Spreadsheet.ExcelFile,System.IO.Stream,System.String)">
      <exclude />
    </member>
    <!-- Badly formed XML comment ignored for member "M:External.CompoundFile.CFStorage.TryGetStream(System.String,External.CompoundFile.CFStream@)" -->
    <!-- Badly formed XML comment ignored for member "M:External.CompoundFile.CFStorage.TryGetStorage(System.String,External.CompoundFile.CFStorage@)" -->
    <!-- Badly formed XML comment ignored for member "M:External.CompoundFile.CFStream.Read(System.Byte[],System.Int64,System.Int32)" -->
    <!-- Badly formed XML comment ignored for member "M:External.CompoundFile.CFStream.Read(System.Byte[],System.Int64,System.Int32,System.Int32)" -->
    <!-- Badly formed XML comment ignored for member "M:External.CompoundFile.CompoundFile.AppendData(External.CompoundFile.CFItem,System.Byte[])" -->
    <member name="T:External.CompoundFile.Ver3SizeLimitReached">
      <summary>
            Action to implement when transaction support - sector
            has to be written to the underlying stream (see specs).
            </summary>
    </member>
  </members>
</doc>